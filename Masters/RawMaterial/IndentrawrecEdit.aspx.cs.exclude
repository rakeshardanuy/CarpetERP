using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Text;
public partial class Masters_RawMaterial_IndentrawrecEdit : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            if (Session["varCompanyId"] == null)
            {
                Response.Redirect("~/Login.aspx");
            }
            txtprmid.Text = "0";
            TXTPRTID.Text = "0";
            UtilityModule.ConditionalComboFill(ref ddCompName, "Select companyid, companyname from companyinfo order by companyname", true, "Select Comp Name");
            UtilityModule.ConditionalComboFill(ref ddProcessName, " Select Distinct PROCESS_NAME_ID,process_name from PROCESS_NAME_MASTER pm inner join IndentMaster im on pm.PROCESS_NAME_ID=im.processid order by PROCESS_NAME_ID", true, "Select Process Name");
            UtilityModule.ConditionalComboFill(ref ddgodown, "Select godownid,godownname from godownmaster order by godownname", true, "Select GodownName");
            ddCompName.SelectedIndex = 1;
            txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
            lablechange();
        }
    }
    public void lablechange()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            con.Open();
            string categoryname = SqlHelper.ExecuteScalar(con, CommandType.Text, "select DISTINCT ps.Parameter_name from parameter_setting ps ,master_parameter mp where ps.Parameter_Id=mp.Parameter_Id And  ps.company_id='1' and ps.user_id='1' and  ps.parameter_id='6'").ToString();
            lblcategoryname.Text = categoryname;
            string itemname = SqlHelper.ExecuteScalar(con, CommandType.Text, "select DISTINCT ps.Parameter_name from parameter_setting ps ,master_parameter mp where ps.Parameter_Id=mp.Parameter_Id And  ps.company_id='1' and ps.user_id='1' and  ps.parameter_id='7'").ToString();
            lblitemname.Text = itemname;
            string qualityname = SqlHelper.ExecuteScalar(con, CommandType.Text, "select DISTINCT ps.Parameter_name from parameter_setting ps ,master_parameter mp where ps.Parameter_Id=mp.Parameter_Id And  ps.company_id='1' and ps.user_id='1' and  ps.parameter_id='1'").ToString();
            lblqualityname.Text = qualityname;
            string design = SqlHelper.ExecuteScalar(con, CommandType.Text, "select DISTINCT ps.Parameter_name from parameter_setting ps ,master_parameter mp where ps.Parameter_Id=mp.Parameter_Id And  ps.company_id='1' and ps.user_id='1' and  ps.parameter_id='2'").ToString();
            lbldesignname.Text = design;
            string color = SqlHelper.ExecuteScalar(con, CommandType.Text, "select DISTINCT ps.Parameter_name from parameter_setting ps ,master_parameter mp where ps.Parameter_Id=mp.Parameter_Id And  ps.company_id='1' and ps.user_id='1' and  ps.parameter_id='3'").ToString();
            lblcolorname.Text = color;
            string shape = SqlHelper.ExecuteScalar(con, CommandType.Text, "select DISTINCT ps.Parameter_name from parameter_setting ps ,master_parameter mp where ps.Parameter_Id=mp.Parameter_Id And  ps.company_id='1' and ps.user_id='1' and  ps.parameter_id='4'").ToString();
            lblshapename.Text = shape;
            string size = SqlHelper.ExecuteScalar(con, CommandType.Text, "select DISTINCT ps.Parameter_name from parameter_setting ps ,master_parameter mp where ps.Parameter_Id=mp.Parameter_Id And  ps.company_id='1' and ps.user_id='1' and  ps.parameter_id='5'").ToString();
            lblsizename.Text = size;
            string shadeColor = SqlHelper.ExecuteScalar(con, CommandType.Text, "select DISTINCT ps.Parameter_name from parameter_setting ps ,master_parameter mp where ps.Parameter_Id=mp.Parameter_Id And  ps.company_id='1' and ps.user_id='1' and  ps.parameter_id='8'").ToString();
            lblshadecolor.Text = shadeColor;
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/IndentrawrecEdit.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
    }

    protected void ddProcessName_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddempname, "SELECT distinct E.EmpId,E.EmpName FROM IndentMaster IM INNER JOIN  EmpInfo E ON IM.PartyId=E.EmpId And IM.Processid=" + ddProcessName.SelectedValue, true, "Select Emp");
    }
    protected void ddempname_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddchallan, "select distinct prmid,challanno from pp_processrecmaster where processid=" + ddProcessName.SelectedValue + " and empid=" + ddempname.SelectedValue, true, "Select Challanno");
    }
    protected void ddchallan_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddindent, @"select distinct id.indentid,id.indentno from indentmaster id inner join pp_processrawtran prt on
      prt.indentid=id.indentid inner join pp_processrawmaster prm on prm.prmid=prt.prmid  where
      prm.processid=" + ddProcessName.SelectedValue + " and prm.empid=" + ddempname.SelectedValue, true, "Select Indentno");
        Fill_Grid();
    }
    private void Fill_Grid()
    {
        gvdetail.DataSource = fill_Data_grid();
        gvdetail.DataBind();
    }
    private DataSet fill_Data_grid()
    {
        DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            string strsql = @"SELECT     dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME, dbo.ITEM_MASTER.ITEM_NAME,IPM.QDCS as Description , dbo.GodownMaster.GodownName, 
                            dbo.PP_ProcessRecTran.RecQuantity, dbo.PP_ProcessRecTran.PRTid
                            FROM dbo.ITEM_MASTER INNER JOIN
                      dbo.ITEM_PARAMETER_MASTER ON dbo.ITEM_MASTER.ITEM_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_ID INNER JOIN
                      dbo.ITEM_CATEGORY_MASTER ON dbo.ITEM_MASTER.CATEGORY_ID = dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID INNER JOIN
                      dbo.GodownMaster INNER JOIN
                      dbo.PP_ProcessRecTran ON dbo.GodownMaster.GoDownID = dbo.PP_ProcessRecTran.Godownid ON 
                      dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.PP_ProcessRecTran.Finishedid
					  inner join ViewFindFinishedidItemidQDCSS IPM on dbo.ITEM_PARAMETER_MASTER.Item_Finished_ID=IPM.Finishedid
                      where dbo.PP_ProcessRecTran.prmid=" + ddchallan.SelectedValue;
            con.Open();
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, strsql);
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/IndentrawrecEdit.aspx");
            Logs.WriteErrorLog("Masters_Rawmeterial_rawRecieve|fill_Data_grid|" + ex.Message);
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
        return ds;
    }

    protected void ddindent_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddCatagory, @" SELECT DISTINCT dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID AS Expr1, dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME
        FROM         dbo.ITEM_MASTER INNER JOIN
                      dbo.ITEM_PARAMETER_MASTER ON dbo.ITEM_MASTER.ITEM_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_ID INNER JOIN
                      dbo.ITEM_CATEGORY_MASTER ON dbo.ITEM_MASTER.CATEGORY_ID = dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID INNER JOIN
                      dbo.IndentDetail INNER JOIN
                      dbo.IndentMaster ON dbo.IndentDetail.IndentId = dbo.IndentMaster.IndentID ON 
                      dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId
            where dbo.IndentMaster.partyid=" + ddempname.SelectedValue + " and IndentMaster.processid=" + ddProcessName.SelectedValue + " and  dbo.Indentmaster.IndentId=" + ddindent.SelectedValue, true, "Select Category Name");
    }
    protected void ddCatagory_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref dditemname, @"SELECT DISTINCT dbo.ITEM_MASTER.ITEM_ID, dbo.ITEM_MASTER.ITEM_NAME FROM  dbo.ITEM_PARAMETER_MASTER INNER JOIN
                      dbo.IndentDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId INNER JOIN
                      dbo.ITEM_MASTER ON dbo.ITEM_PARAMETER_MASTER.ITEM_ID = dbo.ITEM_MASTER.ITEM_ID
WHERE dbo.IndentDetail.IndentId =" + ddindent.SelectedValue + " AND dbo.ITEM_MASTER.CATEGORY_ID =" + ddCatagory.SelectedValue, true, "--Select --");
        ddlcategorycange();
    }


    private void ddlcategorycange()
    {
        ql.Visible = false;
        clr.Visible = false;
        dsn.Visible = false;
        shp.Visible = false;
        sz.Visible = false;
        shd.Visible = false;
        string strsql = "SELECT [CATEGORY_PARAMETERS_ID],[CATEGORY_ID],IPM.[PARAMETER_ID],PARAMETER_NAME " +
                      " FROM [ITEM_CATEGORY_PARAMETERS] IPM inner join PARAMETER_MASTER PM on " +
                      " IPM.[PARAMETER_ID]=PM.[PARAMETER_ID] where [CATEGORY_ID]=" + ddCatagory.SelectedValue;
        DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
        if (ds.Tables[0].Rows.Count > 0)
        {
            foreach (DataRow dr in ds.Tables[0].Rows)
            {
                switch (dr["PARAMETER_ID"].ToString())
                {
                    case "1":
                        ql.Visible = true;

                        break;
                    case "2":
                        clr.Visible = true;
                        UtilityModule.ConditionalComboFill(ref ddcolor, @"SELECT DISTINCT dbo.color.ColorId, dbo.color.ColorName FROm dbo.ITEM_PARAMETER_MASTER INNER JOIN
                      dbo.IndentDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId INNER JOIN
                      dbo.color ON dbo.ITEM_PARAMETER_MASTER.COLOR_ID = dbo.color.ColorId
                      WHERE dbo.IndentDetail.IndentId =" + ddindent.SelectedValue, true, "--Select --");
                        break;
                    case "3":
                        dsn.Visible = true;
                        UtilityModule.ConditionalComboFill(ref dddesign, @"SELECT DISTINCT dbo.Design.designId, dbo.Design.designName  FROM dbo.ITEM_PARAMETER_MASTER INNER JOIN
                      dbo.IndentDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId INNER JOIN
                      dbo.Design ON dbo.ITEM_PARAMETER_MASTER.DESIGN_ID = dbo.Design.designId
                       WHERE  dbo.IndentDetail.IndentId =" + ddindent.SelectedValue, true, "--Select --");

                        break;
                    case "4":
                        shp.Visible = true;
                        UtilityModule.ConditionalComboFill(ref ddshape, @"SELECT DISTINCT dbo.Shape.ShapeId, dbo.Shape.ShapeName  FROM dbo.ITEM_PARAMETER_MASTER INNER JOIN
                      dbo.IndentDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId INNER JOIN
                      dbo.Shape ON dbo.ITEM_PARAMETER_MASTER.SHAPE_ID = dbo.Shape.ShapeId
                      WHERE dbo.IndentDetail.IndentId = " + ddindent.SelectedValue, true, "--Select --");

                        break;
                    case "5":
                        sz.Visible = true;

                        UtilityModule.ConditionalComboFill(ref ddsize, @"SELECT DISTINCT dbo.Size.SizeId, dbo.Size.SizeFt FROM dbo.ITEM_PARAMETER_MASTER INNER JOIN
                      dbo.IndentDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId INNER JOIN
                      dbo.Size ON dbo.ITEM_PARAMETER_MASTER.SIZE_ID = dbo.Size.SizeId
                       WHERE dbo.IndentDetail.IndentId =" + ddindent.SelectedValue, true, "--Size--");
                        break;
                    case "6":
                        shd.Visible = true;
                        UtilityModule.ConditionalComboFill(ref ddlshade, @"SELECT DISTINCT dbo.ShadeColor.ShadecolorId, dbo.ShadeColor.ShadeColorName FROM   dbo.ITEM_PARAMETER_MASTER INNER JOIN
                      dbo.IndentDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId INNER JOIN
                      dbo.ShadeColor ON dbo.ITEM_PARAMETER_MASTER.SHADECOLOR_ID = dbo.ShadeColor.ShadecolorId
                         WHERE dbo.IndentDetail.IndentId =" + ddindent.SelectedValue, true, "--Select--");
                        break;
                }
            }
        }


    }
    protected void dditemname_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue, true, "Select Unit");
        ddlunit.SelectedIndex = 2;
        UtilityModule.ConditionalComboFill(ref dquality, @"SELECT DISTINCT dbo.Quality.QualityId,dbo.Quality.QualityName
                     FROM  dbo.ITEM_PARAMETER_MASTER INNER JOIN
                      dbo.IndentDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId INNER JOIN
                      dbo.Quality ON dbo.ITEM_PARAMETER_MASTER.QUALITY_ID = dbo.Quality.QualityId
                     WHERE dbo.IndentDetail.IndentId =" + ddindent.SelectedValue + "and quality.item_id=" + dditemname.SelectedValue, true, "Select ");
    }
    protected void ddgodown_SelectedIndexChanged(object sender, EventArgs e)
    {

    }
    protected void gvdetail_SelectedIndexChanged(object sender, EventArgs e)
    {
        DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            con.Open();
            ds = null;
            string sql = @"SELECT DISTINCT 
                         PP_ProcessRecTran.PRTid, PP_ProcessRecTran.PRMid,PP_ProcessRecTran.recquantity,ITEM_PARAMETER_MASTER.QUALITY_ID, 
                         ITEM_PARAMETER_MASTER.DESIGN_ID, ITEM_PARAMETER_MASTER.COLOR_ID, ITEM_PARAMETER_MASTER.SHAPE_ID, 
                         ITEM_PARAMETER_MASTER.SIZE_ID, ITEM_PARAMETER_MASTER.SHADECOLOR_ID, PP_ProcessRecMaster.Processid, 
                         PP_ProcessRecMaster.Empid, PP_ProcessRecTran.RecQuantity, PP_ProcessRecTran.Godownid, stock.Qtyinhand, 
                         PP_ProcessRecMaster.Date, Unit.UnitId, ITEM_PARAMETER_MASTER.ProductCode, 
                         ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID, PP_ProcessRecMaster.Companyid, 
                         ITEM_CATEGORY_MASTER.CATEGORY_ID AS CATEGORYID, ITEM_CATEGORY_MASTER.CATEGORY_NAME, 
                         ITEM_PARAMETER_MASTER.ITEM_ID, PP_ProcessRecTran.IndentId,stocktran.stocktranid
                         FROM PP_ProcessRecMaster INNER JOIN
                         PP_ProcessRecTran ON PP_ProcessRecMaster.PRMid = PP_ProcessRecTran.PRMid INNER JOIN
                         ITEM_PARAMETER_MASTER ON PP_ProcessRecTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID INNER JOIN
                         Unit ON PP_ProcessRecTran.UnitId = Unit.UnitId INNER JOIN
                         stock ON stock.ITEM_FINISHED_ID = PP_ProcessRecTran.Finishedid AND Unit.UnitId = PP_ProcessRecTran.UnitId INNER JOIN
                         ITEM_MASTER ON ITEM_PARAMETER_MASTER.ITEM_ID = ITEM_MASTER.ITEM_ID INNER JOIN
                         ITEM_CATEGORY_MASTER ON ITEM_MASTER.CATEGORY_ID = ITEM_CATEGORY_MASTER.CATEGORY_ID inner join stocktran on stock.stockid=stocktran.stockid
                         where dbo.PP_ProcessRecTran.PRTid=" + gvdetail.SelectedValue;
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, sql);
            int prtid = Convert.ToInt32(ds.Tables[0].Rows[0]["prtid"]);
            TXTPRTID.Text = ds.Tables[0].Rows[0]["prtid"].ToString();
            txtprmid.Text = ds.Tables[0].Rows[0]["prmid"].ToString();
            ddCompName.SelectedValue = ds.Tables[0].Rows[0]["companyid"].ToString();
            ddProcessName.SelectedValue = ds.Tables[0].Rows[0]["processid"].ToString();
            UtilityModule.ConditionalComboFill(ref ddempname, "SELECT distinct E.EmpId,E.EmpName FROM IndentMaster IM INNER JOIN  EmpInfo E ON IM.PartyId=E.EmpId And IM.Processid=" + ddProcessName.SelectedValue, true, "Select Emp");
            ddempname.SelectedValue = ds.Tables[0].Rows[0]["Empid"].ToString();
            UtilityModule.ConditionalComboFill(ref ddindent, @"SELECT distinct IndentId, IndentNo FROM dbo.IndentMaster  where dbo.IndentMaster.partyid=" + ddempname.SelectedValue + " and dbo.IndentMaster.processid=" + ddProcessName.SelectedValue, true, "Select Indent No");
            txtdate.Text = ds.Tables[0].Rows[0]["date"].ToString();
            ddindent.SelectedValue = ds.Tables[0].Rows[0]["IndentId"].ToString();
            UtilityModule.ConditionalComboFill(ref ddCatagory, @" SELECT DISTINCT dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID AS CATEGORYID, dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME
                        FROM dbo.ITEM_MASTER INNER JOIN
                        dbo.ITEM_PARAMETER_MASTER ON dbo.ITEM_MASTER.ITEM_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_ID INNER JOIN
                        dbo.ITEM_CATEGORY_MASTER ON dbo.ITEM_MASTER.CATEGORY_ID = dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID INNER JOIN
                        dbo.IndentDetail INNER JOIN
                        dbo.IndentMaster ON dbo.IndentDetail.IndentId = dbo.IndentMaster.IndentID ON 
                        dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.IndentDetail.OFinishedId
                        where dbo .IndentMaster.partyid=" + ddempname.SelectedValue + " and IndentMaster.processid=" + ddProcessName.SelectedValue + " and  dbo.Indentmaster.IndentId=" + ddindent.SelectedValue, true, "Select Category Name");
            //            UtilityModule.ConditionalComboFill(ref ddCatagory, @"SELECT distinct dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID,ITEM_CATEGORY_MASTER.CATEGORY_NAME FROM dbo.pp_processrawmaster INNER JOIN   dbo.pp_ProcessRawTran ON dbo.pp_processrawmaster.PRMid = dbo.pp_ProcessRawTran.PRMid INNER JOIN
            //                                                                           dbo.ITEM_CATEGORY_MASTER ON dbo.pp_ProcessRawTran.Categoryid = dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID
            //                                                                           where  pp_processrawmaster.prmid=" + ddindent.SelectedValue, true, "Select Catagory");
            ddCatagory.SelectedValue = ds.Tables[0].Rows[0]["CATEGORYID"].ToString();
            UtilityModule.ConditionalComboFill(ref dditemname, "select Item_id, Item_Name from Item_Master where Category_Id=" + ddCatagory.SelectedValue, true, "---Select Item----");
            dditemname.SelectedValue = ds.Tables[0].Rows[0]["ITEM_ID"].ToString();
            UtilityModule.ConditionalComboFill(ref dquality, "select qualityid,qualityname from quality", true, "select Quallity");
            UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue, true, "select unit");
            dquality.SelectedValue = ds.Tables[0].Rows[0]["quality_id"].ToString();
            ddlunit.SelectedValue = ds.Tables[0].Rows[0]["unitid"].ToString();
            UtilityModule.ConditionalComboFill(ref dddesign, "select Designid,DesignName from Design Order  by DesignName", true, "--Select Design--");
            UtilityModule.ConditionalComboFill(ref ddcolor, "SELECT ColorId,ColorName FROM Color", true, "--Select Color--");
            UtilityModule.ConditionalComboFill(ref ddshape, "select Shapeid,ShapeName from Shape Order by Shapeid", true, "--Select Shape--");
            dddesign.SelectedValue = ds.Tables[0].Rows[0]["DESIGN_ID"].ToString();
            ddcolor.SelectedValue = ds.Tables[0].Rows[0]["COLOR_ID"].ToString();
            ddshape.SelectedValue = ds.Tables[0].Rows[0]["SHAPE_ID"].ToString();
            UtilityModule.ConditionalComboFill(ref ddlshade, "select shadecolorid,shadecolorname from shadecolor order by shadecolorid", true, "Select ShadeColor");
            ddlshade.SelectedValue = ds.Tables[0].Rows[0]["SHADECOLOR_ID"].ToString();

            txtcode.Text = ds.Tables[0].Rows[0]["productcode"].ToString();
            if (ddlunit.SelectedValue == "1")
            {
                UtilityModule.ConditionalComboFill(ref ddsize, "select sizeid,sizemtr from size where Shapeid=" + ddshape.SelectedValue, true, "select size");
            }
            else if (ddlunit.SelectedValue == "2")
            {
                UtilityModule.ConditionalComboFill(ref ddsize, "select sizeid,sizeft from size where Shapeid=" + ddshape.SelectedValue, true, "select size");
            }
            ddsize.SelectedValue = ds.Tables[0].Rows[0]["size_id"].ToString();
            UtilityModule.ConditionalComboFill(ref ddgodown, "select godownid,godownname from godownmaster", true, "select Godown");
            ddgodown.SelectedValue = ds.Tables[0].Rows[0]["Godownid"].ToString();

            txtrec.Text = ds.Tables[0].Rows[0]["recquantity"].ToString();
            Session["recqtyinhand"] = ds.Tables[0].Rows[0]["recquantity"].ToString();
            Session["issueqty"] = ds.Tables[0].Rows[0]["recquantity"].ToString();
            Session["inhand"] = ds.Tables[0].Rows[0]["qtyinhand"].ToString();
            Session["finishedid"] = ds.Tables[0].Rows[0]["ITEM_FINISHED_ID"].ToString();
            Session["stocktranid"] = ds.Tables[0].Rows[0]["stocktranid"].ToString();
            int id = Convert.ToInt32(Session["finishedid"].ToString());
            if (Convert.ToInt32(dquality.SelectedValue) > 0)
            {
                ql.Visible = true;

            }
            else
            {
                ql.Visible = false;
            }
            if (Convert.ToInt32(dddesign.SelectedValue) > 0)
            {
                dsn.Visible = true;
            }
            else
            {
                dsn.Visible = false;
            }
            int c = (ddcolor.SelectedIndex > 0 ? Convert.ToInt32(ddcolor.SelectedValue) : 0);
            if (c > 0)
            {
                clr.Visible = true;
            }
            else
            {
                clr.Visible = false;
            }
            int s = (ddshape.SelectedIndex > 0 ? Convert.ToInt32(ddshape.SelectedValue) : 0);
            if (s > 0)
            {
                shp.Visible = true;
            }
            else
            {
                shp.Visible = false;
            }
            int si = (ddsize.SelectedIndex > 0 ? Convert.ToInt32(ddsize.SelectedValue) : 0);
            if (si > 0)
            {
                sz.Visible = true;
            }
            else
            {
                sz.Visible = false;
            }
            int sd = (ddlshade.SelectedIndex > 0 ? Convert.ToInt32(ddlshade.SelectedValue) : 0);
            if (sd > 0)
            {
                shd.Visible = true;
            }
            else
            {
                shd.Visible = false;
            }
            string str = "select pt.issuequantity from pp_ProcessRawTran pt inner join pp_processrawmaster pm on pt.prmid=pm.prmid  where pt.finishedid=" + id + "and pt.godownid=" + ddgodown.SelectedValue;
            int quantity = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, str));
            txtrecqty.Text = quantity.ToString();

        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/IndentrawrecEdit.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
            }
        }
        fill_qty();
        btnsave.Text = "Update";
    }
    protected void gvdetail_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Attributes["onmouseover"] = "javascript:setMouseOverColor(this);";
            e.Row.Attributes["onmouseout"] = "javascript:setMouseOutColor(this);";
            e.Row.Attributes["onclick"] = ClientScript.GetPostBackClientHyperlink(this.gvdetail, "Select$" + e.Row.RowIndex);
        }
    }
    protected void gvdetail_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        gvdetail.PageIndex = e.NewPageIndex;
        Fill_Grid();
    }


    protected void save_detail(int Flag)
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);

        string Str = @"SELECT DISTINCT dbo.PP_ProcessRawTran.PRMid, dbo.PP_ProcessRawTran.PRTid
                  FROM         dbo.PP_ProcessRawTran INNER JOIN
                      dbo.IndentMaster INNER JOIN
                      dbo.IndentDetail ON dbo.IndentMaster.IndentID = dbo.IndentDetail.IndentId ON dbo.PP_ProcessRawTran.Indentid = dbo.IndentDetail.IndentId
                      where  dbo.IndentMaster.indentid=" + ddindent.SelectedValue;
        DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, Str);

        Session["PRMid"] = ds.Tables[0].Rows[0]["PRMid"].ToString();
        Session["PRTid"] = ds.Tables[0].Rows[0]["PRTid"].ToString();


        try
        {
            SqlParameter[] arr = new SqlParameter[20];

            arr[0] = new SqlParameter("@prmid", SqlDbType.Int);
            arr[1] = new SqlParameter("@companyid", SqlDbType.Int);
            arr[2] = new SqlParameter("@empid", SqlDbType.Int);
            arr[3] = new SqlParameter("@processid", SqlDbType.Int);
            arr[4] = new SqlParameter("@issuedate", SqlDbType.DateTime);

            arr[5] = new SqlParameter("@prtid", SqlDbType.Int);
            arr[6] = new SqlParameter("@finishedId", SqlDbType.Int);
            arr[7] = new SqlParameter("@godownId", SqlDbType.Int);
            arr[8] = new SqlParameter("@RecQuantity", SqlDbType.Float);
            arr[9] = new SqlParameter("@indentid", SqlDbType.Int);
            arr[10] = new SqlParameter("@UnitId", SqlDbType.Int);
            arr[11] = new SqlParameter("@IssPrmID", SqlDbType.Int);
            arr[12] = new SqlParameter("@IssPrtID", SqlDbType.Int);
            arr[13] = new SqlParameter("@ID", SqlDbType.Int);
            arr[14] = new SqlParameter("@Flag", SqlDbType.Int);
            arr[15] = new SqlParameter("@lotno", SqlDbType.NVarChar, 50);
            arr[16] = new SqlParameter("@challanno", SqlDbType.Int);
            arr[17] = new SqlParameter("@retqty", SqlDbType.Int);
            arr[18] = new SqlParameter("@varuserid", SqlDbType.Int);
            arr[19] = new SqlParameter("@Remark", SqlDbType.Int);
            arr[0].Direction = ParameterDirection.InputOutput;
            arr[0].Value = txtprmid.Text;
            arr[1].Value = ddCompName.SelectedValue;
            arr[2].Value = ddempname.SelectedValue;
            arr[3].Value = ddProcessName.SelectedValue;
            arr[4].Value = txtdate.Text;

            arr[5].Value = Convert.ToInt32(TXTPRTID.Text);
            int ItemFinishedId = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, txtcode, ddlshade, 0, "", Convert.ToInt32(Session["varCompanyId"]));
            arr[6].Value = ItemFinishedId;
            arr[7].Value = Convert.ToInt32(ddgodown.SelectedValue);
            arr[8].Value = txtrec.Text;
            arr[9].Value = ddindent.SelectedValue;
            arr[10].Value = ddlunit.SelectedValue;
            arr[11].Value = Convert.ToInt32(Session["PRMid"].ToString());
            arr[12].Value = Convert.ToInt32(Session["PRTid"].ToString());
            arr[13].Direction = ParameterDirection.Output;
            arr[14].Value = Flag;
            if (txtlotno.Text == "")
            {
                arr[15].Value = "Without Lot No";
            }
            else
            {
                arr[15].Value = txtlotno.Text;
            }
            arr[16].Value = ddchallan.SelectedValue;
            if (txtretrn.Text != "")
            {
                arr[17].Value = txtretrn.Text;
            }
            else { arr[17].Value = "0"; }
            arr[18].Value = Session["varuserid"].ToString();
            arr[19].Value = txtremarks.Text;
            con.Open();
            SqlHelper.ExecuteNonQuery(con, CommandType.StoredProcedure, "[PRO_PP_PRM_recieve]", arr);
            txtindent.Text = arr[13].Value.ToString();
            Session["masterid"] = Convert.ToInt32(arr[0].Value.ToString());
            ddchallan.SelectedValue = arr[16].Value.ToString();
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/IndentrawrecEdit.aspx");
        }
        finally
        {
            con.Close();
            con.Dispose();
        }

    }
    protected void btnsave_Click(object sender, EventArgs e)
    {
        if (lblqty.Visible == false)
        {

            if (pnl1.Enabled)
            {
                int Flag = 1;
                save_detail(Flag);
            }
            else
            {
                int Flag = 0;
                save_detail(Flag);
            }
            SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
            con.Open();
            string str = "select max(gatepassno) from PP_processrecmaster";
            txtgatepass.Text = SqlHelper.ExecuteScalar(con, CommandType.Text, str).ToString();

            SqlTransaction Tran = con.BeginTransaction();
            int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, txtcode, ddlshade, 0, "", Convert.ToInt32(Session["varCompanyId"]));
            int prt = Convert.ToInt32(SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(max(PRTid),0) from PP_ProcessRecTran"));
            try
            {


                if (btnsave.Text == "Update")
                {
                    string delete = "delete from stocktran where stocktranid=" + Convert.ToInt32(Session["stocktranid"].ToString());
                    SqlHelper.ExecuteNonQuery(Tran, CommandType.Text, delete);

                    UtilityModule.StockStockTranTableUpdate2(Varfinishedid, Convert.ToInt32(ddgodown.SelectedValue), Convert.ToInt32(ddCompName.SelectedValue), txtlotno.Text.ToString(), Convert.ToDouble(txtrec.Text), txtdate.Text.ToString(), txtdate.Text.ToString(), "PP_ProcessRecTran", prt, Tran, 1, true, 1, true, Convert.ToDouble(Session["issueqty"]), 0);
                    Tran.Commit();
                }
                else
                {
                    //UtilityModule.StockStockTranTableUpdate2(Varfinishedid, Convert.ToInt32(ddgodown.SelectedValue), Convert.ToInt32(ddCompName.SelectedValue), ddlotno.SelectedItem.Text.ToString(), Convert.ToDouble(txtrec.Text), txtdate.Text.ToString(), txtdate.Text.ToString(), "pp_processrawtran", prt, Tran, 1,true, 1, false, 0);
                    UtilityModule.StockStockTranTableUpdate(Varfinishedid, Convert.ToInt32(ddgodown.SelectedValue), Convert.ToInt32(ddCompName.SelectedValue), txtlotno.Text.ToString(), Convert.ToDouble(txtrec.Text), txtdate.Text.ToString(), DateTime.Now.ToString("dd-MMM-yyyy"), "PP_ProcessRecTran", prt, Tran, 1, true, 1, 0);
                    Tran.Commit();

                }
            }

            catch (Exception ex)
            {
                UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/IndentrawrecEdit.aspx");
                Tran.Rollback();
            }
            finally
            {
                con.Close();
                // raw_stock_update();

            }
            Session["ReportPath"] = "Reports/IndentRawRec.rpt";
            Session["CommanFormula"] = "{V_IndentRawRec.PRMid}=" + Session["masterid"] + " ";
            pnl1.Enabled = false;
            txtcode.Text = "";
            ddCatagory.SelectedValue = null;
            dditemname.SelectedValue = null;
            ddgodown.SelectedValue = null;
            txtissue.Text = "";
            txtrecqty.Text = "";

            dquality.SelectedValue = null;
            dddesign.SelectedValue = null;
            ddcolor.SelectedValue = null;
            ddshape.SelectedValue = null;
            ddsize.SelectedValue = null;
            btnsave.Text = "Save";
            ddlshade.SelectedValue = null;
            Fill_Grid();

        }
        else { lblqty.Visible = true; }
    }

    private void fill_qty()
    {
        int color = 0;
        int quality = 0;
        int design = 0;
        int shape = 0;
        int size = 0;
        int shadeColor = 0;
        if ((ql.Visible == true && dquality.SelectedIndex > 0) || ql.Visible != true)
        {
            quality = 1;
        }
        if (dsn.Visible == true && dddesign.SelectedIndex > 0 || dsn.Visible != true)
        {
            design = 1;
        }
        if (clr.Visible == true && ddcolor.SelectedIndex > 0 || clr.Visible != true)
        {
            color = 1;
        }
        if (shp.Visible == true && ddshape.SelectedIndex > 0 || shp.Visible != true)
        {
            shape = 1;
        }
        if (sz.Visible == true && ddsize.SelectedIndex > 0 || sz.Visible != true)
        {
            size = 1;
        }
        if (shd.Visible == true && ddlshade.SelectedIndex > 0 || shd.Visible != true)
        {
            shadeColor = 1;
        }
        if (quality == 1 && design == 1 && color == 1 && shape == 1 && size == 1 && shadeColor == 1)
        {

            SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
            con.Open();
            int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, txtcode, ddlshade, 0, "", Convert.ToInt32(Session["varCompanyId"]));
            DataSet ds;
            string Str;

            Str = @"SELECT  isnull(SUM(issuequantity),0) as issuequantity
          FROM pp_processrawtran prt inner join indentdetail id on prt.indentid=id.indentid
             where id.ofinishedid=" + Varfinishedid + " and prt.indentid=" + ddindent.SelectedValue + " group by prt.finishedid";
            ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, Str);
            if (ds.Tables[0].Rows.Count > 0)
            {
                txtrecqty.Text = (ds.Tables[0].Rows[0]["issuequantity"].ToString());
            }
            else
            {
                txtrecqty.Text = "0";
            }

            DataSet ds2;
            string Str2;

            Str2 = @"SELECT   isnull(SUM(recquantity),0) as recquantity
   FROM PP_ProcessRectran  where finishedid=" + Varfinishedid + " and indentid=" + ddindent.SelectedValue;
            ds2 = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, Str2);
            if (ds2.Tables[0].Rows.Count > 0)
            {
                txtprerec.Text = (ds2.Tables[0].Rows[0]["recquantity"].ToString());
            }
            else
            {
                txtprerec.Text = "0";
            }

            DataSet ds3;
            string strlot = @" SELECT distinct prt.lotno
          FROM pp_processrawtran prt inner join indentdetail id on prt.indentid=id.indentid
             where id.ifinishedid=" + Varfinishedid + " and prt.indentid=" + ddindent.SelectedValue;
            ds3 = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strlot);
            if (ds3.Tables[0].Rows.Count > 0)
            {
                txtlotno.Text = (ds3.Tables[0].Rows[0]["lotno"].ToString());
            }
            else
            {
                txtlotno.Text = "0";
            }

            Double pending = Convert.ToDouble(txtrecqty.Text) - Convert.ToDouble(txtprerec.Text);
            txtpending.Text = pending.ToString();

        }
        else
        {
            txtrec.Text = "";
            txtprerec.Text = "";
        }
    }
    protected void dquality_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void dddesign_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void ddcolor_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void ddsize_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void ddlshade_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void txtrec_TextChanged(object sender, EventArgs e)
    {
        if (Convert.ToDouble(txtrec.Text) > Convert.ToDouble(txtpending.Text))
        {
            lblqty.Visible = true;
        }
        else
        {
            lblqty.Visible = false;
        }
    }
    protected void btnNew_Click(object sender, EventArgs e)
    {
        pnl1.Enabled = true;
        txtprmid.Text = "0";
        TXTPRTID.Text = "0";
        ddCompName.SelectedValue = null;
        ddProcessName.SelectedValue = null;
        ddempname.SelectedValue = null;
        ddindent.SelectedValue = null;
        txtcode.Text = "";

        ddCatagory.SelectedValue = null;
        dditemname.SelectedValue = null;
        ddgodown.SelectedValue = null;
        txtissue.Text = "";
        txtrecqty.Text = "";
        dquality.SelectedValue = null;
        dddesign.SelectedValue = null;
        ddcolor.SelectedValue = null;
        ddshape.SelectedValue = null;
        ddsize.SelectedValue = null;
        ddlshade.SelectedValue = null;
        txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
        btnsave.Text = "Save";
        lbldate.Visible = false;
        lblmsg.Visible = false;
        lblqty.Visible = false;
        Label2.Visible = false;
    }
    protected void btnpreview_Click(object sender, EventArgs e)
    {
        Report();
    }
    private void Report()
    {
        string qry = @"  SELECT V_IndentRawRec.CATEGORY_NAME,V_IndentRawRec.ITEM_NAME,V_IndentRawRec.QualityName,V_IndentRawRec.DESCRIPTION,V_IndentRawRec.GodownName,V_IndentRawRec.RecQuantity,V_IndentRawRec.lotno,V_IndentRawRec.EmpName,V_IndentRawRec.CompanyName,V_IndentRawRec.gatepassno,V_IndentRawRec.indentno,V_IndentRawRec.EmpAddress,V_IndentRawRec.EmpPhoneNo,V_IndentRawRec.EmpMobile,V_IndentRawRec.CompanyAddress,V_IndentRawRec.CompanyPhoneNo,V_IndentRawRec.CompanyFaxNo,V_IndentRawRec.TinNo,V_IndentRawRec.PRMid
 FROM   V_IndentRawRec where V_IndentRawRec.PRMid=" + Session["masterid"] + "";
        DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, qry);
        if (ds.Tables[0].Rows.Count > 0)
        {
            Session["rptFileName"] = "~\\Reports\\IndentRawRecNew.rpt";
            // Session["rptFileName"] = Session["ReportPath"];
            Session["GetDataset"] = ds;
            Session["dsFileName"] = "~\\ReportSchema\\IndentRawRecNew.xsd";
            StringBuilder stb = new StringBuilder();
            stb.Append("<script>");
            stb.Append("window.open('../../ViewReport.aspx', 'nwwin', 'toolbar=0, titlebar=1,  top=0px, left=0px, scrollbars=1, resizable = yes');</script>");
            ScriptManager.RegisterClientScriptBlock(Page, GetType(), "opn", stb.ToString(), false);
        }
        else { ScriptManager.RegisterStartupScript(Page, GetType(), "opn1", "alert('No Record Found!');", true); }
    }
    protected void gvdetail_RowCreated(object sender, GridViewRowEventArgs e)
    {
        //Add CSS class on header row.
        if (e.Row.RowType == DataControlRowType.Header)
            e.Row.CssClass = "header";

        //Add CSS class on normal row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Normal)
            e.Row.CssClass = "normal";

        //Add CSS class on alternate row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Alternate)
            e.Row.CssClass = "alternate";
    }
}

