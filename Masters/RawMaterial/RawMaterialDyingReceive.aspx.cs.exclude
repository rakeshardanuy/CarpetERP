using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;

public partial class RawMaterialDyingReceive : System.Web.UI.Page
{
    double PriviousQty;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (IsPostBack == false)
        {
            if (Session["varCompanyId"] == null)
            {
                Response.Redirect("~/Login.aspx");
            }
            txtRMPRID.Text = "0";
            txtRMPRDETAILID.Text = "0";
            txtrecqty.Text = "0";
            txtloss.Text = "0";
            txtrate.Text = "0";
            UtilityModule.ConditionalComboFill(ref DDcompanyname, "select Distinct CI.CompanyId,Companyname from Companyinfo CI,Company_Authentication CA Where CA.CompanyId=CI.CompanyId And CA.UserId=" + Session["varuserId"] + " And CI.MasterCompanyId=" + Session["varCompanyId"] + " Order By Companyname", true, "--Select--");
            UtilityModule.ConditionalComboFill(ref DDprocessname, "Select PROCESS_NAME_ID, PROCESS_NAME from PROCESS_NAME_MASTER Where MasterCompanyId=" + Session["varCompanyId"] + " order by PROCESS_NAME", true, "--Select--");
            txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
            UtilityModule.ConditionalComboFill(ref DDgodwonname, "Select GoDownID,GodownName from GodownMaster Where MasterCompanyId=" + Session["varCompanyId"] + " order by GodownName", true, "--Select--");
            lablechange();
            Fill_Grid();
            Session["ReportPath"] = "Reports/rawmaterialprocessrec.rpt";
            Session["CommanFormula"] = " ";
        }
        lblerror.Visible = false;
    }
    public void lablechange()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        String[] ParameterList = new String[8];
        ParameterList = UtilityModule.ParameteLabel(Convert.ToInt32(Session["varCompanyId"]));
        lblcategoryname.Text = ParameterList[5];
        lblitemname.Text = ParameterList[6];
    }
    protected void DDpartyname_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddissueno, @"select rmp.rmpid,gp.gatepassno from gatepass gp, RawMaterialProcessMaster rmp where gp.gatepassno=rmp.gatepass and rmp.empid=" + DDpartyname.SelectedValue, true, "--Select---");
    }
    protected void DDprocessname_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDpartyname, "select EmpId,EmpName from EmpInfo Where MasterCompanyId=" + Session["varCompanyId"] + " order by EmpId", true, "--Select--");
    }
    protected void DDreccategory_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDrecitem, @"Select Distinct Item_Id,Item_Name from Item_Master where Category_Id=" + DDreccategory.SelectedValue + " And MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
    }
    protected void DDrecitem_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDrecdescription, @"select distinct ipm.ITEM_FINISHED_ID,ipm.DESCRIPTION from ITEM_PARAMETER_MASTER ipm,RawMaterialProcessDetail rmp where rmp.RItem_Finished_id =ipm.ITEM_FINISHED_ID and ipm.item_id=" + DDrecitem.SelectedValue + " And ipm.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
    }
    protected void ddissueno_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDreccategory, @"SELECT DISTINCT  dbo.ITEM_MASTER.CATEGORY_ID,dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME FROM dbo.ITEM_CATEGORY_MASTER INNER JOIN dbo.ITEM_MASTER ON dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID = dbo.ITEM_MASTER.CATEGORY_ID INNER JOIN dbo.ITEM_PARAMETER_MASTER ON dbo.ITEM_MASTER.ITEM_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_ID INNER JOIN dbo.CategorySeparate ON dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID = dbo.CategorySeparate.Categoryid INNER JOIN dbo.RawMaterialProcessDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.RawMaterialProcessDetail.RItem_Finished_id where RawMaterialProcessDetail.rmpid=" + ddissueno.SelectedValue + " And ITEM_MASTER.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select---");
    }
    protected void btnsave_Click(object sender, EventArgs e)
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        SqlTransaction Tran = con.BeginTransaction();
        if (btnsave.Text == "Update")
        {
            PriviousQty = Convert.ToDouble(Session["Qty"].ToString());
        }
        try
        {
            SqlParameter[] _arrPara = new SqlParameter[7];
            _arrPara[0] = new SqlParameter("@companyid", SqlDbType.Int);
            _arrPara[1] = new SqlParameter("@RMPR_ID", SqlDbType.Int);
            _arrPara[2] = new SqlParameter("@processid", SqlDbType.Int);
            _arrPara[3] = new SqlParameter("@empid", SqlDbType.Int);
            _arrPara[4] = new SqlParameter("@date", SqlDbType.SmallDateTime);
            _arrPara[5] = new SqlParameter("@RecNo", SqlDbType.Int);
            _arrPara[6] = new SqlParameter("@varuserid", SqlDbType.Int);
            _arrPara[0].Value = DDcompanyname.SelectedValue;
            _arrPara[1].Value = txtRMPRID.Text;
            _arrPara[2].Value = DDprocessname.SelectedValue;
            _arrPara[3].Value = DDpartyname.SelectedValue;
            _arrPara[4].Value = Convert.ToDateTime(txtdate.Text);
            _arrPara[5].Value = Convert.ToInt32(SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(max(RecNo),0)+1  from gatepass"));
            _arrPara[6].Value = Session["varuserid"].ToString();

            SqlParameter[] _arrParaa = new SqlParameter[10];
            _arrParaa[0] = new SqlParameter("@RItem_Finished_id", SqlDbType.Int);
            _arrParaa[1] = new SqlParameter("@RMPR_DETAIL_ID", SqlDbType.Int);
            _arrParaa[2] = new SqlParameter("@RMPR_ID", SqlDbType.Int);
            _arrParaa[3] = new SqlParameter("@Godown", SqlDbType.Int);
            _arrParaa[4] = new SqlParameter("@qty", SqlDbType.Float);
            _arrParaa[5] = new SqlParameter("@loss", SqlDbType.Float);
            _arrParaa[6] = new SqlParameter("@RMPID", SqlDbType.Int);
            _arrParaa[7] = new SqlParameter("@rate", SqlDbType.Float);
            _arrParaa[8] = new SqlParameter("@varuserid", SqlDbType.Int);
            _arrPara[9] = new SqlParameter("@companyid", SqlDbType.Int);
            _arrParaa[0].Value = DDrecdescription.SelectedValue;
            _arrParaa[1].Value = txtRMPRDETAILID.Text;
            _arrParaa[3].Value = DDgodwonname.SelectedValue;
            _arrParaa[4].Value = txtrecqty.Text;
            _arrParaa[5].Value = txtloss.Text;
            _arrParaa[6].Value = ddissueno.SelectedValue;
            _arrParaa[7].Value = txtrate.Text;
            _arrParaa[8].Value = Session["varuserid"].ToString();
            _arrPara[9].Value = DDcompanyname.SelectedValue;
            if (txtrecno.Text == "")
            {
                SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "PRO_RawMatrialDyingPreprationRecMaster", _arrPara);
                _arrParaa[2].Value = (SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select max(RMPR_ID) from RawMaterialProcessRecMaster"));
                SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "PRO_RawMatrialDyingPreprationRecDetails", _arrParaa);

                txtrecno.Text = (SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(max(RecNo),0)+1  from gatepass").ToString());
                int gtpasid = Convert.ToInt32(SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(max(Gatepassid),0)+1  from gatepass"));
                string gatepass = "insert into gatepass(gatepassid,Gatepassno,tablename,RecNo) values('" + gtpasid + "','0','RawMaterialProcessRecMaster','" + txtrecno.Text + "')";
                SqlHelper.ExecuteScalar(Tran, CommandType.Text, gatepass);
                int prt = Convert.ToInt32(SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(max(RMPR_Detail_Id),0) from RawMaterialProcessrecDetail"));
                UtilityModule.StockStockTranTableUpdate(Convert.ToInt32(DDrecdescription.SelectedValue), Convert.ToInt32(DDgodwonname.SelectedValue), Convert.ToInt32(DDcompanyname.SelectedValue), txtlotno.Text, Convert.ToDouble(txtrecqty.Text), Convert.ToDateTime(txtdate.Text).ToString(), Convert.ToDateTime(txtdate.Text).ToString(), "RawMaterialProcessRecDetail", prt, Tran, 1, true, 1, 0);
            }
            else
            {
                _arrParaa[2].Value = (SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select max(RMPR_ID) from RawMaterialProcessRecMaster"));
                SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "PRO_RawMatrialDyingPreprationRecDetails", _arrParaa);
                int prt = Convert.ToInt32(SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(max(RMPR_Detail_Id),0) from RawMaterialProcessrecDetail"));

                if (btnsave.Text == "Update")
                {
                    prt = Convert.ToInt32(txtRMPRDETAILID.Text);
                    UtilityModule.StockStockTranTableUpdate(Convert.ToInt32(DDrecdescription.SelectedValue), Convert.ToInt32(DDgodwonname.SelectedValue), Convert.ToInt32(DDcompanyname.SelectedValue), txtlotno.Text, Convert.ToDouble(txtrecqty.Text), txtdate.Text, txtdate.Text, "RawMaterialProcessRecDetail", prt, Tran, 1, true, 1, 0);
                }
                else
                {
                    UtilityModule.StockStockTranTableUpdate(Convert.ToInt32(DDrecdescription.SelectedValue), Convert.ToInt32(DDgodwonname.SelectedValue), Convert.ToInt32(DDcompanyname.SelectedValue), txtlotno.Text, Convert.ToDouble(txtrecqty.Text), txtdate.Text, txtdate.Text, "RawMaterialProcessRecDetail", prt, Tran, 1, true, 1, 0);
                }
            }
            Tran.Commit();
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMaterialDyingReceive.aspx");
            Tran.Rollback();
        }
        finally
        {
            if (con.State == ConnectionState.Open)
                con.Close();
        }
        btnsave.Text = "Save";
        txtRMPRDETAILID.Text = "0";
        txtRMPRID.Text = "0";
        Fill_Grid();
    }
    protected void txtitemcode_TextChanged(object sender, EventArgs e)
    {
        DataSet ds;
        string Str;
        try
        {
            if (ddissueno.SelectedIndex > 0)
            {
                if (txtitemcode.Text != "")
                {
                    Str = "select IPM.*,IM.CATEGORY_ID from ITEM_PARAMETER_MASTER IPM,ITEM_MASTER IM where IPM.ITEM_ID=IM.ITEM_ID and ProductCode='" + txtitemcode.Text + "' And IM.MasterCompanyId=" + Session["varCompanyId"];
                    ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, Str);
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        UtilityModule.ConditionalComboFill(ref DDrecdescription, @"select distinct ipm.ITEM_FINISHED_ID,ipm.DESCRIPTION from ITEM_PARAMETER_MASTER ipm Where MasterCompanyId=" + Session["varCompanyId"] + "", true, "~Select Description~");
                        DDrecdescription.SelectedValue = ds.Tables[0].Rows[0]["item_finished_id"].ToString();
                        UtilityModule.ConditionalComboFill(ref DDreccategory, @"SELECT DISTINCT  dbo.ITEM_MASTER.CATEGORY_ID,dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME FROM dbo.ITEM_CATEGORY_MASTER INNER JOIN dbo.ITEM_MASTER ON dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID = dbo.ITEM_MASTER.CATEGORY_ID INNER JOIN dbo.ITEM_PARAMETER_MASTER ON dbo.ITEM_MASTER.ITEM_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_ID INNER JOIN dbo.CategorySeparate ON dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID = dbo.CategorySeparate.Categoryid INNER JOIN dbo.RawMaterialProcessDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.RawMaterialProcessDetail.RItem_Finished_id where RawMaterialProcessDetail.rmpid=" + ddissueno.SelectedValue + " And ITEM_MASTER.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select---");
                        DDreccategory.SelectedValue = ds.Tables[0].Rows[0]["CATEGORY_ID"].ToString();
                        UtilityModule.ConditionalComboFill(ref DDrecitem, @"Select Distinct Item_Id,Item_Name from Item_Master where Category_Id=" + DDreccategory.SelectedValue + " And MasterCompanyId=" + Session["varCompanyId"] + "", true, "~Select Item~");
                        DDrecitem.SelectedValue = ds.Tables[0].Rows[0]["ITEM_ID"].ToString();

                    }
                    else
                    {
                        lblerror.Visible = true;
                        lblerror.Text = "ITEM CODE DOES NOT EXISTS....";
                    }
                }
            }
            else
            {
                lblerror.Visible = true;
                lblerror.Text = "FIRST SELECT INDEX NO....";
                txtitemcode.Text = "";
            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMaterialDyingReceive.aspx");
            lblerror.Visible = true;
            lblerror.Text = "Product Code Not Valid According to Category";
        }

    }
    private void Fill_Grid()
    {
        dgrawmaterialreceive.DataSource = Fill_Grid_Data();
        dgrawmaterialreceive.DataBind();
    }
    private DataSet Fill_Grid_Data()
    {
        DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            string strsql = @" SELECT dbo.RawMaterialProcessRecDetail.RMPR_DETAIL_ID as Sr_No, dbo.RawMaterialProcessRecMaster.RMPR_ID, dbo.CompanyInfo.CompanyName, dbo.EmpInfo.EmpName, dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME as " + lblcategoryname.Text + ",dbo.ITEM_MASTER.ITEM_NAME as " + lblitemname.Text + ", dbo.ITEM_PARAMETER_MASTER.DESCRIPTION,GodownMaster_1.GodownName, dbo.RawMaterialProcessRecMaster.Date, dbo.RawMaterialProcessRecDetail.Qty,dbo.RawMaterialProcessRecDetail.Loss, dbo.RawMaterialProcessRecDetail.Rate, dbo.RawMaterialProcessRecMaster.RecNo FROM dbo.RawMaterialProcessRecMaster INNER JOIN dbo.RawMaterialProcessRecDetail ON dbo.RawMaterialProcessRecMaster.RMPR_ID = dbo.RawMaterialProcessRecDetail.RMPR_ID INNER JOIN dbo.CompanyInfo ON dbo.RawMaterialProcessRecMaster.CompanyId = dbo.CompanyInfo.CompanyId INNER JOIN dbo.ITEM_PARAMETER_MASTER ON dbo.RawMaterialProcessRecDetail.ITEM_FINISHED_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID And ITEM_PARAMETER_MASTER.MasterCompanyId=" + Session["varCompanyId"] + " INNER JOIN dbo.GodownMaster AS GodownMaster_1 ON dbo.RawMaterialProcessRecDetail.GodownId = GodownMaster_1.GoDownID INNER JOIN dbo.ITEM_MASTER ON dbo.ITEM_PARAMETER_MASTER.ITEM_ID = dbo.ITEM_MASTER.ITEM_ID INNER JOIN dbo.ITEM_CATEGORY_MASTER ON dbo.ITEM_MASTER.CATEGORY_ID = dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID CROSS JOIN dbo.EmpInfo order by dbo.RawMaterialProcessRecDetail.RMPR_DETAIL_ID";
            con.Open();
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, strsql);
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMaterialDyingReceive.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
        return ds;
    }
    protected void dgrawmaterialreceive_RowDataBound1(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Attributes["onmouseover"] = "javascript:setMouseOverColor(this);";
            e.Row.Attributes["onmouseout"] = "javascript:setMouseOutColor(this);";
            e.Row.Attributes["onclick"] = ClientScript.GetPostBackClientHyperlink(this.dgrawmaterialreceive, "Select$" + e.Row.RowIndex);
        }
    }
    protected void dgrawmaterialreceive_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        dgrawmaterialreceive.PageIndex = e.NewPageIndex;
        Fill_Grid();
    }
    protected void dgrawmaterialreceive_SelectedIndexChanged(object sender, EventArgs e)
    {
        DataSet ds = null;
        string id = dgrawmaterialreceive.SelectedDataKey.Value.ToString();
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, @"SELECT     dbo.RawMaterialProcessRecDetail.RMPR_DETAIL_ID, dbo.RawMaterialProcessRecMaster.RMPR_ID, dbo.RawMaterialProcessRecMaster.CompanyId, 
                      dbo.RawMaterialProcessRecMaster.VenderId, replace(convert(varchar(11),dbo.RawMaterialProcessRecMaster.Date,106),' ','-')Date, dbo.RawMaterialProcessRecMaster.RecNo, 
                      dbo.RawMaterialProcessRecMaster.ProcessId, dbo.RawMaterialProcessRecDetail.Qty, dbo.RawMaterialProcessRecDetail.Loss, 
                      dbo.RawMaterialProcessRecDetail.Rate, dbo.ITEM_PARAMETER_MASTER.DESCRIPTION, dbo.ITEM_MASTER.CATEGORY_ID, 
                      dbo.RawMaterialProcessRecDetail.RMPID, dbo.RawMaterialProcessRecDetail.ITEM_FINISHED_ID, dbo.ITEM_MASTER.ITEM_ID, 
                      dbo.RawMaterialProcessRecDetail.GodownId FROM dbo.ITEM_MASTER INNER JOIN dbo.ITEM_PARAMETER_MASTER ON dbo.ITEM_MASTER.ITEM_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_ID INNER JOIN
                      dbo.RawMaterialProcessRecMaster INNER JOIN dbo.RawMaterialProcessRecDetail ON dbo.RawMaterialProcessRecMaster.RMPR_ID = dbo.RawMaterialProcessRecDetail.RMPR_ID ON 
                      dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.RawMaterialProcessRecDetail.ITEM_FINISHED_ID where dbo.RawMaterialProcessRecDetail.RMPR_DETAIL_ID=" + id + " And ITEM_PARAMETER_MASTER.MasterCompanyId=" + Session["varCompanyId"] + " ORDER BY RMPR_DETAIL_ID");
        try
        {
            if (ds.Tables[0].Rows.Count == 1)
            {
                DDcompanyname.SelectedValue = ds.Tables[0].Rows[0]["CompanyId"].ToString();
                DDprocessname.SelectedValue = ds.Tables[0].Rows[0]["ProcessId"].ToString();
                UtilityModule.ConditionalComboFill(ref DDpartyname, "select EmpId,EmpName from EmpInfo Where MasterCompanyId=" + Session["varCompanyId"] + " order by EmpId", true, "--Select--");
                DDpartyname.SelectedValue = ds.Tables[0].Rows[0]["VenderId"].ToString();
                txtdate.Text = ds.Tables[0].Rows[0]["date"].ToString();
                txtrecno.Text = ds.Tables[0].Rows[0]["RecNo"].ToString();
                txtrecqty.Text = ds.Tables[0].Rows[0]["Qty"].ToString();
                txtquantitty.Text = ds.Tables[0].Rows[0]["Qty"].ToString();
                Session["Qty"] = ds.Tables[0].Rows[0]["Qty"].ToString();
                txtrate.Text = ds.Tables[0].Rows[0]["Rate"].ToString();
                txtloss.Text = ds.Tables[0].Rows[0]["Loss"].ToString();
                UtilityModule.ConditionalComboFill(ref ddissueno, @"select rmp.rmpid,gp.gatepassno from gatepass gp, RawMaterialProcessMaster rmp where gp.gatepassno=rmp.gatepass and rmp.empid=" + DDpartyname.SelectedValue, true, "--Select--");
                ddissueno.SelectedValue = ds.Tables[0].Rows[0]["RMPID"].ToString();
                UtilityModule.ConditionalComboFill(ref DDreccategory, @"SELECT DISTINCT  dbo.ITEM_MASTER.CATEGORY_ID,dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME FROM dbo.ITEM_CATEGORY_MASTER INNER JOIN dbo.ITEM_MASTER ON dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID = dbo.ITEM_MASTER.CATEGORY_ID INNER JOIN dbo.ITEM_PARAMETER_MASTER ON dbo.ITEM_MASTER.ITEM_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_ID INNER JOIN dbo.CategorySeparate ON dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID = dbo.CategorySeparate.Categoryid INNER JOIN dbo.RawMaterialProcessDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.RawMaterialProcessDetail.RItem_Finished_id where RawMaterialProcessDetail.rmpid=" + ddissueno.SelectedValue + " And ITEM_MASTER.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
                DDreccategory.SelectedValue = ds.Tables[0].Rows[0]["category_id"].ToString();
                UtilityModule.ConditionalComboFill(ref DDrecdescription, @"select distinct ipm.ITEM_FINISHED_ID,ipm.DESCRIPTION from ITEM_PARAMETER_MASTER ipm,RawMaterialProcessDetail rmp where rmp.RItem_Finished_id =ipm.ITEM_FINISHED_ID And ipm.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
                DDrecdescription.SelectedValue = ds.Tables[0].Rows[0]["Item_Finished_id"].ToString();
                UtilityModule.ConditionalComboFill(ref DDrecitem, @"Select Distinct Item_Id,Item_Name from Item_Master where MasterCompanyId=" + Session["varCompanyId"] + " And  Category_Id=" + ds.Tables[0].Rows[0]["category_id"].ToString(), true, "--Select--");
                DDrecitem.SelectedValue = ds.Tables[0].Rows[0]["item_id"].ToString();
                DDgodwonname.SelectedValue = ds.Tables[0].Rows[0]["godownid"].ToString();
            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMaterialDyingReceive.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
            }
            if (con != null)
            {
                con.Dispose();
            }
        }
        btnsave.Text = "Update";
        txtRMPRID.Text = ds.Tables[0].Rows[0]["RMPR_ID"].ToString();
        txtRMPRDETAILID.Text = id;
    }
    protected void btnnew_Click(object sender, EventArgs e)
    {
        btnsave.Text = "Save";
        txtRMPRID.Text = "0";
        txtRMPRDETAILID.Text = "0";
        txtrecqty.Text = "0";
        txtloss.Text = "0";
        txtrate.Text = "0";
        txtrecno.Text = "";
        UtilityModule.ConditionalComboFill(ref DDcompanyname, "select Distinct CI.CompanyId,Companyname from Companyinfo CI,Company_Authentication CA Where CA.CompanyId=CI.CompanyId And CA.UserId=" + Session["varuserId"] + " And CI.MasterCompanyId=" + Session["varCompanyId"] + " Order By Companyname", true, "--Select--");
        UtilityModule.ConditionalComboFill(ref DDprocessname, "Select PROCESS_NAME_ID, PROCESS_NAME from PROCESS_NAME_MASTER Where MasterCompanyId=" + Session["varCompanyId"] + " order by PROCESS_NAME", true, "--Select--");
        txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
        UtilityModule.ConditionalComboFill(ref DDgodwonname, "Select GoDownID,GodownName from GodownMaster Where MasterCompanyId=" + Session["varCompanyId"] + " order by GodownName", true, "--Select--");
        Fill_Grid();
        UtilityModule.ConditionalComboFill(ref DDpartyname, "select EmpId,EmpName from EmpInfo Where MasterCompanyId=" + Session["varCompanyId"] + " order by EmpId", true, "--Select--");
        UtilityModule.ConditionalComboFill(ref DDreccategory, @"SELECT DISTINCT  dbo.ITEM_MASTER.CATEGORY_ID,dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME FROM dbo.ITEM_CATEGORY_MASTER INNER JOIN dbo.ITEM_MASTER ON dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID = dbo.ITEM_MASTER.CATEGORY_ID INNER JOIN dbo.ITEM_PARAMETER_MASTER ON dbo.ITEM_MASTER.ITEM_ID = dbo.ITEM_PARAMETER_MASTER.ITEM_ID INNER JOIN dbo.CategorySeparate ON dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID = dbo.CategorySeparate.Categoryid INNER JOIN dbo.RawMaterialProcessDetail ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.RawMaterialProcessDetail.RItem_Finished_id where CategorySeparate.id='1' And ITEM_MASTER.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
        UtilityModule.ConditionalComboFill(ref DDrecitem, @"Select Distinct Item_Id,Item_Name from Item_Master where Category_Id=" + DDreccategory.SelectedValue + " And MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
        UtilityModule.ConditionalComboFill(ref DDrecdescription, @"select distinct ipm.ITEM_FINISHED_ID,ipm.DESCRIPTION from ITEM_PARAMETER_MASTER ipm,RawMaterialProcessDetail rmp where rmp.RItem_Finished_id =ipm.ITEM_FINISHED_ID And ipm.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
        UtilityModule.ConditionalComboFill(ref ddissueno, @"select rmp.rmpid,gp.gatepassno from gatepass gp, RawMaterialProcessMaster rmp where gp.gatepassno=rmp.gatepass and rmp.empid=" + DDpartyname.SelectedValue, true, "--Select---");
    }

    
    protected void dgrawmaterialreceive_RowCreated(object sender, GridViewRowEventArgs e)
    {
        //Add CSS class on header row.
        if (e.Row.RowType == DataControlRowType.Header)
            e.Row.CssClass = "header";

        //Add CSS class on normal row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Normal)
            e.Row.CssClass = "normal";

        //Add CSS class on alternate row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Alternate)
            e.Row.CssClass = "alternate";
    }
}