using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Diagnostics;
using System.Text;

public partial class RawMetrialDyingPrepration : System.Web.UI.Page
{
    int Gstock = 0;
    string leftstock;
    string stock;
    //int stockck = 0;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["varCompanyId"] == null)
        {
            Response.Redirect("~/Login.aspx");
        }
        if (IsPostBack == false)
        {
            Rmp_id.Text = "0";
            Rmp_detail_id.Text = "0";
            txtrecqty.Text = "0";
            txtrate.Text = "0";
            txtissueqty.Text = "0";
            DDcompanyname.Focus();
            UtilityModule.ConditionalComboFill(ref DDcompanyname, "select Distinct CI.CompanyId,Companyname from Companyinfo CI,Company_Authentication CA Where CA.CompanyId=CI.CompanyId And CA.UserId=" + Session["varuserId"] + " And CI.MasterCompanyId=" + Session["varCompanyId"] + " Order By Companyname", true, "--Select--");
            DDcompanyname.SelectedIndex = 1;
            UtilityModule.ConditionalComboFill(ref DDprocessname, "Select PROCESS_NAME_ID, PROCESS_NAME from PROCESS_NAME_MASTER Where MasterCompanyId=" + Session["varCompanyId"] + " order by PROCESS_NAME", true, "--Select--");
            txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
            UtilityModule.ConditionalComboFill(ref DDcustomercode, "Select customerid,Customercode from customerinfo Where MasterCompanyId=" + Session["varCompanyId"] + " order by Customercode", true, "--Select--");
            UtilityModule.ConditionalComboFill(ref DDgodwonname, "Select GoDownID,GodownName from GodownMaster Where MasterCompanyId=" + Session["varCompanyId"] + " order by GodownName", true, "--Select--");
            DDgodwonname.SelectedIndex = 1;
            lablechange();
            Fill_Grid();
            Session["ReportPath"] = "Reports/RawMatrialDyingPrepration.rpt";
            Session["CommanFormula"] = " ";// "{where RawMaterialProcessMaster.Companyid=" + DDcompanyname.SelectedValue + "}";
            DDcompanyname.Focus();
        }
    }
    public void lablechange()
    {

        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            String[] ParameterList = new String[8];
            ParameterList = UtilityModule.ParameteLabel(Convert.ToInt32(Session["varCompanyId"]));
            lblcategoryname.Text = ParameterList[5];
            lblitemname.Text = ParameterList[6];
            lblcategoryname1.Text = lblcategoryname.Text;
            lblitemname1.Text = lblitemname.Text;
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMatrialDyingPrepration.aspx");
            // Lblerrer.Visible = true;
            //  Lblerrer.Text = "Data base errer..................";
        }

        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }

    }
    //************************** Fill Party Name **************************************
    protected void DDprocessname_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDpartyname, "select EmpId,EmpName from EmpInfo Where MasterCompanyId=" + Session["varCompanyId"] + " order by EmpId", true, "--Select--");
        DDpartyname.Focus();
    }
    protected void DDcustomercode_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDorderno, "select OrderId,CustomerOrderNo from OrderMaster Where customerid=" + DDcustomercode.SelectedValue, true, "--Select--");
        DDorderno.Focus();
    }
    protected void DDpartyname_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDreccategory, @"Select icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm inner join CategorySeparate cs on icm.CATEGORY_ID= cs.Categoryid where cs.id=1 And icm.MasterCompanyId=" + Session["varCompanyId"], true, "--Select--");
        UtilityModule.ConditionalComboFill(ref DDgivencategory, @"Select icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm inner join CategorySeparate cs on icm.CATEGORY_ID= cs.Categoryid where cs.id=1 And icm.MasterCompanyId=" + Session["varCompanyId"], true, "--Select--");
        DDreccategory.Focus();
    }
    protected void DDreccategory_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDrecitem, @"Select Distinct Item_Id,Item_Name from Item_Master where Category_Id=" + DDreccategory.SelectedValue + " And MasterCompanyId=" + Session["varCompanyId"], true, "--Select--");
        DDrecitem.Focus();
    }
    protected void DDgivencategory_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDgivenItem, @"Select Distinct Item_Id,Item_Name from Item_Master where Category_Id=" + DDgivencategory.SelectedValue + " And MasterCompanyId=" + Session["varCompanyId"], true, "--Select--");
        DDgivenItem.Focus();
    }
    // ******************************** Save Button *************************************************
    protected void btnsave_Click(object sender, EventArgs e)
    {
        lblerror.Visible = false;
        if (btnsave.Text == "Update") // when btnsave text is update and calculatte the leftstock as qtyinhand
        {
            chkstock();
            double issueqty = Convert.ToDouble(txtissueqty.Text);
            double dsstk = Convert.ToDouble(Session["dsstk"].ToString());
            double stockdata = Convert.ToDouble(stock);
            if ((dsstk + stockdata) < issueqty)
            {
                lblerror.Visible = true;
                lblerror.Text = "Not Valid Issue";
                txtissueqty.Text = Session["dsstk"].ToString();
            }
            else
            {
                if (dsstk == issueqty)
                {
                    leftstock = stockdata.ToString();
                }
                else
                {
                    if (dsstk > issueqty)
                    {
                        double chgstock = (dsstk - issueqty);
                        leftstock = (stockdata + chgstock).ToString();
                    }
                    else
                    {
                        double chgstock = (issueqty - dsstk);
                        leftstock = (stockdata - chgstock).ToString();
                    }
                }
                updatebtn();  ///  use update fuction for update tables
            }
        }
        else
        {
            savebtn(); //  when btnsave text is save
        }
    }
    //************* Grid fill************************************************************
    private void Fill_Grid()
    {
        Gvrawmetrial.DataSource = Fill_Grid_Data();
        Gvrawmetrial.DataBind();
    }
    private DataSet Fill_Grid_Data()
    {
        DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            string strsql = @" SELECT distinct dbo.RawMaterialProcessDetail.RMP_Detail_Id as Sr_No, dbo.RawMaterialProcessDetail.RCaregory as " + lblcategoryname.Text + ", dbo.RawMaterialProcessDetail.RItemName as " + lblitemname.Text + ",dbo.RawMaterialProcessDetail.IssQty, dbo.stock.Qtyinhand, dbo.RawMaterialProcessDetail.RecQty,dbo.RawMaterialProcessMaster.Date, dbo.RawMaterialProcessMaster.GatePass, dbo.RawMaterialProcessDetail.Rate,ipm.description as RDescription FROM dbo.RawMaterialProcessDetail INNER JOIN dbo.RawMaterialProcessMaster ON dbo.RawMaterialProcessDetail.RMPId = dbo.RawMaterialProcessMaster.RMPId INNER JOIN dbo.stock ON dbo.RawMaterialProcessDetail.GItem_Finished_id = dbo.stock.ITEM_FINISHED_ID inner join item_parameter_master ipm on ipm.item_finished_id=dbo.RawMaterialProcessDetail.RItem_Finished_id And ipm.MasterCompanyId=" + Session["varCompanyId"];
            con.Open();
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, strsql);
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMatrialDyingPrepration.aspx");
            Logs.WriteErrorLog("RawMatrialDyingPrepration|Fill_Grid_Data|" + ex.Message);
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
        return ds;
    }
    protected void DDrecitem_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref DDrecdescription, @"select item_finished_id,DESCRIPTION from ITEM_PARAMETER_MASTER where ITEM_ID=" + DDrecitem.SelectedValue + " And MasterCompanyId=" + Session["varCompanyId"], true, "--Select--");
        DDrecdescription.Focus();
    }
    protected void DDgivenItem_SelectedIndexChanged(object sender, EventArgs e)
    {
        string str = @"select ipm.item_finished_id,DESCRIPTION from ITEM_PARAMETER_MASTER ipm inner join stock s on ipm.item_finished_id=s.item_finished_id 
         where ITEM_ID=" + DDgivenItem.SelectedValue + "and godownid=" + DDgodwonname.SelectedValue + "and companyid=" + DDcompanyname.SelectedValue + " And ipm.MasterCompanyId=" + Session["varCompanyId"];
        UtilityModule.ConditionalComboFill(ref DDgivendescription, str, true, "--Select--");
        DDgivendescription.Focus();
    }

    protected void DDgivendescription_SelectedIndexChanged(object sender, EventArgs e)
    {
        lblerror.Visible = false;
        lblstock.Visible = true;
        chkstock();
    }

    //********** check stock value*************
    public void chkstock()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            con.Open();
            string str = "select isnull(qtyinhand,0) from stock where item_finished_id=" + DDgivendescription.SelectedValue + " and godownid=" + DDgodwonname.SelectedValue + " and companyid=" + DDcompanyname.SelectedValue;
            stock = (SqlHelper.ExecuteScalar(con, CommandType.Text, str).ToString());
            lblstock.Text = "Stock=" + stock;
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMatrialDyingPrepration.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
                con.Close();
        }
    }
    //********************* Stock updation***************
    public void stockupdate()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        try
        {
            string update = "update stock  set qtyinhand=" + leftstock + " where  stockid=" + Gstock;
            SqlHelper.ExecuteScalar(con, CommandType.Text, update);

            int stockid = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, "select isnull(max(stockid),0) from stock"));
            DateTime date = DateTime.Now;
            int stocktranid = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, "select isnull(max(StockTranid),0)+1 from StockTran"));
            int prt = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, "select isnull(max(RMP_Detail_Id),0) from RawMaterialProcessDetail"));
            string insert2 = "insert into stocktran(Stockid,StockTranid,trantype,quantity,TranDate,Userid,RealDate,TableName,PRTid) values(" + stockid + "," + stocktranid + ",0," + Convert.ToDouble(txtissueqty.Text) + ",'" + Convert.ToDateTime(txtdate.Text) + "',0,'" + date + "','RawMaterialProcessDetail'," + prt + ")";
            SqlHelper.ExecuteNonQuery(con, CommandType.Text, insert2);
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMatrialDyingPrepration.aspx");
        }
        finally
        {
            con.Close();
        }
    }
    //***************** Refresh form *******************
    public void refreshform()
    {
        UtilityModule.ConditionalComboFill(ref DDcompanyname, "select Distinct CI.CompanyId,Companyname from Companyinfo CI,Company_Authentication CA Where CA.CompanyId=CI.CompanyId And CA.UserId=" + Session["varuserId"] + " And CI.MasterCompanyId=" + Session["varCompanyId"] + " Order By Companyname", true, "--Select--");
        DDcompanyname.SelectedIndex = 1;
        UtilityModule.ConditionalComboFill(ref DDprocessname, "Select PROCESS_NAME_ID, PROCESS_NAME from PROCESS_NAME_MASTER Where MasterCompanyId=" + Session["varCompanyId"] + " order by PROCESS_NAME", true, "--Select--");
        txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
        UtilityModule.ConditionalComboFill(ref DDcustomercode, "Select customerid,Customercode from customerinfo Where MasterCompanyId=" + Session["varCompanyId"] + " order by Customercode", true, "--Select--");
        UtilityModule.ConditionalComboFill(ref DDgodwonname, "Select GoDownID,GodownName from GodownMaster Where MasterCompanyId=" + Session["varCompanyId"] + " order by GodownName", true, "--Select--");
        DDgodwonname.SelectedIndex = 1;
        // Fill_Grid();
        txtgatepass.Text = "";
        txtrate.Text = "";
        txtrecqty.Text = "";
        txtinwardno.Text = "";
        txtremark.Text = "";
        DDpartyname.SelectedIndex = 0;
        DDgivendescription.SelectedIndex = 0;
        DDrecdescription.SelectedIndex = 0;
        DDreccategory.SelectedIndex = 0;
        txtissueqty.Text = "";
        DDorderno.SelectedIndex = 0;
        DDgivenItem.SelectedIndex = 0;
        DDrecitem.SelectedIndex = 0;
        txtlotno.Text = "";
        lblstock.Visible = false;
        lblerror.Visible = false;
        DDgivencategory.SelectedIndex = 0;
        txtrecqty.Text = "0";
        txtrate.Text = "0";
        txtissueqty.Text = "0";
        Rmp_id.Text = "0";
        Rmp_detail_id.Text = "0";
        btnsave.Text = "Save";
    }
    public void hlfrefrsh()
    {
        txtrate.Text = "";
        txtrecqty.Text = "";
        txtlotno.Text = "";
        txtinwardno.Text = "";
        txtremark.Text = "";
        txtissueqty.Text = "";
        txtrecqty.Text = "0";
        txtrate.Text = "0";
        txtissueqty.Text = "0";
    }

    protected void btnnew_Click(object sender, EventArgs e)
    {
        refreshform();
    }
    //********** Page index change of grid**********
    protected void Gvrawmetrial_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        Gvrawmetrial.PageIndex = e.NewPageIndex;
        Fill_Grid();
    }

    protected void Gvrawmetrial_SelectedIndexChanged(object sender, EventArgs e)
    {
        DataSet ds = null;
        string id = Gvrawmetrial.SelectedDataKey.Value.ToString();
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, @"SELECT     dbo.RawMaterialProcessDetail.RMP_Detail_Id, dbo.RawMaterialProcessMaster.RMPId, dbo.RawMaterialProcessMaster.Companyid, 
                      dbo.RawMaterialProcessMaster.Processid, dbo.RawMaterialProcessMaster.Empid, dbo.RawMaterialProcessMaster.Date, 
                      dbo.RawMaterialProcessMaster.GatePass, dbo.RawMaterialProcessDetail.RCaregory, dbo.RawMaterialProcessDetail.RItemName, 
                      dbo.RawMaterialProcessDetail.RDescription, dbo.RawMaterialProcessDetail.RecQty, dbo.RawMaterialProcessDetail.Rate, 
                      dbo.RawMaterialProcessDetail.Godownid, dbo.RawMaterialProcessMaster.LotNo, dbo.RawMaterialProcessMaster.InWardNo, 
                      dbo.RawMaterialProcessMaster.Remarks, dbo.RawMaterialProcessMaster.Orderid, dbo.RawMaterialProcessDetail.IssQty, 
                      dbo.ITEM_PARAMETER_MASTER.DESCRIPTION, dbo.RawMaterialProcessDetail.RItem_Finished_id, 
                      dbo.RawMaterialProcessDetail.GItem_Finished_id, dbo.ITEM_PARAMETER_MASTER.ITEM_ID, dbo.ITEM_MASTER.CATEGORY_ID, 
                      dbo.OrderMaster.CustomerId, dbo.stock.Qtyinhand
                      FROM         dbo.RawMaterialProcessDetail INNER JOIN
                      dbo.RawMaterialProcessMaster ON dbo.RawMaterialProcessDetail.RMPId = dbo.RawMaterialProcessMaster.RMPId INNER JOIN
                      dbo.ITEM_PARAMETER_MASTER ON 
                      dbo.RawMaterialProcessDetail.GItem_Finished_id = dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID INNER JOIN
                      dbo.ITEM_MASTER ON dbo.ITEM_PARAMETER_MASTER.ITEM_ID = dbo.ITEM_MASTER.ITEM_ID INNER JOIN
                      dbo.OrderMaster ON dbo.RawMaterialProcessMaster.Orderid = dbo.OrderMaster.OrderId INNER JOIN
                      dbo.stock ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = dbo.stock.ITEM_FINISHED_ID
                      where RMP_Detail_Id=" + id + " And ITEM_PARAMETER_MASTER.MasterCompanyId=" + Session["varCompanyId"] + "");
        try
        {
            if (ds.Tables[0].Rows.Count == 1)
            {
                DDcompanyname.SelectedValue = ds.Tables[0].Rows[0]["Companyid"].ToString();
                DDcustomercode.SelectedValue = ds.Tables[0].Rows[0]["customerid"].ToString();
                UtilityModule.ConditionalComboFill(ref DDorderno, "select OrderId,CustomerOrderNo from OrderMaster Where CompanyId=" + DDcompanyname.SelectedValue, true, "--Select--");
                DDorderno.SelectedValue = ds.Tables[0].Rows[0]["Orderid"].ToString();
                DDprocessname.SelectedValue = ds.Tables[0].Rows[0]["Processid"].ToString();
                UtilityModule.ConditionalComboFill(ref DDpartyname, "select EmpId,EmpName from EmpInfo Where MasterCompanyId=" + Session["varCompanyId"] + " order by EmpId", true, "--Select--");
                DDpartyname.SelectedValue = ds.Tables[0].Rows[0]["Empid"].ToString();
                txtdate.Text = ds.Tables[0].Rows[0]["date"].ToString();
                txtgatepass.Text = ds.Tables[0].Rows[0]["GatePass"].ToString();
                Session["gatepass"] = ds.Tables[0].Rows[0]["GatePass"].ToString();
                txtrecqty.Text = ds.Tables[0].Rows[0]["RecQty"].ToString();
                txtrate.Text = ds.Tables[0].Rows[0]["Rate"].ToString();
                txtissueqty.Text = ds.Tables[0].Rows[0]["issqty"].ToString();
                txtlotno.Text = ds.Tables[0].Rows[0]["LotNo"].ToString();
                txtinwardno.Text = ds.Tables[0].Rows[0]["InWardNo"].ToString();
                txtremark.Text = ds.Tables[0].Rows[0]["Remarks"].ToString();

                UtilityModule.ConditionalComboFill(ref DDreccategory, @"Select icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm inner join CategorySeparate cs on icm.CATEGORY_ID= cs.Categoryid where cs.id=1 And icm.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
                DDreccategory.SelectedItem.Text = ds.Tables[0].Rows[0]["RCaregory"].ToString();

                UtilityModule.ConditionalComboFill(ref DDrecitem, @"Select Distinct Item_Id,Item_Name from Item_Master Where MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
                DDrecitem.SelectedItem.Text = ds.Tables[0].Rows[0]["RItemName"].ToString();

                UtilityModule.ConditionalComboFill(ref DDrecdescription, @"select item_finished_id,DESCRIPTION from ITEM_PARAMETER_MASTER Where MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
                DDrecdescription.SelectedValue = ds.Tables[0].Rows[0]["RItem_Finished_id"].ToString();

                DDgodwonname.SelectedValue = ds.Tables[0].Rows[0]["godownid"].ToString();

                UtilityModule.ConditionalComboFill(ref DDgivencategory, @"Select icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm inner join CategorySeparate cs on icm.CATEGORY_ID= cs.Categoryid where cs.id=1 And icm.MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
                DDgivencategory.SelectedValue = ds.Tables[0].Rows[0]["CATEGORY_ID"].ToString();

                UtilityModule.ConditionalComboFill(ref DDgivenItem, @"Select Distinct Item_Id,Item_Name from Item_Master Where MasterCompanyId=" + Session["varCompanyId"] + "", true, "--Select--");
                DDgivenItem.SelectedValue = ds.Tables[0].Rows[0]["ITEM_ID"].ToString();

                UtilityModule.ConditionalComboFill(ref DDgivendescription, @"select ipm.item_finished_id,DESCRIPTION from ITEM_PARAMETER_MASTER ipm inner join stock s on ipm.item_finished_id=s.item_finished_id 
                 where ipm.MasterCompanyId=" + Session["varCompanyId"] + " And ITEM_ID=" + ds.Tables[0].Rows[0]["ITEM_ID"].ToString() + "and godownid=" + ds.Tables[0].Rows[0]["godownid"].ToString() + "and companyid=" + ds.Tables[0].Rows[0]["Companyid"].ToString(), true, "--Select--");
                DDgivendescription.SelectedValue = ds.Tables[0].Rows[0]["GItem_Finished_id"].ToString();

                Rmp_id.Text = ds.Tables[0].Rows[0]["RMPId"].ToString();
                Rmp_detail_id.Text = ds.Tables[0].Rows[0]["Rmp_detail_id"].ToString();
                lblstock.Visible = true;
                lblstock.Text = "Stock=" + ds.Tables[0].Rows[0]["Qtyinhand"].ToString();
                Session["dsstk"] = (ds.Tables[0].Rows[0]["issqty"].ToString());
                string s = Session["dsstk"].ToString();
                Session["Stock12"] = lblstock.Text;
            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMatrialDyingPrepration.aspx");

        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
            }
            if (con != null)
            {
                con.Dispose();
            }
        }
        btnsave.Text = "Update";
    }
    protected void Gvrawmetrial_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Attributes["onmouseover"] = "javascript:setMouseOverColor(this);";
            e.Row.Attributes["onmouseout"] = "javascript:setMouseOutColor(this);";
            e.Row.Attributes["onclick"] = ClientScript.GetPostBackClientHyperlink(this.Gvrawmetrial, "Select$" + e.Row.RowIndex);
        }
    }
    public void savebtn()
    {
        //****************************** compair value of stock and issue qty and insert values into table **************************************  
        chkstock();
        double stockdata = Convert.ToDouble(stock);
        if (stockdata <= 0)
        {
            lblerror.Visible = true;
            lblerror.Text = "Not Valid Issue";
        }
        else
        {
            double issueqty = Convert.ToDouble(txtissueqty.Text);
            leftstock = (stockdata - issueqty).ToString();
            if (issueqty > stockdata)
            {
                lblerror.Visible = true;
                lblerror.Text = "Issue Quantity must be less than STOCK";
                txtissueqty.Text = "";
                txtissueqty.Focus();
            }
            else
            {
                lblerror.Visible = false;

                SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
                con.Open();

                string str1 = "select stockid from stock where item_finished_id=" + DDgivendescription.SelectedValue + "and godownid=" + DDgodwonname.SelectedValue + " and companyid=" + DDcompanyname.SelectedValue;
                Gstock = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, str1));
                try
                {
                    SqlParameter[] _arrPara = new SqlParameter[11];
                    _arrPara[0] = new SqlParameter("@companyid", SqlDbType.Int);
                    _arrPara[1] = new SqlParameter("@RMPId", SqlDbType.Int);
                    _arrPara[2] = new SqlParameter("@orderid", SqlDbType.Int);
                    _arrPara[3] = new SqlParameter("@processid", SqlDbType.Int);
                    _arrPara[4] = new SqlParameter("@empid", SqlDbType.Int);
                    _arrPara[5] = new SqlParameter("@date", SqlDbType.SmallDateTime);
                    _arrPara[7] = new SqlParameter("@Lotno", SqlDbType.NVarChar);
                    _arrPara[8] = new SqlParameter("@Inwardno", SqlDbType.NVarChar);
                    _arrPara[9] = new SqlParameter("@Remark", SqlDbType.NVarChar);
                    _arrPara[10] = new SqlParameter("@gatepass", SqlDbType.Int);

                    _arrPara[0].Value = DDcompanyname.SelectedValue;
                    _arrPara[1].Value = Rmp_id.Text;
                    _arrPara[2].Value = DDorderno.SelectedValue;
                    _arrPara[3].Value = DDprocessname.SelectedValue;
                    _arrPara[4].Value = DDpartyname.SelectedValue;
                    _arrPara[5].Value = Convert.ToDateTime(txtdate.Text);
                    _arrPara[7].Value = txtlotno.Text;
                    _arrPara[8].Value = txtinwardno.Text;
                    _arrPara[9].Value = txtremark.Text;
                    _arrPara[10].Value = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, "select isnull(max(Gatepassno),0)+1  from gatepass"));

                    SqlParameter[] _arrParaa = new SqlParameter[14];
                    _arrParaa[1] = new SqlParameter("@RMP_Detail_Id", SqlDbType.Int);
                    _arrParaa[2] = new SqlParameter("@RMPId", SqlDbType.Int);
                    _arrParaa[3] = new SqlParameter("@Rcategoryname", SqlDbType.NVarChar);
                    _arrParaa[4] = new SqlParameter("@itemname", SqlDbType.NVarChar);
                    _arrParaa[5] = new SqlParameter("@Rqty", SqlDbType.Float);
                    _arrParaa[6] = new SqlParameter("@Godown", SqlDbType.Int);
                    _arrParaa[7] = new SqlParameter("@Issueqty", SqlDbType.Float);
                    _arrParaa[8] = new SqlParameter("@rate", SqlDbType.Float);
                    _arrParaa[9] = new SqlParameter("@pqty", SqlDbType.Float);
                    _arrParaa[10] = new SqlParameter("@description", SqlDbType.NVarChar);
                    _arrParaa[11] = new SqlParameter("@RItem_Finished_id", SqlDbType.Int);
                    _arrParaa[12] = new SqlParameter("@GItem_Finished_id", SqlDbType.Int);

                    _arrParaa[1].Value = Rmp_detail_id.Text;
                    //_arrParaa[2].Value = _arrPara[10].Value;
                    _arrParaa[3].Value = DDreccategory.SelectedItem.Text;
                    _arrParaa[4].Value = DDrecitem.SelectedItem.Text;
                    _arrParaa[5].Value = txtrecqty.Text;
                    _arrParaa[6].Value = DDgodwonname.SelectedValue;
                    _arrParaa[7].Value = txtissueqty.Text;
                    _arrParaa[8].Value = txtrate.Text;
                    _arrParaa[9].Value = txtissueqty.Text;
                    _arrParaa[10].Value = DDrecdescription.SelectedItem.Text;
                    _arrParaa[11].Value = DDrecdescription.SelectedValue;
                    _arrParaa[12].Value = DDgivendescription.SelectedValue;

                    if (txtgatepass.Text == "")
                    {
                        SqlHelper.ExecuteNonQuery(con, CommandType.StoredProcedure, "PRO_RawMatrialDyingPreprationMaster", _arrPara);
                        _arrParaa[2].Value = (SqlHelper.ExecuteScalar(con, CommandType.Text, "select max(RMPid) from RawMaterialProcessMaster"));
                        // _arrParaa[2].Value = _arrPara[10].Value;
                        SqlHelper.ExecuteNonQuery(con, CommandType.StoredProcedure, "PRO_RawMatrialDyingPreprationDetails", _arrParaa);
                        txtgatepass.Text = (SqlHelper.ExecuteScalar(con, CommandType.Text, "select isnull(max(Gatepassno),0)+1  from gatepass").ToString());
                        int gtpasid = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, "select isnull(max(Gatepassid),0)+1  from gatepass"));
                        string gatepass = "insert into gatepass(gatepassid,Gatepassno,tablename,RecNo) values('" + gtpasid + "','" + txtgatepass.Text + "','RawMaterialProcessMaster','0')";
                        SqlHelper.ExecuteScalar(con, CommandType.Text, gatepass);

                    }
                    else
                    {
                        _arrParaa[2].Value = (SqlHelper.ExecuteScalar(con, CommandType.Text, "select max(RMPid) from RawMaterialProcessMaster"));
                        SqlHelper.ExecuteNonQuery(con, CommandType.StoredProcedure, "PRO_RawMatrialDyingPreprationDetails", _arrParaa);
                    }
                }
                catch (Exception ex)
                {
                    UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMatrialDyingPrepration.aspx");
                }
                finally
                {
                    if (con.State == ConnectionState.Open)
                        con.Close();
                }
                //************* call stock update function *******************************************
                stockupdate();
                hlfrefrsh();
                lblstock.Visible = false;
                Fill_Grid();
                btnsave.Text = "Save";
                Rmp_id.Text = "0";
                Rmp_detail_id.Text = "0";
            }
        }
    }
    public void updatebtn()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        string str1 = "select stockid from stock where item_finished_id=" + DDgivendescription.SelectedValue + "and godownid=" + DDgodwonname.SelectedValue + " and companyid=" + DDcompanyname.SelectedValue;
        Gstock = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, str1));
        try
        {
            SqlParameter[] _arrParaa = new SqlParameter[14];

            _arrParaa[1] = new SqlParameter("@RMP_Detail_Id", SqlDbType.Int);
            _arrParaa[2] = new SqlParameter("@RMPId", SqlDbType.Int);
            _arrParaa[3] = new SqlParameter("@Rcategoryname", SqlDbType.NVarChar);
            _arrParaa[4] = new SqlParameter("@itemname", SqlDbType.NVarChar);
            _arrParaa[5] = new SqlParameter("@Rqty", SqlDbType.Float);
            _arrParaa[6] = new SqlParameter("@Godown", SqlDbType.Int);
            _arrParaa[7] = new SqlParameter("@Issueqty", SqlDbType.Float);
            _arrParaa[8] = new SqlParameter("@rate", SqlDbType.Float);
            _arrParaa[9] = new SqlParameter("@pqty", SqlDbType.Float);
            _arrParaa[10] = new SqlParameter("@description", SqlDbType.NVarChar);
            _arrParaa[11] = new SqlParameter("@RItem_Finished_id", SqlDbType.Int);
            _arrParaa[12] = new SqlParameter("@GItem_Finished_id", SqlDbType.Int);

            _arrParaa[1].Value = Rmp_detail_id.Text;
            _arrParaa[3].Value = DDreccategory.SelectedItem.Text;
            _arrParaa[4].Value = DDrecitem.SelectedItem.Text;
            _arrParaa[5].Value = txtrecqty.Text;
            _arrParaa[6].Value = DDgodwonname.SelectedValue;
            _arrParaa[7].Value = txtissueqty.Text;
            _arrParaa[8].Value = txtrate.Text;
            _arrParaa[9].Value = txtissueqty.Text;
            _arrParaa[10].Value = DDgivendescription.SelectedItem.Text;
            _arrParaa[11].Value = DDrecdescription.SelectedValue;
            _arrParaa[12].Value = DDgivendescription.SelectedValue;



            _arrParaa[2].Value = Rmp_id.Text;
            SqlHelper.ExecuteNonQuery(con, CommandType.StoredProcedure, "PRO_RawMatrialDyingPreprationDetails", _arrParaa);

        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/RawMaterial/RawMatrialDyingPrepration.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
                con.Close();
        }
        //************* call stock update function and fill_grid *******************************************
        stockupdate();
        hlfrefrsh();
        lblstock.Visible = false;
        Fill_Grid();
        btnsave.Text = "Save";
        Rmp_id.Text = "0";
        Rmp_detail_id.Text = "0";
    }
    protected void btnpreview_Click(object sender, EventArgs e)
    {
        Report();
    }
    private void Report()
    {
        string qry = @"   SELECT CompanyName,EmpName,RCaregory,RItemName,RDescription,PQty,IssQty,RecQty,Rate,GatePass
 FROM   RawMaterialDyingIssProcess ";
        DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, qry);
        if (ds.Tables[0].Rows.Count > 0)
        {
            Session["rptFileName"] = "~\\Reports\\RawMatrialDyingPreprationNEW.rpt";
            //Session["rptFileName"] = Session["ReportPath"];
            Session["GetDataset"] = ds;
            Session["dsFileName"] = "~\\ReportSchema\\RawMatrialDyingPreprationNEW.xsd";
            StringBuilder stb = new StringBuilder();
            stb.Append("<script>");
            stb.Append("window.open('../../ViewReport.aspx', 'nwwin', 'toolbar=0, titlebar=1,  top=0px, left=0px, scrollbars=1, resizable = yes');</script>");
            ScriptManager.RegisterClientScriptBlock(Page, GetType(), "opn", stb.ToString(), false);
        }
        else
        {
            ScriptManager.RegisterStartupScript(Page, GetType(), "opn1", "alert('No Record Found!');", true);
        }
    }
    protected void Gvrawmetrial_RowCreated(object sender, GridViewRowEventArgs e)
    {
        //Add CSS class on header row.
        if (e.Row.RowType == DataControlRowType.Header)
            e.Row.CssClass = "header";

        //Add CSS class on normal row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Normal)
            e.Row.CssClass = "normal";

        //Add CSS class on alternate row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Alternate)
            e.Row.CssClass = "alternate";
    }
}