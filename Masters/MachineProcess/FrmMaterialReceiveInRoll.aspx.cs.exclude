using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Text;
public partial class Masters_MachineProcess_FrmMaterialReceiveInRoll : System.Web.UI.Page
{
    string str = "";
    int varcombo = 0;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["varCompanyId"] == null)
        {
            Response.Redirect("~/Login.aspx");
        }
        if (!IsPostBack)
        {
            str = @"select Distinct CI.CompanyId,Companyname from Companyinfo CI,Company_Authentication CA Where CA.CompanyId=CI.CompanyId And CA.UserId=" + Session["varuserId"] + " And CI.MasterCompanyId=" + Session["varCompanyId"] + @" Order By Companyname 
                    select val,Type from SizeType Order by val                    
                    select PROCESS_NAME_ID,PROCESS_NAME from PROCESS_NAME_MASTER Where ProcessType=1 and MasterCompanyid=" + Session["varcompanyid"] + @" and Process_Name='WEAVING' order by PROCESS_NAME_ID
                    select UnitsId,UnitName from Units order by UnitName
                    select MachineNoId,MachineNoName from MachineNoMaster order by MachineNoName";

            DataSet ds = SqlHelper.ExecuteDataset(str);
            UtilityModule.ConditionalComboFillWithDS(ref ddCompName, ds, 0, true, "Select Comp Name");

            if (ddCompName.Items.Count > 0)
            {
                ddCompName.SelectedValue = Session["CurrentWorkingCompanyID"].ToString();
                ddCompName.Enabled = false;
            }

           // UtilityModule.ConditionalComboFillWithDS(ref DDsizetype, ds, 1, false, "--Plz Select--");
            UtilityModule.ConditionalComboFillWithDS(ref DDProcessName, ds, 2, true, "--Plz Select--");
            UtilityModule.ConditionalComboFillWithDS(ref DDProductionUnit, ds, 3, true, "--Plz Select--");
            UtilityModule.ConditionalComboFillWithDS(ref DDMachineNo, ds, 4, true, "--Plz Select--");

            if (DDProcessName.Items.Count > 0)
            {
                DDProcessName.SelectedIndex = 1;
            }

           txtReceiveDate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
            //ViewState["MaterialIssueID"] = 0;
            hnMaterialIssueId.Value = "0";
            categorytype_change();
            FillCustomercode();
           
            //if (variable.Carpetcompany == "1")
            //{
            //    TRempcodescan.Visible = true;
            //}
            //*************
        }
    }
    protected void FillCustomercode()
    {
        string view = "V_ProductionIssueBal_OrderNo";
        //if (Session["varcompanyid"].ToString() == "9")
        //{
        //    view = "V_ProductionIssueBal_OrderNo_Hafizia";
        //}
        //else
        //{
        //    view = "V_ProductionIssueBal_OrderNo";
        //}

        string str = @"select Distinct CU.Customerid,Cu.customercode from OrderDetail OD  inner join  OrderMaster OM on  OM.OrderId=OD.OrderId
                    inner join JobAssigns JB on OD.Orderid=JB.OrderId
                    and OD.Item_Finished_Id=JB.ITEM_FINISHED_ID
                    inner join " + view + @" VB on OD.OrderId=VB.OrderId 
                    and OD.Item_Finished_Id=VB.ITEM_FINISHED_ID
                    inner Join Customerinfo cu on om.customerid=cu.customerid
                    Where OM.CompanyId=" + ddCompName.SelectedValue + " order by customercode";

        UtilityModule.ConditionalComboFill(ref DDCustomerCode, str, true, "--Plz Select--");
    }
    protected void DDCustomerCode_SelectedIndexChanged(object sender, EventArgs e)
    {
        // UtilityModule.ConditionalComboFill(ref DDCustomerOrderNumber, "Select Distinct OM.OrderId,OM.LocalOrder+' / '+OM.CustomerOrderNo from OrderMaster OM,JobAssigns J Where OM.Orderid=J.Orderid And OM.Customerid=" + DDCustomerCode.SelectedValue + " And OM.CompanyId=" + DDCompanyName.SelectedValue + " order by OM.OrderId", true, "--Select--");

        FillOrderNO();
    }
    protected void FillOrderNO()
    {


        string view = "V_ProductionIssueBal_OrderNo";
        string orderNo = "OM.CustomerOrderNo";
        //if (variable.VarWEAVERORDERWITHOUTCUSTCODE == "1")
        //{
        //    orderNo = "Om.Localorder + ' # '+om.customerorderNo ";
        //}
        //if (Session["varcompanyid"].ToString() == "9")
        //{
        //    view = "V_ProductionIssueBal_OrderNo_Hafizia";
        //}
        //else
        //{
        //    view = "V_ProductionIssueBal_OrderNo";
        //}
        string str = "";
        str = @"select Distinct OM.OrderId," + orderNo + @" as OrderNo from OrderDetail OD  inner join  OrderMaster OM on  OM.OrderId=OD.OrderId
                    and oM.ORDERFROMSAMPLE=0
                    inner join JobAssigns JB on OD.Orderid=JB.OrderId
                    and OD.Item_Finished_Id=JB.ITEM_FINISHED_ID
                    inner join " + view + @" VB on OD.OrderId=VB.OrderId 
                    and OD.Item_Finished_Id=VB.ITEM_FINISHED_ID
                    Where OM.CompanyId=" + ddCompName.SelectedValue;
        if (DDCustomerCode.SelectedIndex > 0)
        {
            str = str + " and OM.CustomerId=" + DDCustomerCode.SelectedValue;
        }
        str = str + " order by OM.OrderId";
        UtilityModule.ConditionalComboFill(ref DDCustomerOrderNumber, str, true, "--Plz Select--");
    }
    protected void DDCustomerOrderNumber_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    protected void DDDescription_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    protected void DDMachineNo_SelectedIndexChanged(object sender, EventArgs e)
    {
        MachineNoSelectedChanged();
    }
    private void MachineNoSelectedChanged()
    {
        //ViewState["MaterialIssueID"] = 0;
        hnMaterialIssueId.Value = "0";
        txtReceiveno.Text = "";     
        //if (ChKForEdit.Checked == true)
        //{
        //    string str = @"Select MaterialIssueId,IssueNo from MaterialIssueOnMachineMaster where CompanyId=" + ddCompName.SelectedValue + " and ProcessId=" + DDProcessName.SelectedValue + " and ProductionUnitId=" + DDProductionUnit.SelectedValue + " and MachineNoId=" + DDMachineNo.SelectedValue + "";

        //    str = str + " order by MaterialIssueId";
        //    UtilityModule.ConditionalComboFill(ref DDIssueNo, str, true, "-Select Issue No-");
        //}
    }

    private void categorytype_change()
    {
        UtilityModule.ConditionalComboFill(ref ddCatagory, @"Select Distinct ic.CATEGORY_ID,ic.CATEGORY_NAME
                            from ITEM_CATEGORY_MASTER IC inner join CategorySeparate cs ON cs.Categoryid = ic.CATEGORY_ID 
                            Where ic.mastercompanyid=" + Session["varCompanyId"] + " and cs.id =1", true, "-Select Category-");
        if (ddCatagory.Items.Count > 0)
        {
            ddCatagory.SelectedIndex = 1;
            ddlcategorycange();
        }
    }
    protected void ddCatagory_SelectedIndexChanged(object sender, EventArgs e)
    {
        ddlcategorycange();
    }
    private void ddlcategorycange()
    {
        dditemname.Items.Clear();
        //dquality.Items.Clear();
        //dddesign.Items.Clear();
        //ddcolor.Items.Clear();
        //ddshape.Items.Clear();
        //ddsize.Items.Clear();
        //ddlshade.Items.Clear();
        //ql.Visible = false;
        //clr.Visible = false;
        //dsn.Visible = false;
        //shp.Visible = false;
        //sz.Visible = false;
        //shd.Visible = false;
        UtilityModule.ConditionalComboFill(ref dditemname, @"select Distinct im.ITEM_ID,im.ITEM_NAME FROM ITEM_MASTER im Inner join 
            v_finisheditemdetail v On v.ITEM_ID=im.ITEM_ID Inner join 
            stock s On s.ITEM_FINISHED_ID=v.ITEM_FINISHED_ID 
            where v.CATEGORY_ID=" + ddCatagory.SelectedValue + " and im.MasterCompanyid=" + Session["varCompanyId"] + " order by im.ITEM_NAME", true, "--Select Item--");

        string strsql = "SELECT [CATEGORY_PARAMETERS_ID],[CATEGORY_ID],IPM.[PARAMETER_ID],PARAMETER_NAME " +
                      " FROM [ITEM_CATEGORY_PARAMETERS] IPM inner join PARAMETER_MASTER PM on " +
                      " IPM.[PARAMETER_ID]=PM.[PARAMETER_ID] where [CATEGORY_ID]=" + ddCatagory.SelectedValue + " And PM.MasterCompanyId=" + Session["varCompanyId"];
        DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
        if (ds.Tables[0].Rows.Count > 0)
        {
            //foreach (DataRow dr in ds.Tables[0].Rows)
            //{
            //    switch (dr["PARAMETER_ID"].ToString())
            //    {
            //        case "1":
            //            ql.Visible = true;
            //            break;
            //        case "2":
            //            dsn.Visible = true;
            //            break;
            //        case "3":
            //            clr.Visible = true;
            //            break;
            //        case "4":
            //            shp.Visible = true;
            //            break;
            //        case "5":
            //            sz.Visible = true;
            //            ChkForMtr.Checked = false;
            //            break;
            //        case "6":
            //            shd.Visible = true;
            //            break;
            //    }
            //}
        }

    }
    protected void dditemname_SelectedIndexChanged(object sender, EventArgs e)
    {
        //item_change();

        Fill_Description();

    }
    private void Fill_Description()
    {
//        string STR;
//        string size = "";
//        if (chkexportsize.Checked == true || (variable.VarWEAVERPURCHASEORDER_FULLAREA == "1" && chkpurchasefolio.Checked == true))
//        {
//            switch (DDunit.SelectedValue.ToString())
//            {
//                case "6":
//                    size = "Sizeinch";
//                    break;
//                case "1":
//                    size = "Sizemtr";
//                    break;
//                default:
//                    size = "Sizeft";
//                    break;
//            }

//        }
//        else
//        {
//            switch (DDunit.SelectedValue.ToString())
//            {
//                case "6":
//                    size = "Sizeinch";
//                    break;
//                case "1":
//                    size = "ProdSizeMtr";
//                    break;
//                default:
//                    size = "ProdSizeFt";
//                    break;
//            }

//        }
//        //////***************************************
//        if (Session["varcompanyId"].ToString() == "9") //Hafizia
//        {

//            STR = "Select distinct JA.Item_Finished_Id,QDCS+Space(5)+ Case When 6=" + DDunit.SelectedValue + " Then Isnull(" + size + ",'') Else Case When 1=" + DDunit.SelectedValue + @" Then Isnull(" + size + ",'') Else Isnull(" + size + @",'') End End Description 
//                     From JobAssigns JA inner join OrderDetail Od ON JA.Item_Finished_Id=Od.Item_Finished_Id inner join ViewFindFinishedidItemidQDCSS IPM On 
//                     IPM.FinishedId=JA.Item_Finished_Id inner join Item_Master IM ON IM.Item_Id=IPM.Item_Id Where JA.OrderId=" + DDCustomerOrderNumber.SelectedValue + @" And 
//                     IPM.Item_Id=" + DDItemName.SelectedValue + @" AND JA.Item_Finished_Id in (Select JA.Item_Finished_Id from JobAssigns JA LEFT OUTER JOIN 
//                     v_ProcessOrderQty PD ON PD.OrderId=JA.OrderId And PD.Item_Finished_Id=JA.Item_Finished_Id 
//                     Where JA.OrderId=" + DDCustomerOrderNumber.SelectedValue + " Group By JA.Item_Finished_Id,PreProdAssignedQty Having PreProdAssignedQty>IsNull(Sum(Qty),0))";

//        }
//        else
//        {
//            if (variable.VarTAGGINGWITHINTERNALPRODUCTION == "1")
//            {
//                STR = "Select distinct JA.Item_Finished_Id,QDCS+Space(5)+ Case When 2=" + DDunit.SelectedValue + " Then Isnull(" + size + ",'') Else Case When 1=" + DDunit.SelectedValue + @" Then Isnull(" + size + @",'') Else '' End End Description 
//                     From JobAssigns JA inner join OrderDetail Od ON JA.Item_Finished_Id=Od.Item_Finished_Id inner join ViewFindFinishedidItemidQDCSS IPM On 
//                     IPM.FinishedId=JA.Item_Finished_Id inner join Item_Master IM ON IM.Item_Id=IPM.Item_Id Where JA.OrderId=" + DDCustomerOrderNumber.SelectedValue + @" And 
//                     IPM.Item_Id=" + DDItemName.SelectedValue + @" AND JA.Item_Finished_Id in  (Select JA.Item_Finished_Id from JobAssigns JA LEFT OUTER JOIN 
//                     V_PROCESSORDERQTYOTHER_TAGGINGWITHINTERNALPRODUCTION PD ON PD.OrderId=JA.OrderId And PD.Item_Finished_Id=JA.Item_Finished_Id 
//                     Where JA.OrderId=" + DDCustomerOrderNumber.SelectedValue + " Group By JA.Item_Finished_Id,PreProdAssignedQty Having PreProdAssignedQty>IsNull(Sum(PD.Qty),0)) order by Description";
//            }
//            else
//            {
//                STR = "Select distinct JA.Item_Finished_Id,QDCS+Space(5)+ Case When 2=" + DDunit.SelectedValue + " Then Isnull(" + size + ",'') Else Case When 1=" + DDunit.SelectedValue + @" Then Isnull(" + size + @",'') Else '' End End Description 
//                     From JobAssigns JA inner join OrderDetail Od ON JA.Item_Finished_Id=Od.Item_Finished_Id inner join ViewFindFinishedidItemidQDCSS IPM On 
//                     IPM.FinishedId=JA.Item_Finished_Id inner join Item_Master IM ON IM.Item_Id=IPM.Item_Id Where JA.OrderId=" + DDCustomerOrderNumber.SelectedValue + @" And 
//                     IPM.Item_Id=" + DDItemName.SelectedValue + @" AND JA.Item_Finished_Id in  (Select JA.Item_Finished_Id from JobAssigns JA LEFT OUTER JOIN 
//                     v_ProcessOrderQtyother PD ON PD.OrderId=JA.OrderId And PD.Item_Finished_Id=JA.Item_Finished_Id 
//                     Where JA.OrderId=" + DDCustomerOrderNumber.SelectedValue + " Group By JA.Item_Finished_Id,PreProdAssignedQty Having PreProdAssignedQty>IsNull(Sum(PD.Qty),0)) order by Description";
//            }
//        }
//        UtilityModule.ConditionalComboFill(ref DDDescription, STR, true, "--Select--");
    }
    //private void Area()
    //{
    //    SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
    //    con.Open();
    //    try
    //    {

    //        DataSet Ds = SqlHelper.ExecuteDataset(con, CommandType.Text, "select size_Id,SHAPE_ID from Item_Parameter_Master where Item_Finished_Id=" + DDDescription.SelectedValue + " And MasterCompanyId=" + Session["varCompanyId"] + "");
    //        if (Ds.Tables[0].Rows.Count > 0)
    //        {
    //            int SizeId = Convert.ToInt32(Ds.Tables[0].Rows[0]["size_Id"]);
    //            if (SizeId != 0 && hncomp.Value != "6")
    //            {
    //                LblArea.Visible = true;
    //                TdArea.Visible = true;
    //                SqlParameter[] _arrpara = new SqlParameter[9];
    //                _arrpara[0] = new SqlParameter("@size_Id", SqlDbType.Int);
    //                _arrpara[1] = new SqlParameter("@UnitTypeId", SqlDbType.Int);
    //                _arrpara[2] = new SqlParameter("@Length", SqlDbType.Float);
    //                _arrpara[3] = new SqlParameter("@width", SqlDbType.Float);
    //                _arrpara[4] = new SqlParameter("@Area", SqlDbType.Float);
    //                _arrpara[5] = new SqlParameter("@Shapeid", SqlDbType.Int);
    //                _arrpara[6] = new SqlParameter("@ExportSizeflag", SqlDbType.TinyInt);
    //                _arrpara[7] = new SqlParameter("@PuchaseFolio", SqlDbType.TinyInt);
    //                _arrpara[8] = new SqlParameter("@ShapeName", SqlDbType.VarChar, 10);

    //                _arrpara[0].Value = SizeId;
    //                _arrpara[1].Value = DDunit.SelectedValue;
    //                _arrpara[2].Direction = ParameterDirection.Output;
    //                _arrpara[3].Direction = ParameterDirection.Output;
    //                _arrpara[4].Direction = ParameterDirection.Output;
    //                _arrpara[5].Direction = ParameterDirection.Output;
    //                _arrpara[6].Value = chkexportsize.Checked == true ? "1" : "0";
    //                _arrpara[7].Value = chkpurchasefolio.Checked == true ? "1" : "0";
    //                _arrpara[8].Direction = ParameterDirection.Output;

    //                SqlHelper.ExecuteNonQuery(con, CommandType.StoredProcedure, "Pro_Area", _arrpara);

    //                switch (DDunit.SelectedValue)
    //                {
    //                    case "2": //ft
    //                        TxtLength.Text = string.Format("{0:#0.00}", _arrpara[2].Value);
    //                        TxtWidth.Text = string.Format("{0:#0.00}", _arrpara[3].Value);
    //                        break;
    //                    default:
    //                        TxtLength.Text = _arrpara[2].Value.ToString();
    //                        TxtWidth.Text = _arrpara[3].Value.ToString();
    //                        break;
    //                }

    //                TxtArea.Text = string.Format("{0:#0.0000}", _arrpara[4].Value);
    //                if (variable.VarWEAVERPURCHASEORDER_FULLAREA == "1" && chkpurchasefolio.Checked == true)
    //                {
    //                    if (Convert.ToInt32(DDunit.SelectedValue) == 2 || Convert.ToInt16(DDunit.SelectedValue) == 6)
    //                    {
    //                        UtilityModule.FtAreaCalculate_WeaverOrder(TxtLength, TxtWidth, TxtArea, 1, Convert.ToInt16(Session["varcompanyId"]));
    //                    }
    //                    if (Convert.ToInt32(DDunit.SelectedValue) == 1)
    //                    {
    //                        UtilityModule.AreaMtSq_Weaverorder(Convert.ToDouble(TxtLength.Text), Convert.ToDouble(TxtWidth.Text), TxtArea, _arrpara[8].Value.ToString(), Convert.ToInt16(Session["varcompanyId"]));
    //                    }
    //                }
    //                else
    //                {
    //                    if (Convert.ToInt32(DDunit.SelectedValue) == 1)
    //                    {
    //                        TxtArea.Text = Convert.ToString(UtilityModule.Calculate_Area_Mtr(Convert.ToDouble(TxtLength.Text), Convert.ToDouble(TxtWidth.Text), Convert.ToInt32(DDcaltype.SelectedValue), Convert.ToInt32(Ds.Tables[0].Rows[0]["SHAPE_ID"])));
    //                    }
    //                    if (Convert.ToInt32(DDunit.SelectedValue) == 2 || Convert.ToInt16(DDunit.SelectedValue) == 6)
    //                    {
    //                        if (Session["varCompanyId"].ToString() == "33" && Convert.ToInt32(DDunit.SelectedValue) == 2)
    //                        {
    //                            TxtArea.Text = string.Format("{0:#0.00}", _arrpara[4].Value);
    //                        }
    //                        else
    //                        {

    //                            TxtArea.Text = Convert.ToString(UtilityModule.Calculate_Area_Ft(Convert.ToDouble(TxtLength.Text), Convert.ToDouble(TxtWidth.Text), Convert.ToInt32(DDcaltype.SelectedValue), Convert.ToInt32(Ds.Tables[0].Rows[0]["SHAPE_ID"]), UnitId: Convert.ToInt16(DDunit.SelectedValue)));
    //                        }

    //                        //TxtArea.Text = Convert.ToString(UtilityModule.Calculate_Area_Ft(Convert.ToDouble(TxtLength.Text), Convert.ToDouble(TxtWidth.Text), Convert.ToInt32(DDcaltype.SelectedValue), Convert.ToInt32(Ds.Tables[0].Rows[0]["SHAPE_ID"]), UnitId: Convert.ToInt16(DDunit.SelectedValue)));
    //                    }
    //                }
    //            }
    //            else if (SizeId != 0 && hncomp.Value == "6")
    //            {
    //                //datatset dt1 = SqlHelper.ExecuteDataset(con, CommandType.Text, "");
    //                string str = "";
    //                if (variable.VarNewQualitySize == "1")
    //                {
    //                    str = "select ExpWidthMS_Ft as WidthFt,ExpLengthMS_Ft as LengthFt, 0 as HeightFt,LEFT(MtrSize, CHARINDEX('x', MtrSize) - 1) AS WidthMtr,REPLACE(SUBSTRING(MtrSize, CHARINDEX('x', MtrSize), LEN(MtrSize)), 'x', '') as LengthMtr,0 as HeightMtr,Export_Area as AreaFt,MtrArea as AreaMtr from QualitySizeNew where sizeid=" + SizeId + " and updatedate is null";
    //                }
    //                else
    //                {
    //                    str = "select WidthFt,LengthFt,HeightFt,WidthMtr,LengthMtr,HeightMtr,AreaFt,AreaMtr from size where sizeid=" + SizeId + " And MasterCompanyId=" + Session["varCompanyId"];
    //                }
    //                DS = SqlHelper.ExecuteDataset(con, CommandType.Text, str);
    //                if (DDunit.SelectedValue == "2")
    //                {
    //                    TxtLength.Text = string.Format("{0:#0.00}", DS.Tables[0].Rows[0]["LengthFt"].ToString());
    //                    TxtWidth.Text = string.Format("{0:#0.00}", DS.Tables[0].Rows[0]["WidthFt"].ToString());
    //                    TxtArea.Text = string.Format("{0:#0.0000}", DS.Tables[0].Rows[0]["AreaFt"].ToString());
    //                }
    //                else
    //                {
    //                    TxtLength.Text = string.Format("{0:#0.00}", DS.Tables[0].Rows[0]["LengthMtr"].ToString());
    //                    TxtWidth.Text = string.Format("{0:#0.00}", DS.Tables[0].Rows[0]["Widthmtr"].ToString());
    //                    decimal area;
    //                    area = Convert.ToDecimal((Convert.ToDecimal(TxtLength.Text) * Convert.ToDecimal(TxtWidth.Text) * Convert.ToDecimal(10.764)) / 10000);
    //                    TxtArea.Text = string.Format("{0:#0.0000}", area);
    //                }

    //            }
    //            else
    //            {
    //                LblArea.Visible = false;
    //                TdArea.Visible = false;
    //                TxtArea.Text = "0";
    //            }
    //            //datatset dt = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "");
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //        UtilityModule.MessageAlert(ex.Message, "Master/Process/ProcessIssue.aspx");
    //    }
    //    finally
    //    {
    //        con.Close();
    //    }
    //}
    //private void item_change()
    //{
    //    UtilityModule.ConditionalComboFill(ref DDunit, "select Distinct U.UnitId,U.UnitName from Unit U inner join UNIT_TYPE_MASTER UT on U.UnitTypeID=UT.UnitTypeID inner join Item_master IM on Im.UnitTypeID=UT.UnitTypeID and Im.item_id=" + dditemname.SelectedValue + " order by unitname", true, "select unit");
    //    if (DDunit.Items.Count > 0)
    //    {
    //        DDunit.SelectedIndex = 1;
    //    }
    //    str = "where v.CATEGORY_ID=" + ddCatagory.SelectedValue + " and v.item_id=" + dditemname.SelectedValue + " and im.MasterCompanyid=" + Session["varCompanyId"] + "";
    //    fill_combo();
    //}
//    private void fill_combo()
//    {
//        if (dquality.Visible == true && varcombo < 1)
//        {
//            UtilityModule.ConditionalComboFill(ref dquality, @"select Distinct im.QualityId,im.QualityName FROM Quality im Inner join 
//            v_finisheditemdetail v On v.QualityId=im.QualityId Inner join stock s On s.ITEM_FINISHED_ID=v.ITEM_FINISHED_ID " + str + " order by im.QualityName", true, "-Select Quality-");
//            return;
//        }
//        if (dddesign.Visible == true && varcombo < 2)
//        {
//            UtilityModule.ConditionalComboFill(ref dddesign, @"select Distinct im.designId,im.designName FROM Design im Inner join 
//                v_finisheditemdetail v On v.designId=im.designId Inner join stock s On s.ITEM_FINISHED_ID=v.ITEM_FINISHED_ID " + str + "  order by im.designName", true, "-Select Design-");
//            return;
//        }
//        if (ddcolor.Visible == true && varcombo < 3)
//        {
//            UtilityModule.ConditionalComboFill(ref ddcolor, @"select Distinct im.ColorId,im.ColorName FROM color im Inner join 
//                v_finisheditemdetail v On v.ColorId=im.ColorId Inner join stock s On s.ITEM_FINISHED_ID=v.ITEM_FINISHED_ID " + str + " order by im.ColorName", true, "-Select Colour-");
//            return;
//        }
//        if (ddshape.Visible == true && varcombo < 4)
//        {
//            UtilityModule.ConditionalComboFill(ref ddshape, @"select Distinct im.ShapeId,im.ShapeName FROM Shape im Inner join 
//                v_finisheditemdetail v On v.ShapeId=im.ShapeId Inner join stock s On s.ITEM_FINISHED_ID=v.ITEM_FINISHED_ID " + str + " order by im.ShapeName", true, "-Select Shape-");
//            return;
//        }
//        if (ddsize.Visible == true && varcombo < 5)
//        {
//            UtilityModule.ConditionalComboFill(ref ddsize, @"select Distinct im.SizeId,im.SizeFt FROM Size im Inner join 
//                v_finisheditemdetail v On v.SizeId=im.SizeId Inner join stock s On s.ITEM_FINISHED_ID=v.ITEM_FINISHED_ID " + str + " order by im.SizeFt", true, "-Select Size-");
//            return;
//        }
//        if (ddlshade.Visible == true && varcombo < 6)
//        {
//            UtilityModule.ConditionalComboFill(ref ddlshade, @"select Distinct im.ShadecolorId,im.ShadeColorName FROM ShadeColor im Inner join 
//                v_finisheditemdetail v On v.ShadecolorId=im.ShadecolorId Inner join stock s On s.ITEM_FINISHED_ID=v.ITEM_FINISHED_ID " + str + " order by im.ShadeColorName", true, "-Select Shade Colour-");
//            return;
//        }
//        if (ddgodown.Visible == true && varcombo < 7)
//        {
//            int varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "", Convert.ToInt32(Session["varCompanyId"]));
//            ////UtilityModule.ConditionalComboFill(ref ddgodown, "select Distinct g.godownid,g.godownname from godownmaster g Inner join stock s On g.godownid=s.Godownid where ITEM_FINISHED_ID=" + varfinishedid + " And S.CompanyId=" + ddCompName.SelectedValue, true, "-Select Godown-");

//            UtilityModule.ConditionalComboFill(ref ddgodown, "Select Distinct GM.GodownID,GM.GodownName From GodownMaster GM JOIN Godown_Authentication GA ON GM.GodownId=GA.GodownId and GA.UserId=" + Session["varUserId"] + " and GA.MasterCompanyId=" + Session["varCompanyId"] + @" 
//                                                               JOIN Stock S ON GM.GodownID=S.GodownID Where S.CompanyId=" + ddCompName.SelectedValue + " And S.item_finished_id=" + varfinishedid + " And GM.MasterCompanyId=" + Session["varCompanyId"] + @"", true, "-Select Godown-");
//            ViewState["finishedid"] = varfinishedid;
//            return;
//        }
//    }
//    protected void dquality_SelectedIndexChanged(object sender, EventArgs e)
//    {
//        quality_change();
//    }
//    private void quality_change()
//    {
//        str = "where v.CATEGORY_ID=" + ddCatagory.SelectedValue + "  and v.item_id=" + dditemname.SelectedValue + " and v.QualityId=" + dquality.SelectedValue + " and im.MasterCompanyid=" + Session["varCompanyId"] + "";
//        varcombo = 1;
//        fill_combo();
//    }
//    protected void dddesign_SelectedIndexChanged(object sender, EventArgs e)
//    {
//        fill_design();
//    }
//    private void fill_design()
//    {
//        str = "where v.CATEGORY_ID=" + ddCatagory.SelectedValue + "  and v.item_id=" + dditemname.SelectedValue + " and v.designId=" + dddesign.SelectedValue + "  and im.MasterCompanyid=" + Session["varCompanyId"] + "";
//        if (dquality.Visible == true)
//        {
//            str = str + "and v.QualityId=" + dquality.SelectedValue + "";
//        }
//        varcombo = 2;
//        fill_combo();
//    }
//    protected void ddcolor_SelectedIndexChanged(object sender, EventArgs e)
//    {
//        colour_change();
//    }
//    private void colour_change()
//    {
//        str = "where v.CATEGORY_ID=" + ddCatagory.SelectedValue + "  and v.item_id=" + dditemname.SelectedValue + " and v.ColorId=" + ddcolor.SelectedValue + "  and im.MasterCompanyid=" + Session["varCompanyId"] + "";
//        if (dddesign.Visible == true)
//        {
//            str = str + "and v.designId=" + dddesign.SelectedValue + "";
//        }
//        if (dquality.Visible == true)
//        {
//            str = str + "and v.QualityId=" + dquality.SelectedValue + "";
//        }
//        varcombo = 3;
//        fill_combo();
//    }
//    protected void ddshape_SelectedIndexChanged(object sender, EventArgs e)
//    {
//        FillShapeSelectedChange();
//        //shape_change();
//    }
//    private void shape_change()
//    {
//        str = "where v.CATEGORY_ID=" + ddCatagory.SelectedValue + "  and v.item_id=" + dditemname.SelectedValue + " and v.ShapeId=" + ddshape.SelectedValue + "  and im.MasterCompanyid=" + Session["varCompanyId"] + "";
//        if (dddesign.Visible == true)
//        {
//            str = str + "and v.designId=" + dddesign.SelectedValue + "";
//        }
//        if (dquality.Visible == true)
//        {
//            str = str + "and v.QualityId=" + dquality.SelectedValue + "";
//        }
//        if (ddcolor.Visible == true)
//        {
//            str = str + "and v.ColorId=" + ddcolor.SelectedValue + "";
//        }
//        varcombo = 4;
//        fill_combo();
//    }
//    protected void ddsize_SelectedIndexChanged(object sender, EventArgs e)
//    {
//        size_change();
//    }
//    private void size_change()
//    {
//        str = "where v.CATEGORY_ID=" + ddCatagory.SelectedValue + "  and v.item_id=" + dditemname.SelectedValue + " and v.SizeId=" + ddsize.SelectedValue + "  and im.MasterCompanyid=" + Session["varCompanyId"] + "";
//        if (dddesign.Visible == true)
//        {
//            str = str + "and v.designId=" + dddesign.SelectedValue + "";
//        }
//        if (dquality.Visible == true)
//        {
//            str = str + "and v.QualityId=" + dquality.SelectedValue + "";
//        }
//        if (ddcolor.Visible == true)
//        {
//            str = str + "and v.ColorId=" + ddcolor.SelectedValue + "";
//        }
//        if (ddshape.Visible == true)
//        {
//            str = str + "and v.ShapeId=" + ddshape.SelectedValue + "";
//        }
//        varcombo = 5;
//        fill_combo();
//    }
//    protected void ddlshade_SelectedIndexChanged(object sender, EventArgs e)
//    {
//        shade_change();
//    }
//    private void shade_change()
//    {
//        varcombo = 6;
//        fill_combo();
//    }
//    protected void ChkForMtr_CheckedChanged(object sender, EventArgs e)
//    {
//        str = "where v.CATEGORY_ID=" + ddCatagory.SelectedValue + "  and v.item_id=" + dditemname.SelectedValue + "  and im.MasterCompanyid=" + Session["varCompanyId"] + "";
//        if (dddesign.Visible == true)
//        {
//            str = str + "and v.designId=" + dddesign.SelectedValue + "";
//        }
//        if (dquality.Visible == true)
//        {
//            str = str + "and v.QualityId=" + dquality.SelectedValue + "";
//        }
//        if (ddcolor.Visible == true)
//        {
//            str = str + "and v.ColorId=" + ddcolor.SelectedValue + "";
//        }
//        if (ddshape.Visible == true)
//        {
//            str = str + "and v.ShapeId=" + ddshape.SelectedValue + "";
//        }
//        UtilityModule.ConditionalComboFill(ref ddsize, @"select Distinct im.SizeId,im.SizeMtr FROM Size im Inner join 
//                v_finisheditemdetail v On v.SizeId=im.SizeId Inner join stock s On s.ITEM_FINISHED_ID=v.ITEM_FINISHED_ID " + str + " order by im.SizeMtr", true, "-Select Size-");
//    }
    protected void TxtProdCode_TextChanged(object sender, EventArgs e)
    {
    //    DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "select CATEGORY_ID,ITEM_ID,QualityId,ColorId,designId,ShapeId,SizeId,ShadecolorId from v_finisheditemdetail v Inner join stock s On v.ITEM_FINISHED_ID=s.ITEM_FINISHED_ID where ProductCode=" + TxtProdCode.Text + "");
    //    if (ds.Tables[0].Rows.Count > 0)
    //    {
    //        ddCatagory.SelectedValue = ds.Tables[0].Rows[0]["CATEGORY_ID"].ToString();
    //        ddlcategorycange();
    //        dditemname.SelectedValue = ds.Tables[0].Rows[0]["ITEM_ID"].ToString();
    //        item_change();
    //        if (dquality.Visible == true)
    //        {
    //            dquality.SelectedValue = ds.Tables[0].Rows[0]["QualityId"].ToString();
    //            quality_change();
    //        }
    //        if (dddesign.Visible == true)
    //        {
    //            dddesign.SelectedValue = ds.Tables[0].Rows[0]["designId"].ToString();
    //            fill_design();
    //        }
    //        if (ddcolor.Visible == true)
    //        {
    //            ddcolor.SelectedValue = ds.Tables[0].Rows[0]["ColorId"].ToString();
    //            colour_change();
    //        }
    //        if (ddshape.Visible == true)
    //        {
    //            ddshape.SelectedValue = ds.Tables[0].Rows[0]["ShapeId"].ToString();
    //            FillShapeSelectedChange();
    //            //shape_change();
    //        }
    //        if (ddsize.Visible == true)
    //        {
    //            ddsize.SelectedValue = ds.Tables[0].Rows[0]["SizeId"].ToString();
    //            size_change();
    //        }
    //        if (ddlshade.Visible == true)
    //        {
    //            ddlshade.SelectedValue = ds.Tables[0].Rows[0]["ShadecolorId"].ToString();
    //            shade_change();
    //        }
    //    }
    //    else
    //    {
    //        ScriptManager.RegisterStartupScript(Page, GetType(), "opn1", "alert('This Product Code Not Found In Stock......');", true);
    //    }
    }
  
   
    
    
    protected void btnsave_Click(object sender, EventArgs e)
    {
        //SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        //if (con.State == ConnectionState.Closed)
        //{
        //    con.Open();
        //}
        //SqlTransaction tran = con.BeginTransaction();
        //try
        //{
        //    SqlParameter[] arr = new SqlParameter[22];
        //    arr[0] = new SqlParameter("@MaterialIssueID", SqlDbType.Int);
        //    arr[1] = new SqlParameter("@CompanyId", SqlDbType.Int);
        //    arr[2] = new SqlParameter("@ProcessId", SqlDbType.Int);
        //    arr[3] = new SqlParameter("@ProductionUnitId", SqlDbType.Int);
        //    arr[4] = new SqlParameter("@MachineNoId", SqlDbType.Int);
        //    arr[5] = new SqlParameter("@ISSUENO", SqlDbType.NVarChar, 50);
        //    arr[6] = new SqlParameter("@ISSUEDATE", SqlDbType.DateTime);
        //    arr[7] = new SqlParameter("@UserId", SqlDbType.Int);
        //    arr[8] = new SqlParameter("@MASTERCOMPANYID", SqlDbType.Int);
        //    arr[9] = new SqlParameter("@MaterialIssueDetailId", SqlDbType.Int);
        //    arr[10] = new SqlParameter("@FINISHEDID", SqlDbType.Int);
        //    arr[11] = new SqlParameter("@ISSUEQTY", SqlDbType.Float);
        //    arr[12] = new SqlParameter("@GODOWNID", SqlDbType.Int);
        //    arr[13] = new SqlParameter("@LotNo", SqlDbType.VarChar, 50);
        //    arr[14] = new SqlParameter("@TagNo", SqlDbType.NVarChar, 50);
        //    arr[15] = new SqlParameter("@BinNo", SqlDbType.VarChar, 50);
        //    arr[16] = new SqlParameter("@UnitId", SqlDbType.Int);
        //    arr[17] = new SqlParameter("@msg", SqlDbType.VarChar, 200);



        //    arr[0].Direction = ParameterDirection.InputOutput;
        //    arr[0].Value = hnMaterialIssueId.Value;
        //    //arr[0].Value = ViewState["MaterialIssueID"];
        //    arr[1].Value = ddCompName.SelectedValue;
        //    arr[2].Value = DDProcessName.SelectedValue;
        //    arr[3].Value = DDProductionUnit.SelectedValue;
        //    arr[4].Value = DDMachineNo.SelectedValue;
        //    arr[5].Direction = ParameterDirection.InputOutput;
        //    arr[5].Value = txtchalanno.Text;
        //    arr[6].Value = txtdate.Text;
        //    arr[7].Value = Session["varuserid"];
        //    arr[8].Value = Session["varCompanyId"];
        //    arr[9].Value = 0;
        //    //if (btnsave.Text == "Update")
        //    //{
        //    //    //arr[9].Value = gvdetail.SelectedDataKey.Value;
        //    //}
        //    //else
        //    //{
        //    //    arr[9].Value = 0;
        //    //}
        //    arr[10].Value = ViewState["finishedid"];
        //    arr[11].Value = txtissqty.Text;
        //    arr[12].Value = ddgodown.SelectedValue;
        //    arr[13].Value = ddlotno.SelectedItem.Text;
        //    arr[14].Value = TDTagNo.Visible == true ? DDTagNo.SelectedItem.Text : "Without Tag No";
        //    arr[15].Value = TDBinNo.Visible == true ? DDBinNo.SelectedItem.Text : "";
        //    arr[16].Value = DDunit.SelectedValue;
        //    arr[17].Direction = ParameterDirection.Output;

        //    SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, "[PRO_SAVEUPDATEMATERIALISSUEONMACHINE]", arr);
        //    //ViewState["MaterialIssueID"] = arr[0].Value;
        //    hnMaterialIssueId.Value = arr[0].Value.ToString();
        //    tran.Commit();
        //    if (arr[17].Value.ToString() != "")
        //    {
        //        ScriptManager.RegisterStartupScript(Page, GetType(), "save", "alert('" + arr[17].Value.ToString() + "');", true);
        //    }
        //    btnsave.Text = "Save";
        //    txtchalanno.Text = Convert.ToString(arr[5].Value);
        //    txtissqty.Text = "";
        //    txtstock.Text = "";
        //    FillstockQty(Convert.ToInt32(ViewState["finishedid"]));
        //    fill_grid();
        //}
        //catch (Exception ex)
        //{
        //    tran.Rollback();
        //    LblErrorMessage.Text = ex.Message;
        //    LblErrorMessage.Visible = true;
        //}
        //finally
        //{
        //    con.Close();
        //    con.Dispose();
        //}
    }
    
    private void fill_grid()
    {
//        string str = @"Select VF.CATEGORY_NAME+' '+VF.ITEM_NAME+' '+VF.QualityName+' '+VF.designName+' '+VF.ColorName+' '+VF.ShadeColorName+' '+VF.ShapeName+' '+VF.SizeFt +'   ' +isnull(u.unitname,'') as Itemdescription
//                    ,GM.GodownName,MID.LotNo,MID.TagNo,MID.unitId,MID.FinishedId,MID.IssueQty,Replace(CONVERT(nvarchar(11),MI.IssueDate,106),' ','-') as IssueDate,MI.IssueNo,
//                    MI.MaterialIssueId,MID.MaterialIssueDetailId,MID.BinNo,MI.ProcessId,MI.ProductionUnitId,MI.MachineNoID
//                    from MaterialIssueOnMachineMaster MI JOIN MaterialIssueOnMachineDetail MID ON MI.MaterialIssueId=MID.MaterialIssueId
//                    JOIN V_FinishedItemDetail VF ON MID.FinishedId=VF.ITEM_FINISHED_ID
//                    JOIN GodownMaster GM ON MID.GodownId=GM.GoDownID
//                    LEFT JOIN Unit U ON MID.UnitId=U.UnitID
//                    Where MI.MaterialIssueId=" + hnMaterialIssueId.Value;

//        DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, str);
//        gvdetail.DataSource = ds.Tables[0];
//        gvdetail.DataBind();
//        if (ChKForEdit.Checked == true)
//        {
//            if (ds.Tables[0].Rows.Count > 0)
//            {
//                txtchalanno.Text = ds.Tables[0].Rows[0]["IssueNo"].ToString();
//                txtdate.Text = ds.Tables[0].Rows[0]["issuedate"].ToString();

//            }
//            else
//            {
//                txtchalanno.Text = "";
//                txtdate.Text = System.DateTime.Now.ToString("dd-MMM-yyyy");
//            }

//        }
    }
    protected void gvdetail_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        //if (e.Row.RowType == DataControlRowType.DataRow)
        //{
        //    e.Row.Attributes["onmouseover"] = "javascript:setMouseOverColor(this);";
        //    e.Row.Attributes["onmouseout"] = "javascript:setMouseOutColor(this);";
        //    e.Row.Attributes["onclick"] = ClientScript.GetPostBackClientHyperlink(this.gvdetail, "Select$" + e.Row.RowIndex);
        //}
        ////e.Row.Cells[GetGridColumnId("TagNo")].Visible = false;
        ////if (MySession.TagNowise == "1")
        ////{
        ////    e.Row.Cells[GetGridColumnId("TagNo")].Visible = true;
        ////}

    }
    //protected int GetGridColumnId(string ColName)
    //{
    //    int columnid = -1;
    //    //foreach (DataControlField col in gvdetail.Columns)
    //    //{
    //    //    if (col.HeaderText.ToUpper().Trim() == ColName.ToUpper())
    //    //    {
    //    //        columnid = gvdetail.Columns.IndexOf(col);
    //    //        break;
    //    //    }
    //    //}
    //    return columnid;
    //}
    protected void gvdetail_RowEditing(object sender, GridViewEditEventArgs e)
    {
        //gvdetail.EditIndex = e.NewEditIndex;
        //fill_grid();

    }
    protected void gvdetail_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    {
        //gvdetail.EditIndex = -1;
        //fill_grid();
    }
    protected void gvdetail_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {
        //SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        //if (con.State == ConnectionState.Closed)
        //{
        //    con.Open();
        //}
        //SqlTransaction Tran = con.BeginTransaction();
        //try
        //{
        //    Label lblhqty = (Label)gvdetail.Rows[e.RowIndex].FindControl("lblhqty");
        //    Label lblMaterialIssueId = (Label)gvdetail.Rows[e.RowIndex].FindControl("lblMaterialIssueId");
        //    Label lblMaterialIssueDetailId = (Label)gvdetail.Rows[e.RowIndex].FindControl("lblMaterialIssueDetailId");           
        //    TextBox txtqty = (TextBox)gvdetail.Rows[e.RowIndex].FindControl("txtqty");
        //    Label lblprocessid = (Label)gvdetail.Rows[e.RowIndex].FindControl("lblprocessid");
        //    //**************
        //    SqlParameter[] param = new SqlParameter[8];
        //    param[0] = new SqlParameter("@MaterialIssueID", lblMaterialIssueId.Text);
        //    param[1] = new SqlParameter("@MaterialIssueDetailId", lblMaterialIssueDetailId.Text);           
        //    param[2] = new SqlParameter("@hqty", lblhqty.Text);
        //    param[3] = new SqlParameter("@msg", SqlDbType.VarChar, 100);
        //    param[3].Direction = ParameterDirection.Output;
        //    param[4] = new SqlParameter("@IssueQty", txtqty.Text == "" ? "0" : txtqty.Text);
        //    param[5] = new SqlParameter("@processid", lblprocessid.Text);
        //    param[6] = new SqlParameter("@userid", Session["varuserid"]);
        //    param[7] = new SqlParameter("@MasterCompanyId", Session["VarCompanyId"]);
        //    //*************
        //    SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "PRO_UPDATEMATERIALISSUEONMACHINE", param);
        //    lblmessage.Text = param[3].Value.ToString();
        //    Tran.Commit();
        //    gvdetail.EditIndex = -1;
        //    fill_grid();            
        //}
        //catch (Exception ex)
        //{
        //    lblmessage.Text = ex.Message;
        //    Tran.Rollback();
        //}
        //finally
        //{
        //    con.Dispose();
        //    con.Close();
        //}
    }
    protected void gvdetail_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {

        //SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        //if (con.State == ConnectionState.Closed)
        //{
        //    con.Open();
        //}
        //SqlTransaction Tran = con.BeginTransaction();
        //try
        //{
        //    Label lblMaterialIssueId = (Label)gvdetail.Rows[e.RowIndex].FindControl("lblMaterialIssueId");
        //    Label lblMaterialIssueDetailId = (Label)gvdetail.Rows[e.RowIndex].FindControl("lblMaterialIssueDetailId");
        //    Label lblprocessid = (Label)gvdetail.Rows[e.RowIndex].FindControl("lblprocessid");

        //    SqlParameter[] param = new SqlParameter[6];
        //    param[0] = new SqlParameter("@MaterialIssueID", lblMaterialIssueId.Text);
        //    param[1] = new SqlParameter("@MaterialIssueDetailId", lblMaterialIssueDetailId.Text);
        //    param[2] = new SqlParameter("@Processid", lblprocessid.Text);
        //    param[3] = new SqlParameter("@UserID", Session["VarUserId"]);
        //    param[4] = new SqlParameter("@MasterCompanyId", Session["VarCompanyId"]);
        //    param[5] = new SqlParameter("@msg", SqlDbType.VarChar, 100);
        //    param[5].Direction = ParameterDirection.Output;
        //    //****************
        //    SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "PRO_DELETEMATERIALISSUEONMACHINE", param);
        //    lblmessage.Text = param[5].Value.ToString();
        //    Tran.Commit();
        //    fill_grid();
        //    //***************
        //}
        //catch (Exception ex)
        //{
        //    lblmessage.Text = ex.Message;
        //    Tran.Rollback();
        //}
        //finally
        //{
        //    con.Dispose();
        //    con.Close();
        //}


       
    }


    protected void ChKForEdit_CheckedChanged(object sender, EventArgs e)
    {
        //DDIssueNo.Items.Clear();
        //txtchalanno.Text = "";
        //txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
        //Td3.Visible = false;
        //if (ChKForEdit.Checked == true)
        //{
        //    Td3.Visible = true;

        //    MachineNoSelectedChanged();
        //}
    }
    protected void DDIssueNo_SelectedIndexChanged(object sender, EventArgs e)
    {
        ////ViewState["MaterialIssueID"] = DDIssueNo.SelectedValue.ToString();
        //hnMaterialIssueId.Value = DDIssueNo.SelectedValue.ToString();
        //txtchalanno.Text = DDIssueNo.SelectedItem.Text;

        ////string st = DDIssueNo.SelectedItem.Text;
        ////string[] tt = st.Split('/');
        ////txtchalanno.Text = tt[0].ToString();
        //fill_grid();
    }
    protected void btnPreview_Click(object sender, EventArgs e)
    {
        report();
    }
    private void report()
    {
        //        if (MySession.TagNowise == "1")
        //        {
        //            Session["ReportPath"] = "Reports/RptGateOutTagWise.rpt";
        //        }
        //        else
        //        {
        //            Session["ReportPath"] = "Reports/RptGateOut.rpt";
        //        }
        //        DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, @"SELECT c.CompanyName,c.CompAddr1,c.CompAddr2,c.CompAddr3,c.CompFax,c.CompTel,e.EmpName,e.Address,e.PhoneNo,e.Mobile,e.Fax,gom.ISSUENO,gom.ISSUEDATE,LotNo,ISSUEQTY,god.Remark,god.CategoryType,gm.godownname,
        //        CATEGORY_NAME+' '+ITEM_NAME+' '+QualityName+' '+designName+' '+ColorName+' '+ShadeColorName+' '+ShapeName+' '+ case When god.flagsize=0 then SizeFt else case when god.flagsize=1 then sizemtr else sizeinch end end as Description,
        //        ITEM_FINISHED_ID,gm.GoDownID,U.unitname,god.TagNo," + MySession.TagNowise + @" as TagNoWise,DP.DepartmentName,isnull(C.GSTNo,'') as GSTIN,isnull(e.gstno,'') as EMPGSTIN,isnull(gom.EWayBillNo,'') as EWayBillNo,isnull(vd.hsncode,'') as HSNCode,Isnull(VD.ItemCode,'') as ItemCode
        //        FROM COMPANYINFO C INNER JOIN GateOutMaster gom ON c.CompanyId=gom.COMPANYID inner join empinfo e on e.empid=gom.partyid inner join Gateoutdetail god On god.GATEOUTID=gom.GATEOUTID Inner join 
        //        GodownMaster gm On gm.GoDownID=god.GoDownID inner join V_finisheditemdetail vd On vd.item_finished_id=god.finishedid left join Unit U on god.unitid=u.unitid left join Department DP on GOM.Deptid=DP.DepartmentId where gom.GATEOUTID=" + ViewState["GATEOUT"] + " ");
        //        Session["dsFileName"] = "~\\ReportSchema\\RptGateOut.xsd";
        //        if (ds.Tables[0].Rows.Count > 0)
        //        {
        //            Session["rptFileName"] = Session["ReportPath"];
        //            Session["GetDataset"] = ds;
        //            StringBuilder stb = new StringBuilder();
        //            stb.Append("<script>");
        //            stb.Append("window.open('../../ViewReport.aspx', 'nwwin', 'toolbar=0, titlebar=1,  top=0px, left=0px, scrollbars=1, resizable = yes');</script>");
        //            ScriptManager.RegisterClientScriptBlock(Page, GetType(), "opn", stb.ToString(), false);
        //        }
        //        else
        //        {
        //            ScriptManager.RegisterStartupScript(Page, GetType(), "opn1", "alert('No Record Found!');", true);
        //        }
    }
   
}
