using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using System.Data;
public partial class Masters_Purchase_PurchaseIssueEdit : System.Web.UI.Page
{
   public int orderid=0;
   public int indentid=0;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            orderid = 0;
            indentid = 0;
            txtpindentissuedetailid.Text = "0";
            UtilityModule.ConditionalComboFill(ref ddCompName, "select distinct ci.companyid,ci.companyname from companyinfo ci inner join purchaseindentissue pis on ci.companyid=pis.companyid", true, "Select Company");
        }
    }
    protected void ddCompName_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddempname, "select distinct ei.empid,ei.empname from empinfo ei inner join  purchaseindentissue pis on pis.partyid=ei.empid", true, "select Party");
    }
    protected void ddempname_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddchallan, "select distinct pindentissueid,challanno from purchaseindentissue where partyid="+ddempname.SelectedValue+" and companyid="+ddCompName.SelectedValue, true, "Select ChallanNo");
    }
    protected void ddchallan_SelectedIndexChanged(object sender, EventArgs e)
    {
        Fill_Grid();
        fill_txtboxes();
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        string order = "select orderid from purchaseindentissue where pindentissueid =" + ddchallan.SelectedValue;
        Session["orderid"]=Convert.ToInt32( SqlHelper.ExecuteScalar(con, CommandType.Text, order));
        orderid = Convert.ToInt32(Session["orderid"]);
        if (orderid > 0)
        {
            chkcustomervise.Checked = true;
            UtilityModule.ConditionalComboFill(ref ddCatagory, @"select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm inner join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID
            inner join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id  inner join orderdetail od on od.ITEM_FINISHED_ID=ipm.ITEM_FINISHED_ID where od.orderid="+Convert.ToInt32(orderid), true, "Select Category");
        }
        else
        {
            chkcustomervise.Checked = false;
        }
        string indent = "select indentid from purchaseindentissue where pindentissueid=" + ddchallan.SelectedValue;
        SqlHelper.ExecuteNonQuery(con, CommandType.Text, indent);
        Session["indentid"] = Convert.ToInt32(SqlHelper.ExecuteScalar(con, CommandType.Text, indent));
        indentid = Convert.ToInt32(Session["indentid"]);
        if (Convert.ToInt32(indentid) > 0)
        {
            chkindentvise.Checked = true;
            UtilityModule.ConditionalComboFill(ref ddCatagory, @" select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm 
            inner join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID inner join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id
            inner join PurchaseIndentDetail pim on pim.finishedid=ipm.ITEM_FINISHED_ID where pim.pindentid=" + Session["indentid"], true, "Select Category");
        }
        else
        {
            chkindentvise.Checked = false;
        }
        if (chkcustomervise.Checked == false && chkindentvise.Checked == false)
        {
            UtilityModule.ConditionalComboFill(ref ddCatagory, @"SELECT DISTINCT ITEM_CATEGORY_MASTER.CATEGORY_ID, ITEM_CATEGORY_MASTER.CATEGORY_NAME FROM PurchaseIndentIssueTran INNER JOIN
            PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
            ITEM_CATEGORY_MASTER INNER JOIN ITEM_MASTER ON ITEM_CATEGORY_MASTER.CATEGORY_ID = ITEM_MASTER.CATEGORY_ID INNER JOIN
            ITEM_PARAMETER_MASTER ON ITEM_MASTER.ITEM_ID = ITEM_PARAMETER_MASTER.ITEM_ID ON 
            PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID
            WHERE PurchaseIndentIssue.PindentIssueid =" + ddchallan.SelectedValue, true, "Select Category");
        }
        }
    protected void ddCatagory_SelectedIndexChanged(object sender, EventArgs e)
    {
        ddlcategorycange();
        if (chkindentvise.Checked==true)
        {
            UtilityModule.ConditionalComboFill(ref dditemname, @"select im.item_id,im.item_name from ITEM_MASTER im  inner join ITEM_PARAMETER_MASTER ipm on im.item_id=ipm.item_id
            inner join PurchaseIndentDetail pid on ipm.ITEM_FINISHED_ID=pid.FinishedId where pid.PIndentId=" + Session["indentid"] + " and im.category_id=" + ddCatagory.SelectedValue, true, "Select Item");
        }
        else if (chkcustomervise.Checked==true)
        {
            UtilityModule.ConditionalComboFill(ref dditemname, @"select distinct im.item_id,im.item_name from ITEM_MASTER im  inner join ITEM_PARAMETER_MASTER ipm  on im.item_id=ipm.item_id
            inner join ORDER_CONSUMPTION_DETAIL ocm on ipm.ITEM_FINISHED_ID=ocm.FinishedId where im.CATEGORY_ID=" + ddCatagory.SelectedValue + " and ocm.orderid=" + Session["orderid"], true, "Select Item");
        }
        else
        {
            UtilityModule.ConditionalComboFill(ref dditemname, @"SELECT DISTINCT ITEM_MASTER.ITEM_ID,ITEM_MASTER.item_name FROM PurchaseIndentIssueTran INNER JOIN
            PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
            ITEM_MASTER INNER JOIN  ITEM_PARAMETER_MASTER ON ITEM_MASTER.ITEM_ID = ITEM_PARAMETER_MASTER.ITEM_ID ON 
            PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID
            WHERE PurchaseIndentIssue.PindentIssueid = " + ddchallan.SelectedValue + " AND ITEM_MASTER.CATEGORY_ID =" + ddCatagory.SelectedValue, true, "select Item");
        }
    }
    protected void dditemname_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (chkindentvise.Checked==true)
        {
            UtilityModule.ConditionalComboFill(ref dquality, @"select distinct qualityid, qualityname from quality q inner join ITEM_PARAMETER_MASTER ipm on q.qualityid=ipm.quality_id
            inner join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID where pid.PIndentId=" +Session["indentid"]+ " and q.item_id=" + dditemname.SelectedValue, true, "Select Item");
        }
        else if (chkcustomervise.Checked == true)
        {
            UtilityModule.ConditionalComboFill(ref dquality, @" select distinct qualityid, qualityname from quality q inner join ITEM_PARAMETER_MASTER ipm on q.qualityid=ipm.quality_id
            inner join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID where ocm.orderid=" + Session["orderid"] + " and q.item_id=" + dditemname.SelectedValue, true, "Select Item");
        }
        else
        {
            UtilityModule.ConditionalComboFill(ref dquality, @"SELECT DISTINCT Quality.QualityId, Quality.QualityName FROM  PurchaseIndentIssueTran INNER JOIN
            PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
            ITEM_PARAMETER_MASTER ON PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID INNER JOIN
            Quality ON ITEM_PARAMETER_MASTER.QUALITY_ID = Quality.QualityId where PurchaseIndentIssue.PindentIssueid="+ddchallan.SelectedValue+"and Quality.item_id="+dditemname.SelectedValue, true, "select Item");
        }
        UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue, true, "Select Unit");
    }
    private void ddlcategorycange()
    {
        try
        {
            ql.Visible = false;
            clr.Visible = false;
            dsn.Visible = false;
            shp.Visible = false;
            sz.Visible = false;
            string strsql = "SELECT [CATEGORY_PARAMETERS_ID],[CATEGORY_ID],IPM.[PARAMETER_ID],PARAMETER_NAME " +
                          " FROM [ITEM_CATEGORY_PARAMETERS] IPM inner join PARAMETER_MASTER PM on " +
                          " IPM.[PARAMETER_ID]=PM.[PARAMETER_ID] where [CATEGORY_ID]=" + ddCatagory.SelectedValue;
            DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    switch (dr["PARAMETER_ID"].ToString())
                    {
                        case "1":
                            ql.Visible = true;

                            break;
                        case "2":
                            clr.Visible = true;
                            if (chkindentvise.Checked==true)
                            {
                                UtilityModule.ConditionalComboFill(ref ddcolor, @"select distinct colorid, colorname from color c
                                inner join ITEM_PARAMETER_MASTER ipm on c.colorId=ipm.color_Id inner join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId=" +Session["indentid"], true, "--Select Color--");
                            }
                            else if (chkcustomervise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddcolor, @" select distinct colorid, colorname from color c inner join ITEM_PARAMETER_MASTER ipm on c.colorid=ipm.color_Id
                                inner join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid=" + Session["orderid"], true, "--Select Color--");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref ddcolor, @"SELECT DISTINCT color.ColorId, color.ColorName FROM PurchaseIndentIssueTran INNER JOIN
                                PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
                                ITEM_PARAMETER_MASTER ON PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID INNER JOIN
                                color ON ITEM_PARAMETER_MASTER.COLOR_ID = color.ColorId where PurchaseIndentIssue.PindentIssueid=" + ddchallan.SelectedValue, true, "Select Color");
                            }
                            break;
                        case "3":
                            dsn.Visible = true;
                            if (chkindentvise.Checked == true)
                            {
                                UtilityModule.ConditionalComboFill(ref dddesign, @"select distinct designId, designName from Design d
                                inner join ITEM_PARAMETER_MASTER ipm on d.designId=ipm.design_Id inner join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId=" + Session["indentid"], true, "--Select Design--");
                            }
                            else if (chkcustomervise.Checked == true)
                            {
                                UtilityModule.ConditionalComboFill(ref dddesign, @"select distinct designId, designName from Design d  inner join ITEM_PARAMETER_MASTER ipm on d.designId=ipm.design_Id
                                inner join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid=" + Session["orderid"], true, "--Select Design--");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref dddesign, @"SELECT DISTINCT Design.designId, Design.designName FROM PurchaseIndentIssueTran INNER JOIN
                                PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
                                ITEM_PARAMETER_MASTER ON PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID INNER JOIN
                                Design ON ITEM_PARAMETER_MASTER.DESIGN_ID = Design.designId where PurchaseIndentIssue.pindentissueid=" + ddchallan.SelectedValue, true, "Slect Design");
                            }
                            break;
                        case "4":
                            shp.Visible = true;
                            if (chkindentvise.Checked==true)
                            {
                                UtilityModule.ConditionalComboFill(ref ddshape, @"select distinct ShapeId, ShapeName from shape s inner join ITEM_PARAMETER_MASTER ipm on s.ShapeId=ipm.shape_Id
                                inner join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId= " +Session["indentid"], true, "--Select Shape--");
                            }
                            else if (chkcustomervise.Checked==true)
                            {
                                UtilityModule.ConditionalComboFill(ref ddshape, @"select distinct ShapeId, ShapeName from shape s  inner join ITEM_PARAMETER_MASTER ipm on s.shapeid=ipm.shape_Id
                                inner join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid= " + Session["orderid"], true, "--Select Shape--");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref ddshape, @"SELECT DISTINCT Shape.ShapeId, Shape.ShapeName FROM PurchaseIndentIssueTran INNER JOIN
                                PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
                                ITEM_PARAMETER_MASTER ON PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID INNER JOIN
                                Shape ON  ITEM_PARAMETER_MASTER.SHAPE_ID = Shape.ShapeId where PurchaseIndentIssue.PindentIssueid="+ddchallan.SelectedValue, true, "Select Shape");
                            }
                            break;
                        case "5":
                            sz.Visible = true;
                            CheckBox1.Checked = false;
                            if (chkindentvise.Checked==true)
                            {
                                UtilityModule.ConditionalComboFill(ref ddsize, @"select distinct SizeId, SizeFt from Size s inner join ITEM_PARAMETER_MASTER ipm on s.SizeId=ipm.size_Id
                                inner join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId=" + Session["indentid"], true, "Size in Ft");
                            }
                            else if (chkcustomervise.Checked==true)
                            {
                                UtilityModule.ConditionalComboFill(ref ddsize, @"select distinct SizeId, SizeFt from Size s inner join ITEM_PARAMETER_MASTER ipm on s.SizeId=ipm.size_Id
                                inner join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid=" +Session["orderid"], true, "Size in Ft");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref ddsize, @"SELECT DISTINCT Size.SizeId, Size.SizeFt FROM PurchaseIndentIssueTran INNER JOIN
                                PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
                                ITEM_PARAMETER_MASTER ON PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID INNER JOIN
                                Size ON ITEM_PARAMETER_MASTER.SIZE_ID = Size.SizeId WHERE PurchaseIndentIssue.PindentIssueid="+ddchallan.SelectedValue, true, "Select Size");
                            }
                            break;
                        case "6":
                            shd.Visible = true;
                            if (chkindentvise.Checked==true)
                            {
                                UtilityModule.ConditionalComboFill(ref ddlshade, @"select distinct ShadecolorId, ShadeColorName from ShadeColor s inner join ITEM_PARAMETER_MASTER ipm on s.ShadecolorId=ipm.Shadecolor_Id
                                inner join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId=" + Session["indentid"], true, "Select ShadeColor");
                            }
                            else if (chkcustomervise.Checked==true)
                            {
                                UtilityModule.ConditionalComboFill(ref ddlshade, @"select distinct ShadecolorId, ShadeColorName from ShadeColor s   inner join ITEM_PARAMETER_MASTER ipm on s.ShadecolorId=ipm.Shadecolor_Id
                                inner join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid=" + Session["orderid"], true, "Select ShadeColor");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref ddlshade, @"SELECT DISTINCT ShadeColor.ShadecolorId, ShadeColor.ShadeColorName FROM PurchaseIndentIssueTran INNER JOIN
                                PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
                                ITEM_PARAMETER_MASTER ON PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID INNER JOIN
                                ShadeColor ON ITEM_PARAMETER_MASTER.SHADECOLOR_ID = ShadeColor.ShadecolorId where PurchaseIndentIssue.PindentIssueid="+ddchallan.SelectedValue, true, "Select ShadeColor");
                            }
                            break;
                    }
                }
            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/PurchaseIssueEdit.aspx");
        }
    }
         private void Fill_Grid()
    {
        gddetail.DataSource = fill_Data_grid();
        gddetail.DataBind();
    }
    private DataSet fill_Data_grid()
    {
        DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            string strsql = @"SELECT distinct pist.Pindentissuetranid, icm.CATEGORY_NAME, im.ITEM_NAME, pist.quantity,IPM1.QDCS + Space(2)+isnull(SizeMtr,'') DESCRIPTION
                            FROM ITEM_MASTER im INNER JOIN ITEM_CATEGORY_MASTER icm  ON im.CATEGORY_ID = icm.CATEGORY_ID 
                            INNER JOIN ITEM_PARAMETER_MASTER IPM ON im.ITEM_ID = IPM.ITEM_ID INNER JOIN PurchaseIndentIssueTran pist ON IPM.ITEM_FINISHED_ID = pist.Finishedid
                            inner join  ViewFindFinishedidItemidQDCSS IPM1 on IPM.Item_Finished_Id=IPM1.Finishedid where pist.pindentissueid=" + ddchallan.SelectedValue;
            con.Open();
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, strsql);
        }
        catch(Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/PurchaseIssueEdit.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
        return ds;
    }
    private void fill_txtboxes()
    {
        DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        string str1 = @"select DueDate,destination,isnull(PayementTermId,0) PayementTermId,insurence,
                      Freight,FeightRate,TranportModeId,deliverytermid,formno,remarks from PurchaseIndentIssue where PindentIssueid=" +ddchallan.SelectedValue;
        ds = SqlHelper.ExecuteDataset(con, CommandType.Text, str1);
        txtduedate.Text = ds.Tables[0].Rows[0]["DueDate"].ToString();
        txtdestination.Text = ds.Tables[0].Rows[0]["destination"].ToString().ToUpper();
        UtilityModule.ConditionalComboFill(ref ddpayement, "Select PaymentId,PaymentName from Payment order by PaymentName", true, "--Select--");
        UtilityModule.ConditionalComboFill(ref dddelivery, "select TermId,TermName from Term order by TermName", true, "--Select--");
        UtilityModule.ConditionalComboFill(ref ddtransprt, "select TransModeid,TransModeName from Transmode order by TransModename", true, "Select Mode");
        ddpayement.SelectedValue = ds.Tables[0].Rows[0]["PayementTermId"].ToString();
        txtinsurence.Text = ds.Tables[0].Rows[0]["insurence"].ToString().ToUpper();
        txtfrieght.Text = ds.Tables[0].Rows[0]["Freight"].ToString().ToUpper();
        txtfrieghtrate.Text = ds.Tables[0].Rows[0]["FeightRate"].ToString().ToUpper();
        ddtransprt.SelectedValue = ds.Tables[0].Rows[0]["TranportModeId"].ToString();
        dddelivery.SelectedValue = ds.Tables[0].Rows[0]["deliverytermid"].ToString();
        txtform.Text = ds.Tables[0].Rows[0]["formno"].ToString().ToUpper();
        txtremarks.Text = ds.Tables[0].Rows[0]["remarks"].ToString().ToUpper();
    }
    private void Save_detail()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        SqlTransaction tran = con.BeginTransaction();
        try
        {
            int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "");
            SqlParameter[] arr = new SqlParameter[7];
            arr[0] = new SqlParameter("@PindentIssueId", SqlDbType.Int);
            arr[1] = new SqlParameter("@pindentissuedetailid", SqlDbType.Int);
            arr[2] = new SqlParameter("@finishedid", SqlDbType.Int);
            arr[3] = new SqlParameter("@unitid", SqlDbType.Int);
            arr[4] = new SqlParameter("@Quantity", SqlDbType.Float);
            arr[5] = new SqlParameter("@varuserid", SqlDbType.Int);
            arr[6] = new SqlParameter("@varCompanyId", SqlDbType.Int);

            arr[0].Direction = ParameterDirection.InputOutput;
            arr[0].Value = ddchallan.SelectedValue;
            arr[1].Direction = ParameterDirection.InputOutput;
            arr[1].Value = txtpindentissuedetailid.Text;
            arr[2].Value = Varfinishedid;
            arr[3].Value = ddlunit.SelectedValue;
            arr[4].Value = txtqty.Text;
            arr[5].Value = Session["varuserid"].ToString();
            arr[6].Value = Session["varCompanyId"].ToString();
            SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, "[PRO_p_indentissueedit]", arr);
            tran.Commit();
        }
        catch(Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/PurchaseIssueEdit.aspx");
            tran.Rollback();
        }
        finally
        {
            con.Close();
            con.Dispose();
        }
        pnl1.Enabled = false;
        btnsave.Text = "Save";
        btndelete.Visible = false;
        Fill_Grid();
        Session["ReportPath"] = "Reports/PurchaseIndentIss.rpt";
        Session["CommanFormula"] = ""; //"{where ppt.prmid}=" + prmid + "";
    }
    protected void btnsave_Click(object sender, EventArgs e)
    {
        Validated();
        if (Lblfinished.Visible == false)
        {
            Save_detail();
        }
        else
        {
            Lblfinished.Visible = true;
        }
        }
    protected void gddetail_SelectedIndexChanged(object sender, EventArgs e)
    {
           DataSet ds = null;
           SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            con.Open();
            ds = null;
            string sql = @"SELECT distinct  PurchaseIndentIssue.Companyid, PurchaseIndentIssue.Partyid, PurchaseIndentIssue.Challanno, PurchaseIndentIssue.Date, 
                         ITEM_CATEGORY_MASTER.CATEGORY_ID, ITEM_PARAMETER_MASTER.QUALITY_ID, ITEM_PARAMETER_MASTER.DESIGN_ID, 
                         ITEM_PARAMETER_MASTER.COLOR_ID, ITEM_PARAMETER_MASTER.SHAPE_ID, ITEM_PARAMETER_MASTER.SIZE_ID, 
                         ITEM_PARAMETER_MASTER.ITEM_ID, ITEM_PARAMETER_MASTER.SHADECOLOR_ID, PurchaseIndentIssueTran.quantity, 
                         PurchaseIndentIssueTran.Unitid, PurchaseIndentIssueTran.PindentIssueid, PurchaseIndentIssueTran.Pindentissuetranid, 
                         PurchaseIndentIssue.DueDate, PurchaseIndentIssue.Destination, PurchaseIndentIssue.PayementTermId, 
                         PurchaseIndentIssue.Insurence, PurchaseIndentIssue.Freight, PurchaseIndentIssue.FeightRate, 
                         PurchaseIndentIssue.TranportModeId, PurchaseIndentIssue.DeliveryTermid, PurchaseIndentIssue.Formno, 
                         PurchaseIndentIssue.Remarks FROM  PurchaseIndentIssueTran INNER JOIN
                         PurchaseIndentIssue ON PurchaseIndentIssueTran.PindentIssueid = PurchaseIndentIssue.PindentIssueid INNER JOIN
                         ITEM_CATEGORY_MASTER INNER JOIN  ITEM_MASTER ON ITEM_CATEGORY_MASTER.CATEGORY_ID = ITEM_MASTER.CATEGORY_ID INNER JOIN
                         ITEM_PARAMETER_MASTER ON ITEM_MASTER.ITEM_ID = ITEM_PARAMETER_MASTER.ITEM_ID ON 
                         PurchaseIndentIssueTran.Finishedid = ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID where PurchaseIndentIssueTran.Pindentissuetranid=" + gddetail.SelectedValue;
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, sql);
            txtpindentissueid.Text = ds.Tables[0].Rows[0]["pindentissueid"].ToString();
            txtpindentissuedetailid.Text = ds.Tables[0].Rows[0]["Pindentissuetranid"].ToString();
            ddCompName.SelectedValue = ds.Tables[0].Rows[0]["companyid"].ToString();
            ddempname.SelectedValue = ds.Tables[0].Rows[0]["partyid"].ToString();
            txtdate.Text = ds.Tables[0].Rows[0]["date"].ToString();
            UtilityModule.ConditionalComboFill(ref ddCatagory, "select distinct category_id,category_name from ITEM_CATEGORY_MASTER", true, "Select Category");
            ddCatagory.SelectedValue = ds.Tables[0].Rows[0]["CATEGORY_ID"].ToString();
            UtilityModule.ConditionalComboFill(ref dditemname, "select item_id,item_name  from ITEM_MASTER where category_id=" + ddCatagory.SelectedValue, true, "Select Item");
            dditemname.SelectedValue = ds.Tables[0].Rows[0]["item_id"].ToString();
            UtilityModule.ConditionalComboFill(ref dquality, "select distinct qualityid, qualityname from quality where item_id=" + dditemname.SelectedValue, true, "Select Item");
            UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue, true, "Select Unit");
            dquality.SelectedValue = ds.Tables[0].Rows[0]["QUALITY_ID"].ToString();
            ddlunit.SelectedValue = ds.Tables[0].Rows[0]["Unitid"].ToString();
            UtilityModule.ConditionalComboFill(ref dddesign, "select distinct designId, designName from Design", true, "Slect Design");
            UtilityModule.ConditionalComboFill(ref ddcolor, "select distinct colorid, colorname from color", true, "Select Color");
            UtilityModule.ConditionalComboFill(ref ddshape, "select distinct ShapeId, ShapeName from shape", true, "Select Shape");
            UtilityModule.ConditionalComboFill(ref ddsize, "select distinct SizeId, SizeFt from Size", true, "Select Size");
            UtilityModule.ConditionalComboFill(ref ddlshade, "select distinct ShadecolorId, ShadeColorName from ShadeColor", true, "Select ShadeColor");
            dddesign.SelectedValue = ds.Tables[0].Rows[0]["DESIGN_ID"].ToString();
            ddcolor.SelectedValue = ds.Tables[0].Rows[0]["COLOR_ID"].ToString();
            ddshape.SelectedValue = ds.Tables[0].Rows[0]["SHAPE_ID"].ToString();
            ddsize.SelectedValue = ds.Tables[0].Rows[0]["SIZE_ID"].ToString();
            ddlshade.SelectedValue = ds.Tables[0].Rows[0]["SHADECOLOR_ID"].ToString();
            txtduedate.Text = ds.Tables[0].Rows[0]["duedate"].ToString();
            txtdestination.Text = ds.Tables[0].Rows[0]["Destination"].ToString();
            UtilityModule.ConditionalComboFill(ref ddCompName, "select companyid, companyname from companyinfo order by companyname", true, "Select Comp Name");
            UtilityModule.ConditionalComboFill(ref ddpayement, "Select PaymentId,PaymentName from Payment order by PaymentName", true, "--Select--");
            UtilityModule.ConditionalComboFill(ref dddelivery, "select TermId,TermName from Term order by TermName", true, "--Select--");
            UtilityModule.ConditionalComboFill(ref ddtransprt, "select TransModeid,TransModeName from Transmode order by TransModename", true, "Select Mode");
            ddpayement.SelectedValue = ds.Tables[0].Rows[0]["PayementTermId"].ToString();
            txtinsurence.Text = ds.Tables[0].Rows[0]["Insurence"].ToString();
            txtfrieght.Text = ds.Tables[0].Rows[0]["Freight"].ToString();
            txtfrieghtrate.Text = ds.Tables[0].Rows[0]["FeightRate"].ToString();
            ddtransprt.SelectedValue = ds.Tables[0].Rows[0]["TranportModeId"].ToString();
            dddelivery.SelectedValue = ds.Tables[0].Rows[0]["DeliveryTermid"].ToString();
            txtform.Text = ds.Tables[0].Rows[0]["Formno"].ToString();
            txtremarks.Text = ds.Tables[0].Rows[0]["Remarks"].ToString();
            ddchallan.SelectedValue= ds.Tables[0].Rows[0]["Challanno"].ToString();
            txtqty.Text = ds.Tables[0].Rows[0]["quantity"].ToString();
            int q = (dquality.SelectedIndex > 0 ? Convert.ToInt32(dquality.SelectedValue) : 0);
            if (q > 0)
            {
                ql.Visible = true;
            }
            else
            {
                ql.Visible = false;
            }
            int d = (dddesign.SelectedIndex > 0 ? Convert.ToInt32(dddesign.SelectedValue) : 0);
            if (d > 0)
            {
                dsn.Visible = true;
            }
            else
            {
                dsn.Visible = false;
            }
            int c = (ddcolor.SelectedIndex > 0 ? Convert.ToInt32(ddcolor.SelectedValue) : 0);
            if (c > 0)
            {
                clr.Visible = true;
            }
            else
            {
                clr.Visible = false;
            }
            int s = (ddshape.SelectedIndex > 0 ? Convert.ToInt32(ddshape.SelectedValue) : 0);
            if (s > 0)
            {
                shp.Visible = true;
            }
            else
            {
                shp.Visible = false;
            }
            int si = (ddsize.SelectedIndex > 0 ? Convert.ToInt32(ddsize.SelectedValue) : 0);
            if (si > 0)
            {
                sz.Visible = true;
            }
            else
            {
                sz.Visible = false;
            }
            int sd = (ddlshade.SelectedIndex > 0 ? Convert.ToInt32(ddlshade.SelectedValue) : 0);
            if (sd > 0)
            {
                shd.Visible = true;
            }
            else
            {
                shd.Visible = false;
            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/PurchaseIssueEdit.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
            }
        }
        btnsave.Text = "Update";
        btndelete.Visible = true;
        pnl1.Enabled = false;
    }
    protected void gddetail_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Attributes["onmouseover"] = "javascript:setMouseOverColor(this);";
            e.Row.Attributes["onmouseout"] = "javascript:setMouseOutColor(this);";
            e.Row.Attributes["onclick"] = ClientScript.GetPostBackClientHyperlink(this.gddetail, "Select$" + e.Row.RowIndex);
        }
    }
    protected void gddetail_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        gddetail.PageIndex = e.NewPageIndex;
        Fill_Grid();
    }
    protected void btndelete_Click(object sender, EventArgs e)
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        SqlHelper.ExecuteScalar(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "delete  from purchaseindentissuetran where pindentissuetranid=" +Convert.ToInt32(txtpindentissuedetailid.Text));
        DataSet dt = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "select isnull(max(id),0)+1  from UpdateStatus");
        SqlHelper.ExecuteScalar(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "insert into UpdateStatus(id,companyid,userid,tablename,tableid,date,status)values(" + dt.Tables[0].Rows[0][0].ToString() + "," + Session["varCompanyId"].ToString() + "," + Session["varuserid"].ToString() + ",'purchaseindentissuetran'," + txtpindentissuedetailid.Text + ",getdate(),'Delete')");
        Fill_Grid();
        Label2.Visible = true;
    }
    private void Validated()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "");
            string strsql;
            if (btnsave.Text == "Update")
            {
                strsql = @"select *  from PurchaseIndentIssue pis  inner join PurchaseIndentIssuetran psit on pis.pindentissueid=psit.pindentissueid
                         Where psit.finishedid=" + Varfinishedid + "and pis.pindentissueid=" +ddchallan.SelectedValue + "and pindentissuetranid !=" + Convert.ToInt32(txtpindentissuedetailid.Text);
            }
            else
            {
                strsql = @"select *  from PurchaseIndentIssue pis  inner join PurchaseIndentIssuetran psit on pis.pindentissueid=psit.pindentissueid
                         Where psit.finishedid=" + Varfinishedid + "and pis.pindentissueid=" + ddchallan.SelectedValue;
            }
            con.Open();
            DataSet ds = SqlHelper.ExecuteDataset(con, CommandType.Text, strsql);
            if (ds.Tables[0].Rows.Count > 0)
            {
                Lblfinished.Visible = true;
            }
            else
            {
                Lblfinished.Visible = false;
            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/PurchaseIssueEdit.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
    }
    protected void btnnew_Click(object sender, EventArgs e)
    {
        refresh_form();
    }
    private void refresh_form()
    {
        txtpindentissueid.Text = "0";
        txtpindentissuedetailid.Text = "0";
        ddCompName.SelectedValue = null;
        ddempname.SelectedValue = null;
        ddchallan.SelectedValue = null;
        ddCatagory.SelectedValue = null;
        dditemname.SelectedValue = null;
        dquality.SelectedValue = null;
        dddesign.SelectedValue = null;
        ddcolor.SelectedValue = null;
        ddshape.SelectedValue = null;
        ddsize.SelectedValue = null;
        ddlshade.SelectedValue = null;
        txtqty.Text = "";
        ddlunit.SelectedValue = null;
        txtduedate.Text = "";
        txtdestination.Text = "";
        ddpayement.SelectedValue = null;
        txtfrieght.Text = "";
        txtfrieghtrate.Text = "";
        txtinsurence.Text = "";
        ddtransprt.SelectedValue = null;
        dddelivery.SelectedValue = null;
        txtform.Text = "";
        txtremarks.Text = "";
        pnl1.Enabled = true;
        Lblfinished.Visible = false;
        Session.Remove("orderid");
        Session.Remove("indentid");
    }
    protected void gddetail_RowCreated(object sender, GridViewRowEventArgs e)
    {
        //Add CSS class on header row.
        if (e.Row.RowType == DataControlRowType.Header)
            e.Row.CssClass = "header";
        //Add CSS class on normal row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Normal)
            e.Row.CssClass = "normal";
        //Add CSS class on alternate row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Alternate)
            e.Row.CssClass = "alternate";
    }
}


