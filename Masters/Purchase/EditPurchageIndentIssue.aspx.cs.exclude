using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;

public partial class PurchageIndentIssue : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            Session["PIndentIssueId"] = 0;
            Session["PIndentIssueTranId"] = 0;
            txtpindentissueid.Text = "0";
            txtpindentissuedetailid.Text = "0";
            UtilityModule.ConditionalComboFill(ref ddCompName, "select CI.CompanyId,CompanyName From CompanyInfo CI,Company_Authentication CA Where CI.CompanyId=CA.CompanyId And CA.UserId=" + Session["varuserId"] + " And CA.MasterCompanyid=" + Session["varCompanyId"] + " order by CompanyName", true, "Select Comp Name");
            UtilityModule.ConditionalComboFill(ref ddpayement, "Select PaymentId,PaymentName from Payment order by PaymentName", true, "--Select--");
            UtilityModule.ConditionalComboFill(ref dddelivery, "select TermId,TermName from Term order by TermName", true, "--Select--");
            UtilityModule.ConditionalComboFill(ref ddtransprt, "select TransModeid,TransModeName from Transmode order by TransModename", true, "Select Mode");
            txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
            txtduedate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
            OnCheckedChange();
            lablechange();
            int VarCompanyNo = Convert.ToInt32(SqlHelper.ExecuteScalar(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "Select VarCompanyNo From MasterSetting"));
            switch (VarCompanyNo)
            {
                case 1:
                    tdProCode.Visible = false;
                    break;
                case 2:
                    tdProCode.Visible = true;
                    break;
            }
        }
    }
    public void lablechange()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            con.Open();
            String[] ParameterList = new String[8];
            ParameterList = UtilityModule.ParameteLabel(Convert.ToInt32(Session["varCompanyId"]));
            lblqualityname.Text = ParameterList[0];
            lbldesignname.Text = ParameterList[1];
            lblcolorname.Text = ParameterList[2];
            lblshapename.Text = ParameterList[3];
            lblsizename.Text = ParameterList[4];
            lblcategoryname.Text = ParameterList[5];
            lblitemname.Text = ParameterList[6];
            lblshadecolor.Text = ParameterList[7];
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
    }
    protected void ddcustomercode_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddorderno, "select distinct orderid,customerorderno from OrderMaster where customerid=" + ddcustomercode.SelectedValue, true, "Select OrderNo.");
    }
    protected void ddorderno_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddCatagory, @"select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm inner join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID
        Inner Join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id  Inner Join orderdetail od on od.ITEM_FINISHED_ID=ipm.ITEM_FINISHED_ID Where od.orderid=" + ddorderno.SelectedValue, true, "Select Category");
        UtilityModule.ConditionalComboFill(ref DDChallanNo, "select PIndentIssueId,Challanno from PurchaseIndentIssue where IndentId=0 and OrderId=" + ddorderno.SelectedValue, true, "--Select--");
    }
    protected void chkcustomervise_CheckedChanged(object sender, EventArgs e)
    {
        if (chkcustomervise.Checked)
        {
            chkindentvise.Checked = false;
        }
            OnCheckedChange();
    }
    protected void chkindentvise_CheckedChanged(object sender, EventArgs e)
    {
        if (chkindentvise.Checked)
        {
            chkcustomervise.Checked = false;
        }
        OnCheckedChange();
    }
    private void OnCheckedChange()
    {
        if (chkcustomervise.Checked)
        {
            tdindentno.Visible = false;
            tdcustomer.Visible = true;
            tdorderno.Visible = true;
            chkindentvise.Checked = false;
            UtilityModule.ConditionalComboFill(ref ddcustomercode, @"select distinct ci.customerid,ci.customercode from customerinfo ci 
            Inner Join OrderMaster om on om.customerid=ci.customerid Inner Join ORDER_CONSUMPTION_DETAIL ocd on ocd.orderid=om.orderid", true, "Select CustomerCode");
            UtilityModule.ConditionalComboFill(ref ddempname, "select distinct empid,empname from empinfo", true, "Select Party");
        }
        else if (chkindentvise.Checked)
        {
            tdindentno.Visible = true;
            tdcustomer.Visible = false;
            tdorderno.Visible = false;
            chkcustomervise.Checked = false;
            AQty.Visible = true;
            PQty.Visible = true;
            UtilityModule.ConditionalComboFill(ref ddempname, "select distinct empid ,empname from empinfo ei inner join  PurchaseIndentMaster pim on ei.empid=pim.partyid", true, "Select Party");
        }
        else
        {
            tdindentno.Visible = false;
            tdcustomer.Visible = false;
            tdorderno.Visible = false;
            chkindentvise.Checked = false;
            chkcustomervise.Checked = false;
            AQty.Visible = false;
            PQty.Visible = false;
            UtilityModule.ConditionalComboFill(ref ddempname, "select distinct empid,empname from empinfo", true, "Select Party");
            UtilityModule.ConditionalComboFill(ref ddCatagory, "select distinct category_id,category_name from ITEM_CATEGORY_MASTER", true, "Select Category");
        }
    }
    protected void ddempname_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddindentno, "select distinct PIndentId,pindentno from PurchaseIndentMaster where partyid=" + ddempname.SelectedValue, true, "Select IndentNo");
    }
    protected void ddindentno_SelectedIndexChanged(object sender, EventArgs e)
    {
        UtilityModule.ConditionalComboFill(ref ddCatagory, @" select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm 
        Inner Join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID inner join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id
        Inner Join PurchaseIndentDetail pim on pim.finishedid=ipm.ITEM_FINISHED_ID where pim.pindentid=" + ddindentno.SelectedValue, true, "Select Category");
        UtilityModule.ConditionalComboFill(ref DDChallanNo, "select PIndentIssueId,Challanno from PurchaseIndentIssue where OrderId=0 and IndentId=" + ddindentno.SelectedValue, true, "---Select---");
    }
    protected void ddCatagory_SelectedIndexChanged(object sender, EventArgs e)
    {
        ddlcategorycange();
        Fill_Item();
    }
    private void Fill_Item()
    {
        if (chkindentvise.Checked)
        {
            UtilityModule.ConditionalComboFill(ref dditemname, @"select distinct im.item_id,im.item_name from ITEM_MASTER im  inner join ITEM_PARAMETER_MASTER ipm on im.item_id=ipm.item_id
            Inner Join PurchaseIndentDetail pid on ipm.ITEM_FINISHED_ID=pid.FinishedId Where pid.PIndentId=" + ddindentno.SelectedValue + " and im.category_id=" + ddCatagory.SelectedValue, true, "Select Item");
        }
        else if (chkcustomervise.Checked)
        {
            UtilityModule.ConditionalComboFill(ref dditemname, @"select distinct im.item_id,im.item_name from ITEM_MASTER im  inner join ITEM_PARAMETER_MASTER ipm  on im.item_id=ipm.item_id
            Inner Join ORDER_CONSUMPTION_DETAIL ocm on ipm.ITEM_FINISHED_ID=ocm.FinishedId Where im.CATEGORY_ID=" + ddCatagory.SelectedValue + " and ocm.orderid=" + ddorderno.SelectedValue, true, "Select Item");
        }
        else
        {
            UtilityModule.ConditionalComboFill(ref dditemname, "select distinct item_id,item_name  from ITEM_MASTER where category_id=" + ddCatagory.SelectedValue, true, "Select Item");
        }
    }
    protected void dditemname_SelectedIndexChanged(object sender, EventArgs e)
    {
        Fill_Quality();
        UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT distinct u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue, true, "Select Unit");
    }
    private void Fill_Quality()
    {
        if (chkindentvise.Checked)
        {
            UtilityModule.ConditionalComboFill(ref dquality, @"select distinct qualityid, qualityname from quality q inner join ITEM_PARAMETER_MASTER ipm on q.qualityid=ipm.quality_id
            Inner Join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID Where pid.PIndentId=" + ddindentno.SelectedValue + " and q.item_id=" + dditemname.SelectedValue, true, "Select Item");
        }
        else if (chkcustomervise.Checked)
        {
            UtilityModule.ConditionalComboFill(ref dquality, @" select distinct qualityid, qualityname from quality q inner join ITEM_PARAMETER_MASTER ipm on q.qualityid=ipm.quality_id
            Inner Join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID where ocm.orderid=" + ddorderno.SelectedValue + " and q.item_id=" + dditemname.SelectedValue, true, "Select Item");
        }
        else
        {
            UtilityModule.ConditionalComboFill(ref dquality, "select distinct qualityid, qualityname from quality where item_id=" + dditemname.SelectedValue, true, "Select Item");
        }
    }
    private void ddlcategorycange()
    {
        try
        {
            ql.Visible = false;
            clr.Visible = false;
            dsn.Visible = false;
            shp.Visible = false;
            sz.Visible = false;
            string strsql = "SELECT [CATEGORY_PARAMETERS_ID],[CATEGORY_ID],IPM.[PARAMETER_ID],PARAMETER_NAME " +
                          " FROM [ITEM_CATEGORY_PARAMETERS] IPM inner join PARAMETER_MASTER PM on " +
                          " IPM.[PARAMETER_ID]=PM.[PARAMETER_ID] where [CATEGORY_ID]=" + ddCatagory.SelectedValue;
            DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    switch (dr["PARAMETER_ID"].ToString())
                    {
                        case "1":
                            ql.Visible = true;
                            break;
                        case "2":
                            clr.Visible = true;
                            if (chkindentvise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddcolor, @"select distinct colorid, colorname from color c
                                Inner Join ITEM_PARAMETER_MASTER ipm on c.colorId=ipm.color_Id inner join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId=" + ddindentno.SelectedValue, true, "--Select Color--");
                            }
                            else if (chkcustomervise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddcolor, @" select distinct colorid, colorname from color c inner join ITEM_PARAMETER_MASTER ipm on c.colorid=ipm.color_Id
                                Inner Join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid=" + ddorderno.SelectedValue, true, "--Select Color--");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref ddcolor, "select distinct colorid, colorname from color", true, "Select Color");
                            }
                            break;
                        case "3":
                            dsn.Visible = true;
                            if (chkindentvise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref dddesign, @"select distinct designId, designName from Design d
                                Inner Join ITEM_PARAMETER_MASTER ipm on d.designId=ipm.design_Id inner join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId=" + ddindentno.SelectedValue, true, "--Select Design--");
                            }
                            else if (chkcustomervise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref dddesign, @"select distinct designId, designName from Design d  inner join ITEM_PARAMETER_MASTER ipm on d.designId=ipm.design_Id
                                Inner Join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid=" + ddorderno.SelectedValue, true, "--Select Design--");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref dddesign, "select distinct designId, designName from Design", true, "Slect Design");
                            }
                            break;
                        case "4":
                            shp.Visible = true;
                            if (chkindentvise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddshape, @"select distinct ShapeId, ShapeName from shape s inner join ITEM_PARAMETER_MASTER ipm on s.ShapeId=ipm.shape_Id
                                Inner Join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId= " + ddindentno.SelectedValue, true, "--Select Shape--");
                            }
                            else if (chkcustomervise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddshape, @"select distinct ShapeId, ShapeName from shape s  inner join ITEM_PARAMETER_MASTER ipm on s.shapeid=ipm.shape_Id
                                Inner join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid= " + ddorderno.SelectedValue, true, "--Select Shape--");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref ddshape, "select distinct ShapeId, ShapeName from shape", true, "Select Shape");
                            }
                            break;
                        case "5":
                            sz.Visible = true;
                            CheckBox1.Checked = false;
                            if (chkindentvise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddsize, @"select distinct SizeId, SizeFt from Size s inner join ITEM_PARAMETER_MASTER ipm on s.SizeId=ipm.size_Id
                                Inner Join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                Where pid.PIndentId=" + ddindentno.SelectedValue, true, "Size in Ft");
                            }
                            else if (chkcustomervise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddsize, @"select distinct SizeId, SizeFt from Size s inner join ITEM_PARAMETER_MASTER ipm on s.SizeId=ipm.size_Id
                                Inner Join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid=" + ddorderno.SelectedValue, true, "Size in Ft");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref ddsize, "select distinct SizeId, SizeFt from Size", true, "Select Size");
                            }
                            break;
                        case "6":
                            shd.Visible = true;
                            if (chkindentvise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddlshade, @"select distinct ShadecolorId, ShadeColorName from ShadeColor s inner join ITEM_PARAMETER_MASTER ipm on s.ShadecolorId=ipm.Shadecolor_Id
                                Inner Join PurchaseIndentDetail pid on pid.finishedid=ipm.ITEM_FINISHED_ID
                                where pid.PIndentId=" + ddindentno.SelectedValue, true, "Select ShadeColor");
                            }
                            else if (chkcustomervise.Checked)
                            {
                                UtilityModule.ConditionalComboFill(ref ddlshade, @"select distinct ShadecolorId, ShadeColorName from ShadeColor s   inner join ITEM_PARAMETER_MASTER ipm on s.ShadecolorId=ipm.Shadecolor_Id
                                Inner Join ORDER_CONSUMPTION_DETAIL ocm on ocm.finishedid=ipm.ITEM_FINISHED_ID
                                Where ocm.orderid=" + ddorderno.SelectedValue, true, "Select ShadeColor");
                            }
                            else
                            {
                                UtilityModule.ConditionalComboFill(ref ddlshade, "select distinct ShadecolorId, ShadeColorName from ShadeColor", true, "Select ShadeColor");
                            }
                            break;
                    }
                }
            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
        }
    }
    protected void btnsave_Click(object sender, EventArgs e)
    {
       Save_detail();
       // Validated();
            Session["ReportPath"] = "Reports/PurchaseIndentIss.rpt";
            Session["CommanFormula"] = "{V_PIndentIssueReport.PIndentIssueId}=" + Session["PIndentIssueId"] + "";
    }
    private void Save_Refresh()
    {
        dquality.SelectedValue = null;
        dddesign.SelectedValue = null;
        ddcolor.SelectedValue = null;
        ddshape.SelectedValue = null;
        ddsize.SelectedValue = null;
        ddlshade.SelectedValue = null;
        txtqty.Text = "";
        TxtAmount.Text = "";
        TxtApprovedQty.Text = "";
        TxtPreIssueQty.Text = "";
        TxtRate.Text = "";
        ddlunit.SelectedValue = null;
        btnsave.Text = "Save";
    }
    private void Save_detail()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        SqlTransaction tran = con.BeginTransaction();
        try
        {
            SqlParameter[] arr = new SqlParameter[32];
            arr[0] = new SqlParameter("@PindentIssueid", SqlDbType.Int);
            arr[1] = new SqlParameter("@Companyid", SqlDbType.Int);
            arr[2] = new SqlParameter("@Partyid", SqlDbType.Int);
            arr[3] = new SqlParameter("@Indentid", SqlDbType.Int);
            arr[4] = new SqlParameter("@Orderid", SqlDbType.Int);
            arr[5] = new SqlParameter("@Challanno", SqlDbType.NVarChar,50);
            arr[6] = new SqlParameter("@Date", SqlDbType.DateTime);
            arr[7] = new SqlParameter("@Userid", SqlDbType.Int);
            arr[8] = new SqlParameter("@MasterCompanyid", SqlDbType.Int);
            arr[9] = new SqlParameter("@Pindentissuetranid", SqlDbType.Int);
            arr[10] = new SqlParameter("@Finishedid", SqlDbType.Int);
            arr[11] = new SqlParameter("@Unitid", SqlDbType.Int);
            arr[12] = new SqlParameter("@Quantity", SqlDbType.Float);
            arr[13] = new SqlParameter("@DueDate", SqlDbType.DateTime);
            arr[14] = new SqlParameter("@Destination", SqlDbType.NVarChar, 50);
            arr[15] = new SqlParameter("@PayementTermId", SqlDbType.Int);
            arr[16] = new SqlParameter("@Insurence", SqlDbType.NVarChar, 50);
            arr[17] = new SqlParameter("@Freight", SqlDbType.NVarChar, 50);
            arr[18] = new SqlParameter("@FeightRate", SqlDbType.Float, 50);
            arr[19] = new SqlParameter("@TranportModeId", SqlDbType.Int);
            arr[20] = new SqlParameter("@DeliveryTermid", SqlDbType.Int);
            arr[21] = new SqlParameter("@Formno", SqlDbType.NVarChar, 50);
            arr[22] = new SqlParameter("@LotNo", SqlDbType.NVarChar, 50);
            arr[23] = new SqlParameter("@Remarks", SqlDbType.NVarChar, 50);
            arr[24] = new SqlParameter("@Amount", SqlDbType.Float);
            arr[25] = new SqlParameter("@Rate", SqlDbType.Float);
            arr[26] = new SqlParameter("@ExciseDuty", SqlDbType.Float);
            arr[27] = new SqlParameter("@EduCess", SqlDbType.Float);
            arr[28] = new SqlParameter("@CST", SqlDbType.Float);
            arr[29] = new SqlParameter("@NetAmount", SqlDbType.Float);
            arr[30] = new SqlParameter("@AgentName", SqlDbType.NVarChar,200);
            arr[31] = new SqlParameter("@PackingCharge", SqlDbType.Int);

            arr[0].Direction = ParameterDirection.InputOutput;
            arr[0].Value = DDChallanNo.SelectedValue;
            arr[1].Value = ddCompName.SelectedValue;
            arr[2].Value = ddempname.SelectedValue;
            if (ddindentno.Visible == true)
            {
                arr[3].Value = ddindentno.SelectedValue;
            }
            else
            {
                arr[3].Value = 0;
            }
            if (ddorderno.Visible == true)
            {
                arr[4].Value = ddorderno.SelectedValue;
            }
            else
            {
                arr[4].Value = 0;
            }
            arr[5].Direction = ParameterDirection.InputOutput;
            arr[5].Value = txtchalanno.Text;
            arr[6].Value = txtdate.Text;
            arr[7].Value = Session["varuserid"].ToString();
            arr[8].Value = Session["varCompanyId"].ToString();
            //arr[9].Direction = ParameterDirection.InputOutput;
            if (btnsave.Text == "Save")
            {
                Session["PIndentIssueTranId"] = 0;
            }
            arr[9].Value = Session["PIndentIssueTranId"];
            arr[10].Value = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, tran, ddlshade, "");
            arr[11].Value = ddlunit.SelectedValue;
            arr[12].Value = txtqty.Text;
            arr[13].Value = txtduedate.Text;
            arr[14].Value = txtdestination.Text.ToUpper();
            arr[15].Value = ddpayement.SelectedIndex>0?ddpayement.SelectedValue:"0";
            arr[16].Value = txtinsurence.Text;
            arr[17].Value = txtfrieght.Text;
            arr[18].Value = txtfrieghtrate.Text != "" ? txtfrieghtrate.Text : "0.00";
            arr[19].Value = ddtransprt.SelectedIndex>0?ddtransprt.SelectedValue:"0";
            arr[20].Value = dddelivery.SelectedIndex>0?dddelivery.SelectedValue:"0";
            arr[21].Value = txtform.Text.ToUpper();
            arr[22].Value = TxtLotNo.Text != "" ? TxtLotNo.Text.ToUpper() : "Without Lot No";
            arr[23].Value = txtremarks.Text;
            arr[24].Value = TxtAmount.Text!=""?TxtAmount.Text:"0";
            arr[25].Value = TxtRate.Text!=""?TxtRate.Text:"0";
            arr[26].Value = TxtExceisDuty.Text!=""?TxtExceisDuty.Text:"0";
            arr[27].Value = TxtEduCess.Text!=""?TxtEduCess.Text:"0";
            arr[28].Value = TxtCst.Text!=""?TxtCst.Text:"0";
            arr[29].Value = TxtNetAmount.Text!=""?TxtNetAmount.Text:"0";
            arr[30].Value = TxtAgentName.Text.ToUpper();
            arr[31].Value = DDPackingCharges.SelectedValue;          
            SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, "[Pro_PUrchaseIndentIssue]", arr);
            Session["PIndentIssueId"] = arr[0].Value;
            txtchalanno.Text = arr[5].Value.ToString();
            btndelete.Visible = false;
            tran.Commit();
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
            tran.Rollback();
        }
        finally
        {
            con.Close();
            con.Dispose();
        }
        pnl1.Enabled = false;
        Fill_Grid();
        Save_Refresh();
    }
    private void Validated()
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "");
            string strsql;
            if (btnsave.Text == "Update")
            {
                strsql = @"select *  from PurchaseIndentIssue pis  inner join PurchaseIndentIssuetran psit on pis.pindentissueid=psit.pindentissueid
                Where psit.finishedid=" + Varfinishedid + "and pis.challanno=" + txtchalanno.Text+"and pindentissuetranid !=" + Convert.ToInt32(txtpindentissuedetailid.Text);
            }
            else
            {
                strsql = @"select *  from PurchaseIndentIssue pis  inner join PurchaseIndentIssuetran psit on pis.pindentissueid=psit.pindentissueid
                Where psit.finishedid=" + Varfinishedid + "and pis.challanno=" + txtchalanno.Text;
            }
            con.Open();
            DataSet ds = SqlHelper.ExecuteDataset(con, CommandType.Text, strsql);
            if (ds.Tables[0].Rows.Count > 0)
            {
                Lblfinished.Visible = true;
            }
            else
            {
                Lblfinished.Visible = false;
            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
    }
    private void Fill_Grid()
    {
        gddetail.DataSource = fill_Data_grid();
        gddetail.DataBind();
    }
    private DataSet fill_Data_grid()
    {
        DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            string strsql = @"SELECT distinct Lotno,Rate,Amount,pist.Pindentissuetranid, icm.CATEGORY_NAME, im.ITEM_NAME, pist.quantity,IPM1.QDCS + Space(2)+isnull(SizeMtr,'') DESCRIPTION
                            FROM ITEM_MASTER im INNER JOIN ITEM_CATEGORY_MASTER icm  ON im.CATEGORY_ID = icm.CATEGORY_ID 
                            INNER JOIN ITEM_PARAMETER_MASTER IPM ON im.ITEM_ID = IPM.ITEM_ID INNER JOIN PurchaseIndentIssueTran pist ON IPM.ITEM_FINISHED_ID = pist.Finishedid
                            Inner join  ViewFindFinishedidItemidQDCSS IPM1 on IPM.Item_Finished_Id=IPM1.Finishedid where pist.pindentissueid="+DDChallanNo.SelectedValue;
            con.Open();
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, strsql);
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
                con.Dispose();
            }
        }
        return ds;
    }
    protected void gddetail_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Attributes["onmouseover"] = "javascript:setMouseOverColor(this);";
            e.Row.Attributes["onmouseout"] = "javascript:setMouseOutColor(this);";
            e.Row.Attributes["onclick"] = ClientScript.GetPostBackClientHyperlink(this.gddetail, "Select$" + e.Row.RowIndex);
        }
    }
    protected void gddetail_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        gddetail.PageIndex = e.NewPageIndex;
        Fill_Grid();
    }
    protected void gddetail_SelectedIndexChanged(object sender, EventArgs e)
    {
         DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            con.Open();
            ds = null;
            string sql = @"select Distinct PIndentIssueTranId,Quantity,UnitId,Lotno,Rate,Amount,Destination,replace(convert(varchar(11),Date,106), ' ','-') as Date,replace(convert(varchar(11),DueDate,106), ' ','-') as DueDate,PayementTermId,Insurence,Freight,FeightRate,TranportModeId,DeliveryTermId,FormNo,Remarks,ExciseDuty,EduCess,CST,NetAmount,isnull(AgentName,'') AgentName,isnull(PackingCharge,'') PackingCharge,Category_Id,Item_Id,QualityId,DesignId,ShadeColorId,ColorId,ShapeId,SizeId
                         From PurchaseIndentIssue PII inner join  PurchaseIndentIssueTran PIT on PII.PIndentIssueId=PIT.PIndentIssueId
                         Inner Join V_FinishedItemDetail IPM on IPM.Item_Finished_Id=PIT.FinishedId where PIndentIssueTranId=" + gddetail.SelectedValue;
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, sql);
            txtpindentissuedetailid.Text = ds.Tables[0].Rows[0]["Pindentissuetranid"].ToString();
            txtdate.Text = ds.Tables[0].Rows[0]["Date"].ToString();
            ddCatagory.SelectedValue = ds.Tables[0].Rows[0]["CATEGORY_ID"].ToString();
            ddlcategorycange();
            Fill_Item();
            dditemname.SelectedValue = ds.Tables[0].Rows[0]["item_id"].ToString();
            Fill_Quality();
            UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT distinct u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue, true, "Select Unit");
            dquality.SelectedValue = ds.Tables[0].Rows[0]["QualityId"].ToString();
            ddlunit.SelectedValue = ds.Tables[0].Rows[0]["Unitid"].ToString();
            dddesign.SelectedValue = ds.Tables[0].Rows[0]["DesignId"].ToString();
            ddcolor.SelectedValue = ds.Tables[0].Rows[0]["ColorId"].ToString();
            ddshape.SelectedValue = ds.Tables[0].Rows[0]["ShapeId"].ToString();
            UtilityModule.ConditionalComboFill(ref ddsize, "SELECT SIZEID,SIZEFT fROM SIZE WhERE SHAPEID=" + ddshape.SelectedValue + "", true, "--SELECT SIZE--");
            ddsize.SelectedValue = ds.Tables[0].Rows[0]["SizeId"].ToString();
            ddlshade.SelectedValue = ds.Tables[0].Rows[0]["ShadeColorId"].ToString();
            Fill_Quantity();
            txtduedate.Text = ds.Tables[0].Rows[0]["DueDate"].ToString();
            txtdestination.Text = ds.Tables[0].Rows[0]["Destination"].ToString();
            ddpayement.SelectedValue = ds.Tables[0].Rows[0]["PayementTermId"].ToString();
            txtinsurence.Text = ds.Tables[0].Rows[0]["Insurence"].ToString();
            txtfrieght.Text = ds.Tables[0].Rows[0]["Freight"].ToString();
            txtfrieghtrate.Text = ds.Tables[0].Rows[0]["FeightRate"].ToString();
            ddtransprt.SelectedValue = ds.Tables[0].Rows[0]["TranportModeId"].ToString();
            dddelivery.SelectedValue = ds.Tables[0].Rows[0]["DeliveryTermid"].ToString();
            txtform.Text = ds.Tables[0].Rows[0]["Formno"].ToString();
            txtremarks.Text = ds.Tables[0].Rows[0]["Remarks"].ToString();
            txtqty.Text = ds.Tables[0].Rows[0]["quantity"].ToString();
            TxtPreIssueQty.Text = (Convert.ToDouble(TxtPreIssueQty.Text) - Convert.ToDouble(txtqty.Text)).ToString();
            TxtCst.Text = ds.Tables[0].Rows[0]["CST"].ToString();
            TxtExceisDuty.Text = ds.Tables[0].Rows[0]["ExciseDuty"].ToString();
            TxtEduCess.Text = ds.Tables[0].Rows[0]["EduCess"].ToString();
            TxtRate.Text = ds.Tables[0].Rows[0]["Rate"].ToString();
            TxtAmount.Text = ds.Tables[0].Rows[0]["Amount"].ToString();
            fill_text();
            TxtLotNo.Text = ds.Tables[0].Rows[0]["LotNo"].ToString();
            TxtAgentName.Text = ds.Tables[0].Rows[0]["AgentName"].ToString();
            Session["PIndentIssueTranId"] = gddetail.SelectedDataKey.Value;
        } 
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
            }
        }
        btnsave.Text = "Update";
        btndelete.Visible = true;
        pnl1.Enabled = false;
    }
    protected void btndelete_Click(object sender, EventArgs e)
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        SqlTransaction Tran = con.BeginTransaction();
        try
        {
            SqlParameter[] arr = new SqlParameter[2];
            arr[0] = new SqlParameter("@PIndentIssueTranId", SqlDbType.Int);
            arr[0].Value = Session["PIndentIssueTranId"];
            SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "Pro_DeletePUrchaseIndentIssue",arr);
            Tran.Commit();
            DataSet dt = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "select isnull(max(id),0)+1  from UpdateStatus");
            SqlHelper.ExecuteScalar(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "insert into UpdateStatus(id,companyid,userid,tablename,tableid,date,status)values(" + dt.Tables[0].Rows[0][0].ToString() + "," + Session["varCompanyId"].ToString() + "," + Session["varuserid"].ToString() + ",'PurchaseIndentIssueTran'," + arr[0].Value + ",getdate(),'Delete')");
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
            Tran.Rollback();
        }
        finally
        {
            con.Close();
            con.Dispose();
        }
        Fill_Grid();
        refresh_form();
    }
    private void refresh_form()
{
    txtpindentissueid.Text = "0";
    txtpindentissuedetailid.Text = "0";
    ddCompName.SelectedValue = null;
    ddempname.SelectedValue = null;
    ddindentno.SelectedValue = null;
    ddcustomercode.SelectedValue = null;
    ddorderno.SelectedValue = null;
    txtchalanno.Text= "";
    ddCatagory.SelectedValue = null;
    dditemname.SelectedValue = null;
    dquality.SelectedValue = null;
    dddesign.SelectedValue = null;
    ddcolor.SelectedValue = null;
    ddshape.SelectedValue = null;
    ddsize.SelectedValue = null;
    ddlshade.SelectedValue = null;
    txtqty.Text = "";
    ddlunit.SelectedValue = null;
    txtduedate.Text = "";
    txtdestination.Text = "";
    ddpayement.SelectedValue = null;
    txtfrieght.Text = "";
    txtfrieghtrate.Text = "";
    txtinsurence.Text = "";
    ddtransprt.SelectedValue = null;
    dddelivery.SelectedValue = null;
    txtform.Text = "";
    txtremarks.Text = "";
    pnl1.Enabled = true;
    Lblfinished.Visible = false;
    Session.Remove("orderid");
    Session.Remove("indentid");
}
    protected void btnnew_Click(object sender, EventArgs e)
    {
        refresh_form();
    }
    protected void dquality_SelectedIndexChanged(object sender, EventArgs e)
    {
        Fill_Quantity();
    }
    protected void ddlshade_SelectedIndexChanged(object sender, EventArgs e)
    {
        Fill_Quantity();
    }
    private void Fill_Quantity()
    {
        int color = 0;
        int quality = 0;
        int design = 0;
        int shape = 0;
        int size = 0;
        int shadeColor = 0;
        if ((ql.Visible == true && dquality.SelectedIndex > 0) || ql.Visible != true)
        {
            quality = 1;
        }
        if (dsn.Visible == true && dddesign.SelectedIndex > 0 || dsn.Visible != true)
        {
            design = 1;
        }
        if (clr.Visible == true && ddcolor.SelectedIndex > 0 || clr.Visible != true)
        {
            color = 1;
        }
        if (shp.Visible == true && ddshape.SelectedIndex > 0 || shp.Visible != true)
        {
            shape = 1;
        }
        if (sz.Visible == true && ddsize.SelectedIndex > 0 || sz.Visible != true)
        {
            size = 1;
        }
        if (shd.Visible == true && ddlshade.SelectedIndex > 0 || shd.Visible != true)
        {
            shadeColor = 1;
        }
        if (quality == 1 && design == 1 && color == 1 && shape == 1 && size == 1 && shadeColor == 1)
        {
            SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
            con.Open();
            SqlTransaction Tran = con.BeginTransaction();
            try
            {
                int finishedid = Convert.ToInt32(UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, Tran, ddlshade, ""));
                if (finishedid > 0)
                {
                    TxtApprovedQty.Text = SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(sum(Qty),0) Qty From PurchaseIndentMaster PIM inner join PurchaseIndentDetail PID on PIM.PIndentId=PID.PIndentId inner join PurchaseIndentApproval PIA on PIA.PIndentNo=PIM.PIndentNo where PIM.PIndentid="+ddindentno.SelectedValue+" and FinishedId="+finishedid).ToString();
                    TxtPreIssueQty.Text = SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(sum(Quantity),0) Qty From PurchaseIndentIssue PII inner join PurchaseIndentIssueTran PIT on PIT.PIndentIssueId=PII.PIndentIssueId where IndentId=" + ddindentno.SelectedValue + " and FinishedId=" + finishedid).ToString();
                    ddlunit.SelectedValue = SqlHelper.ExecuteScalar(Tran, CommandType.Text, "select isnull(UnitId,0) from PurchaseIndentDetail where PIndentId=" + ddindentno.SelectedValue + " and FinishedId=" + finishedid).ToString();
                    Tran.Commit();
                }
            }
            catch (Exception ex)
            {
                UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
            }
            finally
            {
                con.Close();
                con.Dispose();
            }
        }
        else
        {
            TxtApprovedQty.Text = "";
            TxtPreIssueQty.Text = "";
        }
    }
    protected void dddesign_SelectedIndexChanged(object sender, EventArgs e)
    {
        Fill_Quantity();
    }
    protected void ddcolor_SelectedIndexChanged(object sender, EventArgs e)
    {
        Fill_Quantity();
    }
    protected void ddshape_SelectedIndexChanged(object sender, EventArgs e)
    {
        Fill_Quantity();
    }
    protected void ddsize_SelectedIndexChanged(object sender, EventArgs e)
    {
        Fill_Quantity();
    }
    protected void txtqty_TextChanged(object sender, EventArgs e)
    {
        fill_text();
    }
    private void fill_text()
    {
        if (TxtRate.Text != "" && txtqty.Text != "")
        {
            double Rate = Convert.ToDouble(TxtRate.Text);
            double Qty = Convert.ToDouble(txtqty.Text);
            TxtAmount.Text = (Rate * Qty).ToString();
            double TotalAmt = 0.00;
            double NetAmt = 0.00;
            double Sat = 0.00;
            double Vat = TxtExceisDuty.Text != "" ? Convert.ToDouble(TxtExceisDuty.Text) : 0.00;
            double CST = TxtCst.Text != "" ? Convert.ToDouble(TxtCst.Text) : 0.00;
            double frieghtrate = txtfrieghtrate.Text != "" ? Convert.ToDouble(txtfrieghtrate.Text) : 0.00;
            SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
            con.Open();
            SqlTransaction tran = con.BeginTransaction();
            try
            {
                string str = "select Quantity,Rate,Amount from PurchaseIndentIssueTran where PIndentIssueId=" + Session["PIndentIssueId"];
                DataSet DS = SqlHelper.ExecuteDataset(tran, CommandType.Text, str);
                int n = DS.Tables[0].Rows.Count;
                if (n > 0)
                {
                    for (int i = 0; i < n; i++)
                    {
                        Sat = Sat + frieghtrate * Convert.ToDouble(DS.Tables[0].Rows[i]["Quantity"]);
                        TotalAmt = TotalAmt + Convert.ToDouble(DS.Tables[0].Rows[i]["Amount"]);
                    }
                }
                Sat = Sat + frieghtrate * Convert.ToDouble(txtqty.Text);
                TotalAmt = TotalAmt + Convert.ToDouble(TxtAmount.Text);
                TxtNetAmount.Text = (Sat + TotalAmt).ToString();
                TxtTotalAmount.Text = TotalAmt.ToString();
                TotalAmt = TotalAmt * Vat / 100;
                NetAmt = Convert.ToDouble(TxtNetAmount.Text) + TotalAmt + TotalAmt * (Convert.ToDouble(TxtEduCess.Text != "" ? TxtEduCess.Text : "0.00") / 100);
                TxtNetAmount.Text = Math.Round((NetAmt + NetAmt * CST / 100), 2).ToString();
                tran.Commit();
            }
            catch (Exception ex)
            {
                UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
                tran.Rollback();
            }
            finally
            {
                con.Close();
                con.Dispose();
            }
        }
    }
    protected void TxtRate_TextChanged(object sender, EventArgs e)
    {
        fill_text();
        TxtLotNo.Focus();
    }
    protected void TxtExceisDuty_TextChanged(object sender, EventArgs e)
    {
        fill_text();
        TxtEduCess.Focus();
    }
    protected void TxtEduCess_TextChanged(object sender, EventArgs e)
    {
        fill_text();
    }
    protected void TxtCst_TextChanged(object sender, EventArgs e)
    {
        fill_text();
    }
    protected void txtfrieghtrate_TextChanged(object sender, EventArgs e)
    {
        fill_text();
    }
    protected void btnclose_Click(object sender, EventArgs e)
    {
        Response.Redirect("../../Main.aspx");
    }
    protected void TxtProdCode_TextChanged(object sender, EventArgs e)
    {
        DataSet ds1;
        string Str;
        if (TxtProdCode.Text != "")
        {
            ddCatagory.SelectedIndex = -1;
            Str = @"select IPM.*,IM.CATEGORY_ID,cs.id from ITEM_PARAMETER_MASTER IPM,ITEM_MASTER IM,CategorySeparate cs where IPM.ITEM_ID=IM.ITEM_ID and im.CATEGORY_ID=cs.Categoryid
                  and ProductCode='" + TxtProdCode.Text + "'";
            ds1 = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, Str);
            if (ds1.Tables[0].Rows.Count > 0)
            {
                UtilityModule.ConditionalComboFill(ref ddCatagory, @"SELECT dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID, dbo.ITEM_CATEGORY_MASTER.CATEGORY_NAME  FROM  dbo.CategorySeparate INNER JOIN
                dbo.ITEM_CATEGORY_MASTER ON dbo.CategorySeparate.Categoryid = dbo.ITEM_CATEGORY_MASTER.CATEGORY_ID", true, "Select Catagory");
                ddCatagory.SelectedValue = ds1.Tables[0].Rows[0]["CATEGORY_ID"].ToString();
                UtilityModule.ConditionalComboFill(ref dditemname, "Select Distinct Item_Id,Item_Name from Item_Master where Category_Id=" + ddCatagory.SelectedValue, true, "--Select Item--");
                dditemname.SelectedValue = ds1.Tables[0].Rows[0]["ITEM_ID"].ToString();
                UtilityModule.ConditionalComboFill(ref dquality, "select qualityid,qualityname from quality where item_id=" + dditemname.SelectedValue, true, "Select Quallity");
                dquality.SelectedValue = ds1.Tables[0].Rows[0]["QUALITY_ID"].ToString();
                UtilityModule.ConditionalComboFill(ref dddesign, "select distinct Designid,DesignName from Design Order  by DesignName", true, "Select Design");
                dddesign.SelectedValue = ds1.Tables[0].Rows[0]["DESIGN_ID"].ToString();
                UtilityModule.ConditionalComboFill(ref ddcolor, "SELECT ColorId,ColorName FROM Color", true, "--Select Color--");
                ddcolor.SelectedValue = ds1.Tables[0].Rows[0]["COLOR_ID"].ToString();
                UtilityModule.ConditionalComboFill(ref ddshape, "select Shapeid,ShapeName from Shape Order by ShapeName", true, "--Select Shape--");
                ddshape.SelectedValue = ds1.Tables[0].Rows[0]["SHAPE_ID"].ToString();
                UtilityModule.ConditionalComboFill(ref ddsize, "SELECT SIZEID,SIZEFT fROM SIZE WhERE SHAPEID=" + ddshape.SelectedValue + "", true, "--SELECT SIZE--");
                ddsize.SelectedValue = ds1.Tables[0].Rows[0]["SIZE_ID"].ToString();
                Session["finishedid"] = ds1.Tables[0].Rows[0]["Item_Finished_id"].ToString();
                if (Convert.ToInt32(dquality.SelectedValue) > 0)
                {
                    ql.Visible = true;
                }
                else
                {
                    ql.Visible = false;
                }
                int d = (dddesign.SelectedIndex > 0 ? Convert.ToInt32(dddesign.SelectedValue) : 0);
                if (d > 0)
                {
                    dsn.Visible = true;
                }
                else
                {
                    dsn.Visible = false;
                }
                int c = (ddcolor.SelectedIndex > 0 ? Convert.ToInt32(ddcolor.SelectedValue) : 0);
                if (c > 0)
                {
                    clr.Visible = true;
                }
                else
                {
                    clr.Visible = false;
                }
                int s = (ddshape.SelectedIndex > 0 ? Convert.ToInt32(ddshape.SelectedValue) : 0);
                if (s > 0)
                {
                    shp.Visible = true;
                }
                else
                {
                    shp.Visible = false;
                }
                int si = (ddsize.SelectedIndex > 0 ? Convert.ToInt32(ddsize.SelectedValue) : 0);
                if (si > 0)
                {
                    sz.Visible = true;
                }
                else
                {
                    sz.Visible = false;
                }
                UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" +dditemname.SelectedValue, true, "Select Unit");
                Label2.Visible = false;
            }
            else
            {
                Label2.Visible = true;
                TxtProdCode.Text = "";
                TxtProdCode.Focus();
            }
        }
        else
        {
            ddCatagory.SelectedValue = null;
        }
    }
    [System.Web.Services.WebMethodAttribute(), System.Web.Script.Services.ScriptMethodAttribute()]
    public static string[] GetQuality(string prefixText, int count)
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        string strQuery = "Select ProductCode from ITEM_PARAMETER_MASTER IPM inner join item_Master IM on IM.Item_Id=IPM.Item_Id inner join CategorySeparate CS on CS.CategoryId=IM.Category_Id  where ProductCode Like  '" + prefixText + "%'";
        DataSet ds = new DataSet();
        SqlDataAdapter da = new SqlDataAdapter(strQuery, con);
        da.Fill(ds);
        count = ds.Tables[0].Rows.Count;
        con.Close();
        List<string> ProductCode = new List<string>();
        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ProductCode.Add(ds.Tables[0].Rows[i][0].ToString());
        }
        con.Close();
        return ProductCode.ToArray();
    }
    protected void txtchalanno_TextChanged(object sender, EventArgs e)
    {
        DataSet ds = null;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        try
        {
            con.Open();
            ds = null;
            string sql = "select PindentIssueid,PII.Companyid,isnull(CustomerId,0) CustomerId,Partyid,isnull(OM.Orderid,0) Orderid,Indentid,Challanno,Date,PII.DueDate,Destination,PayementTermId,Insurence,Freight,FeightRate,TranportModeId,DeliveryTermid,Formno,PII.Remarks,ExciseDuty,EduCess,CST,NetAmount,AgentName,PackingCharge from PurchaseIndentIssue PII Left Outer join OrderMaster OM on OM.OrderId=PII.OrderId  where ChallanNo='" + txtchalanno.Text + "'";
            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, sql);
            if (ds.Tables[0].Rows.Count > 0)
            {
                if (Convert.ToInt32(ds.Tables[0].Rows[0]["IndentId"]) > 0)
                {
                    chkindentvise.Checked = true;
                }
                else if (Convert.ToInt32(ds.Tables[0].Rows[0]["CustomerId"]) > 0)
                {
                    chkcustomervise.Checked = true;
                }
                if (chkindentvise.Checked)
                {
                    if (chkindentvise.Checked)
                    {
                        chkcustomervise.Checked = false;
                    }
                    OnCheckedChange();
                    ddempname.SelectedValue = ds.Tables[0].Rows[0]["PartyId"].ToString();
                    UtilityModule.ConditionalComboFill(ref ddindentno, "select distinct PIndentId,pindentno from PurchaseIndentMaster where partyid=" + ddempname.SelectedValue, true, "Select IndentNo");
                    ddindentno.SelectedValue = ds.Tables[0].Rows[0]["IndentId"].ToString();
                    UtilityModule.ConditionalComboFill(ref DDChallanNo, "select PIndentIssueId,Challanno from PurchaseIndentIssue where OrderId=0 and IndentId=" + ddindentno.SelectedValue, true, "---Select---");
                    DDChallanNo.SelectedValue = ds.Tables[0].Rows[0]["PIndentIssueId"].ToString();
                    UtilityModule.ConditionalComboFill(ref ddCatagory, @" select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm 
                    Inner Join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID inner join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id
                    Inner Join PurchaseIndentDetail pim on pim.finishedid=ipm.ITEM_FINISHED_ID where pim.pindentid=" + ddindentno.SelectedValue, true, "Select Category");
                    DDChallanNo.SelectedValue = ds.Tables[0].Rows[0]["PIndentIssueId"].ToString();
                }
                else if (chkcustomervise.Checked)
                {
                    if (chkcustomervise.Checked)
                    {
                        chkindentvise.Checked = false;
                    }
                    OnCheckedChange();
                    ddcustomercode.SelectedValue = ds.Tables[0].Rows[0]["CustomerId"].ToString();
                    UtilityModule.ConditionalComboFill(ref ddorderno, "select distinct orderid,customerorderno from OrderMaster where customerid=" + ddcustomercode.SelectedValue, true, "Select OrderNo.");
                    ddorderno.SelectedValue = ds.Tables[0].Rows[0]["Orderid"].ToString();
                    UtilityModule.ConditionalComboFill(ref DDChallanNo, "select PIndentIssueId,Challanno from PurchaseIndentIssue where IndentId=0 and OrderId=" + ddorderno.SelectedValue, true, "--Select--");
                    DDChallanNo.SelectedValue = ds.Tables[0].Rows[0]["PIndentIssueId"].ToString();
                    UtilityModule.ConditionalComboFill(ref ddCatagory, @"select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm inner join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID
                    Inner Join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id  inner join orderdetail od on od.ITEM_FINISHED_ID=ipm.ITEM_FINISHED_ID where od.orderid=" + ddorderno.SelectedValue, true, "Select Category");    
                }
                else
                {
                    UtilityModule.ConditionalComboFill(ref DDChallanNo, "select PIndentIssueId,Challanno from PurchaseIndentIssue where IndentId=0 and OrderId=0", true, "--Select--");
                    DDChallanNo.SelectedValue = ds.Tables[0].Rows[0]["PIndentIssueId"].ToString();
                }
                ddCompName.SelectedValue = ds.Tables[0].Rows[0]["CompanyId"].ToString();
                ddempname.SelectedValue = ds.Tables[0].Rows[0]["PartyId"].ToString();
                ddempname.SelectedValue = ds.Tables[0].Rows[0]["PartyId"].ToString();
                UtilityModule.ConditionalComboFill(ref ddCatagory, @" select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm 
                Inner Join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID inner join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id
                Inner Join PurchaseIndentDetail pim on pim.finishedid=ipm.ITEM_FINISHED_ID where pim.pindentid=" + ddindentno.SelectedValue, true, "Select Category");
                ddCatagory.SelectedIndex = 1;
                ddlcategorycange();
                Fill_Item();
                Label1.Text = "";
            }
            else
            {
                Label1.Visible = true;
                Label1.Text = "Error: Challan No Does not exist.............";
                txtchalanno.Text = "";
                txtchalanno.Focus();
                ddcustomercode.SelectedValue = null;
                ddindentno.SelectedValue = null;
                ddempname.SelectedValue = null;
                DDChallanNo.SelectedValue = null;
            }
            Fill_Grid();
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Master/Purchase/EditPurchageIndentIssue.aspx");
        }
        finally
        {
            if (con.State == ConnectionState.Open)
            {
                con.Close();
            }
        }
    }
    protected void DDChallanNo_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (chkindentvise.Checked)
        {
            UtilityModule.ConditionalComboFill(ref ddCatagory, @" select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm 
            Inner Join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID inner join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id
            Inner Join PurchaseIndentDetail pim on pim.finishedid=ipm.ITEM_FINISHED_ID 
            Where pim.pindentid=" + ddindentno.SelectedValue, true, "Select Category");
        }
        else if (chkcustomervise.Checked)
        {
            UtilityModule.ConditionalComboFill(ref ddCatagory, @"select distinct icm.CATEGORY_ID,icm.CATEGORY_NAME from ITEM_CATEGORY_MASTER icm inner join ITEM_MASTER im on icm.CATEGORY_ID=im.CATEGORY_ID
            Inner Join ITEM_PARAMETER_MASTER ipm on ipm.item_id=im.item_id  inner join orderdetail od on od.ITEM_FINISHED_ID=ipm.ITEM_FINISHED_ID 
            Where od.orderid=" + ddorderno.SelectedValue, true, "Select Category");    
        }
        Fill_Grid();
    }
   
    protected void gddetail_RowCreated(object sender, GridViewRowEventArgs e)
    {
        //Add CSS class on header row.
        if (e.Row.RowType == DataControlRowType.Header)
            e.Row.CssClass = "header";
        //Add CSS class on normal row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Normal)
            e.Row.CssClass = "normal";
        //Add CSS class on alternate row.
        if (e.Row.RowType == DataControlRowType.DataRow &&
                  e.Row.RowState == DataControlRowState.Alternate)
            e.Row.CssClass = "alternate";
    }
}
